/*! For license information please see main.b203d810.js.LICENSE.txt */
(self.webpackChunkinfosum_docs=self.webpackChunkinfosum_docs||[]).push([[377],{723:(e,n,t)=>{"use strict";t.d(n,{Z:()=>N});var r=t(67294),_=t(87462),a=t(68356),i=t.n(a),E=t(16887);const s={"01a85c17":[()=>Promise.all([t.e(532),t.e(13)]).then(t.bind(t,91223)),"@theme/BlogTagsListPage",91223],"031cd6c4":[()=>t.e(107).then(t.t.bind(t,91421,19)),"~blog/default/infosum-docs-blog-tags-developer-008-list.json",91421],"06c094d2":[()=>t.e(179).then(t.bind(t,62042)),"@site/docs/getting-started/transforming-a-file.mdx",62042],"0e384e19":[()=>t.e(671).then(t.bind(t,59881)),"@site/docs/intro.md",59881],17896441:[()=>Promise.all([t.e(532),t.e(36),t.e(918)]).then(t.bind(t,99055)),"@theme/DocItem",99055],"1be78505":[()=>Promise.all([t.e(532),t.e(514)]).then(t.bind(t,19963)),"@theme/DocPage",19963],"1cf37229":[()=>t.e(186).then(t.t.bind(t,91137,19)),"~blog/default/infosum-docs-blog-tags-infosum-6fc.json",91137],"1df93b7f":[()=>Promise.all([t.e(532),t.e(237)]).then(t.bind(t,78391)),"@site/src/pages/index.tsx",78391],"1e8ffffe":[()=>t.e(720).then(t.t.bind(t,4479,19)),"~blog/default/infosum-docs-blog-tags-welcome-ec1-list.json",4479],"26dbebdc":[()=>t.e(577).then(t.t.bind(t,69162,19)),"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-0/plugin-route-context-module-100.json",69162],"2c0aace0":[()=>t.e(569).then(t.t.bind(t,41837,19)),"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-0/redocApiSpecV1.2-plugin-redoc-0.json",41837],"3ab16766":[()=>t.e(318).then(t.t.bind(t,63140,19)),"~blog/default/infosum-docs-blog-tags-documentation-ee8-list.json",63140],"414b77a9":[()=>t.e(842).then(t.bind(t,20149)),"@site/docs/transform/index.md",20149],"44cec8cd":[()=>t.e(14).then(t.t.bind(t,51765,19)),"~blog/default/infosum-docs-blog-archive-7d8.json",51765],"4e23c930":[()=>t.e(386).then(t.t.bind(t,53341,19)),"~blog/default/infosum-docs-blog-tags-welcome-ec1.json",53341],"54c82979":[()=>t.e(329).then(t.bind(t,15262)),"@site/docs/getting-started/index.md",15262],"5e9f5e1a":[()=>Promise.resolve().then(t.bind(t,36809)),"@generated/docusaurus.config",36809],"625b1ed7":[()=>t.e(168).then(t.bind(t,71245)),"@site/docs/authentication.md",71245],"6875c492":[()=>Promise.all([t.e(532),t.e(36),t.e(48),t.e(610)]).then(t.bind(t,41714)),"@theme/BlogTagsPostsPage",41714],"716d6e8b":[()=>t.e(232).then(t.t.bind(t,97831,19)),"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-1/redocApiLayoutV1-plugin-redoc-1.json",97831],"7661071f":[()=>t.e(642).then(t.bind(t,36911)),"@site/blog/2021-08-26-welcome/index.md?truncated=true",36911],"814f3328":[()=>t.e(535).then(t.t.bind(t,45641,19)),"~blog/default/blog-post-list-prop-default.json",45641],"935f2afb":[()=>t.e(53).then(t.t.bind(t,1109,19)),"~docs/default/version-current-metadata-prop-751.json",1109],"975dba38":[()=>t.e(976).then(t.t.bind(t,71626,19)),"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-1/plugin-route-context-module-100.json",71626],"9de40055":[()=>t.e(240).then(t.t.bind(t,57495,19)),"~blog/default/infosum-docs-blog-tags-developer-008.json",57495],"9e4087bc":[()=>t.e(608).then(t.bind(t,63169)),"@theme/BlogArchivePage",63169],a3fb953e:[()=>t.e(705).then(t.t.bind(t,65201,19)),"~blog/default/infosum-docs-blog-75e.json",65201],a6aa9e1f:[()=>Promise.all([t.e(532),t.e(36),t.e(48),t.e(89)]).then(t.bind(t,80046)),"@theme/BlogListPage",80046],aae24946:[()=>t.e(387).then(t.t.bind(t,18943,19)),"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-1/redocApiSpecV1.2-plugin-redoc-1.json",18943],af23092a:[()=>t.e(94).then(t.t.bind(t,39206,19)),"~blog/default/infosum-docs-blog-tags-tags-f2f.json",39206],b53cb62d:[()=>t.e(264).then(t.t.bind(t,24469,19)),"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-content-blog/default/plugin-route-context-module-100.json",24469],b8de503b:[()=>t.e(873).then(t.t.bind(t,35855,19)),"~blog/default/infosum-docs-blog-tags-documentation-ee8.json",35855],ba5a679b:[()=>t.e(975).then(t.t.bind(t,15745,19)),"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-content-pages/default/plugin-route-context-module-100.json",15745],bef04aef:[()=>t.e(834).then(t.bind(t,4785)),"@site/docs/cloudvaults/index.md",4785],ccc49370:[()=>Promise.all([t.e(532),t.e(36),t.e(48),t.e(103)]).then(t.bind(t,65203)),"@theme/BlogPostPage",65203],cd14c842:[()=>t.e(703).then(t.t.bind(t,83769,19)),"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-content-docs/default/plugin-route-context-module-100.json",83769],d9f32620:[()=>t.e(914).then(t.bind(t,62900)),"@site/blog/2021-08-26-welcome/index.md",62900],e9674ec5:[()=>t.e(331).then(t.t.bind(t,21294,19)),"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-0/redocApiLayoutV1-plugin-redoc-0.json",21294],ef1f2a58:[()=>t.e(429).then(t.t.bind(t,23814,19)),"~blog/default/infosum-docs-blog-tags-infosum-6fc-list.json",23814],f0ad3fbb:[()=>Promise.all([t.e(532),t.e(527),t.e(612)]).then(t.bind(t,83527)),"@theme/ApiDoc",83527],fcd59481:[()=>Promise.all([t.e(532),t.e(789)]).then(t.bind(t,80569)),"@site/docs/getting-started/uploading-a-file-from-aws-s3-to-a-cloudvault.mdx",80569]};function T(e){let{error:n,retry:t,pastDelay:_}=e;return n?r.createElement("div",{style:{textAlign:"center",color:"#fff",backgroundColor:"#fa383e",borderColor:"#fa383e",borderStyle:"solid",borderRadius:"0.25rem",borderWidth:"1px",boxSizing:"border-box",display:"block",padding:"1rem",flex:"0 0 50%",marginLeft:"25%",marginRight:"25%",marginTop:"5rem",maxWidth:"50%",width:"100%"}},r.createElement("p",null,String(n)),r.createElement("div",null,r.createElement("button",{type:"button",onClick:t},"Retry"))):_?r.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",height:"100vh"}},r.createElement("svg",{id:"loader",style:{width:128,height:110,position:"absolute",top:"calc(100vh - 64%)"},viewBox:"0 0 45 45",xmlns:"http://www.w3.org/2000/svg",stroke:"#61dafb"},r.createElement("g",{fill:"none",fillRule:"evenodd",transform:"translate(1 1)",strokeWidth:"2"},r.createElement("circle",{cx:"22",cy:"22",r:"6",strokeOpacity:"0"},r.createElement("animate",{attributeName:"r",begin:"1.5s",dur:"3s",values:"6;22",calcMode:"linear",repeatCount:"indefinite"}),r.createElement("animate",{attributeName:"stroke-opacity",begin:"1.5s",dur:"3s",values:"1;0",calcMode:"linear",repeatCount:"indefinite"}),r.createElement("animate",{attributeName:"stroke-width",begin:"1.5s",dur:"3s",values:"2;0",calcMode:"linear",repeatCount:"indefinite"})),r.createElement("circle",{cx:"22",cy:"22",r:"6",strokeOpacity:"0"},r.createElement("animate",{attributeName:"r",begin:"3s",dur:"3s",values:"6;22",calcMode:"linear",repeatCount:"indefinite"}),r.createElement("animate",{attributeName:"stroke-opacity",begin:"3s",dur:"3s",values:"1;0",calcMode:"linear",repeatCount:"indefinite"}),r.createElement("animate",{attributeName:"stroke-width",begin:"3s",dur:"3s",values:"2;0",calcMode:"linear",repeatCount:"indefinite"})),r.createElement("circle",{cx:"22",cy:"22",r:"8"},r.createElement("animate",{attributeName:"r",begin:"0s",dur:"1.5s",values:"6;1;2;3;4;5;6",calcMode:"linear",repeatCount:"indefinite"}))))):null}var o=t(99670),d=t(30226);function I(e,n){if("*"===e)return i()({loading:T,loader:()=>t.e(972).then(t.bind(t,4972)),modules:["@theme/NotFound"],webpack:()=>[4972],render(e,n){const t=e.default;return r.createElement(d.z,{value:{plugin:{name:"native",id:"default"}}},r.createElement(t,n))}});const a=E[e+"-"+n],I={},N=[],O=[],u=(0,o.Z)(a);return Object.entries(u).forEach((e=>{let[n,t]=e;const r=s[t];r&&(I[n]=r[0],N.push(r[1]),O.push(r[2]))})),i().Map({loading:T,loader:I,modules:N,webpack:()=>O,render(n,t){const i=JSON.parse(JSON.stringify(a));Object.entries(n).forEach((n=>{let[t,r]=n;const _=r.default;if(!_)throw new Error("The page component at "+e+" doesn't have a default export. This makes it impossible to render anything. Consider default-exporting a React component.");"object"!=typeof _&&"function"!=typeof _||Object.keys(r).filter((e=>"default"!==e)).forEach((e=>{_[e]=r[e]}));let a=i;const E=t.split(".");E.slice(0,-1).forEach((e=>{a=a[e]})),a[E[E.length-1]]=_}));const E=i.__comp;delete i.__comp;const s=i.__context;return delete i.__context,r.createElement(d.z,{value:s},r.createElement(E,(0,_.Z)({},i,t)))}})}const N=[{path:"/infosum-docs/api/v1",component:I("/infosum-docs/api/v1","c72"),exact:!0},{path:"/infosum-docs/api/v2",component:I("/infosum-docs/api/v2","45f"),exact:!0},{path:"/infosum-docs/blog",component:I("/infosum-docs/blog","57b"),exact:!0},{path:"/infosum-docs/blog/archive",component:I("/infosum-docs/blog/archive","f7a"),exact:!0},{path:"/infosum-docs/blog/tags",component:I("/infosum-docs/blog/tags","c2c"),exact:!0},{path:"/infosum-docs/blog/tags/developer",component:I("/infosum-docs/blog/tags/developer","e69"),exact:!0},{path:"/infosum-docs/blog/tags/documentation",component:I("/infosum-docs/blog/tags/documentation","6db"),exact:!0},{path:"/infosum-docs/blog/tags/infosum",component:I("/infosum-docs/blog/tags/infosum","144"),exact:!0},{path:"/infosum-docs/blog/tags/welcome",component:I("/infosum-docs/blog/tags/welcome","263"),exact:!0},{path:"/infosum-docs/blog/welcome",component:I("/infosum-docs/blog/welcome","545"),exact:!0},{path:"/infosum-docs/docs",component:I("/infosum-docs/docs","356"),routes:[{path:"/infosum-docs/docs/authentication",component:I("/infosum-docs/docs/authentication","0bf"),exact:!0,sidebar:"tutorialSidebar"},{path:"/infosum-docs/docs/cloudvaults/",component:I("/infosum-docs/docs/cloudvaults/","732"),exact:!0,sidebar:"tutorialSidebar"},{path:"/infosum-docs/docs/getting-started/",component:I("/infosum-docs/docs/getting-started/","a70"),exact:!0,sidebar:"tutorialSidebar"},{path:"/infosum-docs/docs/getting-started/transforming-a-file",component:I("/infosum-docs/docs/getting-started/transforming-a-file","55e"),exact:!0,sidebar:"tutorialSidebar"},{path:"/infosum-docs/docs/getting-started/uploading-a-file-from-aws-s3-to-a-cloudvault",component:I("/infosum-docs/docs/getting-started/uploading-a-file-from-aws-s3-to-a-cloudvault","122"),exact:!0,sidebar:"tutorialSidebar"},{path:"/infosum-docs/docs/intro",component:I("/infosum-docs/docs/intro","5c3"),exact:!0,sidebar:"tutorialSidebar"},{path:"/infosum-docs/docs/transform/",component:I("/infosum-docs/docs/transform/","770"),exact:!0,sidebar:"tutorialSidebar"}]},{path:"/infosum-docs/",component:I("/infosum-docs/","eea"),exact:!0},{path:"*",component:I("*")}]},98934:(e,n,t)=>{"use strict";t.d(n,{_:()=>_,t:()=>a});var r=t(67294);const _=r.createContext(!1);function a(e){let{children:n}=e;const[t,a]=(0,r.useState)(!1);return(0,r.useEffect)((()=>{a(!0)}),[]),r.createElement(_.Provider,{value:t},n)}},49383:(e,n,t)=>{"use strict";var r=t(67294),_=t(73935),a=t(73727),i=t(70405),E=t(10412);const s=[t(32497),t(3310),t(18320),t(52295),t(41304),t(4750),t(58968)];var T=t(723),o=t(76775),d=t(18790);function I(e){let{children:n}=e;return r.createElement(r.Fragment,null,n)}var N=t(87462),O=t(35742),u=t(52263),R=t(44996),A=t(86668),D=t(1944),S=t(94711),l=t(19727),h=t(43320),C=t(90197);function P(){const{i18n:{defaultLocale:e,localeConfigs:n}}=(0,u.Z)(),t=(0,S.l)();return r.createElement(O.Z,null,Object.entries(n).map((e=>{let[n,{htmlLang:_}]=e;return r.createElement("link",{key:n,rel:"alternate",href:t.createUrl({locale:n,fullyQualified:!0}),hrefLang:_})})),r.createElement("link",{rel:"alternate",href:t.createUrl({locale:e,fullyQualified:!0}),hrefLang:"x-default"}))}function U(e){let{permalink:n}=e;const{siteConfig:{url:t}}=(0,u.Z)(),_=function(){const{siteConfig:{url:e}}=(0,u.Z)(),{pathname:n}=(0,o.TH)();return e+(0,R.Z)(n)}(),a=n?""+t+n:_;return r.createElement(O.Z,null,r.createElement("meta",{property:"og:url",content:a}),r.createElement("link",{rel:"canonical",href:a}))}function c(){const{i18n:{currentLocale:e}}=(0,u.Z)(),{metadata:n,image:t}=(0,A.L)();return r.createElement(r.Fragment,null,r.createElement(O.Z,null,r.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),r.createElement("body",{className:l.h})),t&&r.createElement(D.d,{image:t}),r.createElement(U,null),r.createElement(P,null),r.createElement(C.Z,{tag:h.HX,locale:e}),r.createElement(O.Z,null,n.map(((e,n)=>r.createElement("meta",(0,N.Z)({key:n},e))))))}const p=new Map;function L(e){if(p.has(e.pathname))return{...e,pathname:p.get(e.pathname)};if((0,d.f)(T.Z,e.pathname).some((e=>{let{route:n}=e;return!0===n.exact})))return p.set(e.pathname,e.pathname),e;const n=e.pathname.trim().replace(/(?:\/index)?\.html$/,"")||"/";return p.set(e.pathname,n),{...e,pathname:n}}var f=t(98934),F=t(58940);function m(e){for(var n=arguments.length,t=new Array(n>1?n-1:0),r=1;r<n;r++)t[r-1]=arguments[r];const _=s.map((n=>{var r,_;const a=null!=(r=null==(_=n.default)?void 0:_[e])?r:n[e];return null==a?void 0:a(...t)}));return()=>_.forEach((e=>null==e?void 0:e()))}const M=function(e){let{children:n,location:t,previousLocation:_}=e;return(0,r.useLayoutEffect)((()=>{_!==t&&(_&&function(e){const{hash:n}=e;if(n){const e=decodeURIComponent(n.substring(1)),t=document.getElementById(e);null==t||t.scrollIntoView()}else window.scrollTo(0,0)}(t),m("onRouteDidUpdate",{previousLocation:_,location:t}))}),[_,t]),n};function w(e){const n=(0,d.f)(T.Z,e);return Promise.all(n.map((e=>null==e.route.component.preload?void 0:e.route.component.preload())))}class b extends r.Component{constructor(e){super(e),this.previousLocation=void 0,this.routeUpdateCleanupCb=void 0,this.previousLocation=null,this.routeUpdateCleanupCb=E.default.canUseDOM?m("onRouteUpdate",{previousLocation:null,location:this.props.location}):()=>{},this.state={nextRouteHasLoaded:!0}}shouldComponentUpdate(e,n){if(e.location===this.props.location)return n.nextRouteHasLoaded;const t=e.location;return this.previousLocation=this.props.location,this.setState({nextRouteHasLoaded:!1}),this.routeUpdateCleanupCb=m("onRouteUpdate",{previousLocation:this.previousLocation,location:t}),w(t.pathname).then((()=>{this.routeUpdateCleanupCb(),this.setState({nextRouteHasLoaded:!0})})).catch((e=>{console.warn(e),window.location.reload()})),!1}render(){const{children:e,location:n}=this.props;return r.createElement(M,{previousLocation:this.previousLocation,location:n},r.createElement(o.AW,{location:n,render:()=>e}))}}const g=b,X="docusaurus-base-url-issue-banner-container",y="docusaurus-base-url-issue-banner-suggestion-container",v="__DOCUSAURUS_INSERT_BASEURL_BANNER";function V(e){return"\nwindow['"+v+"'] = true;\n\ndocument.addEventListener('DOMContentLoaded', maybeInsertBanner);\n\nfunction maybeInsertBanner() {\n  var shouldInsert = window['"+v+"'];\n  shouldInsert && insertBanner();\n}\n\nfunction insertBanner() {\n  var bannerContainer = document.getElementById('"+X+"');\n  if (!bannerContainer) {\n    return;\n  }\n  var bannerHtml = "+JSON.stringify(function(e){return'\n<div id="docusaurus-base-url-issue-banner" style="border: thick solid red; background-color: rgb(255, 230, 179); margin: 20px; padding: 20px; font-size: 20px;">\n   <p style="font-weight: bold; font-size: 30px;">Your Docusaurus site did not load properly.</p>\n   <p>A very common reason is a wrong site <a href="https://docusaurus.io/docs/docusaurus.config.js/#baseurl" style="font-weight: bold;">baseUrl configuration</a>.</p>\n   <p>Current configured baseUrl = <span style="font-weight: bold; color: red;">'+e+"</span> "+("/"===e?" (default value)":"")+'</p>\n   <p>We suggest trying baseUrl = <span id="'+y+'" style="font-weight: bold; color: green;"></span></p>\n</div>\n'}(e)).replace(/</g,"\\<")+";\n  bannerContainer.innerHTML = bannerHtml;\n  var suggestionContainer = document.getElementById('"+y+"');\n  var actualHomePagePath = window.location.pathname;\n  var suggestedBaseUrl = actualHomePagePath.substr(-1) === '/'\n        ? actualHomePagePath\n        : actualHomePagePath + '/';\n  suggestionContainer.innerHTML = suggestedBaseUrl;\n}\n"}function B(){const{siteConfig:{baseUrl:e}}=(0,u.Z)();return(0,r.useLayoutEffect)((()=>{window[v]=!1}),[]),r.createElement(r.Fragment,null,!E.default.canUseDOM&&r.createElement(O.Z,null,r.createElement("script",null,V(e))),r.createElement("div",{id:X}))}function K(){const{siteConfig:{baseUrl:e,baseUrlIssueBanner:n}}=(0,u.Z)(),{pathname:t}=(0,o.TH)();return n&&t===e?r.createElement(B,null):null}function Y(){const{siteConfig:{favicon:e,title:n},i18n:{currentLocale:t,localeConfigs:_}}=(0,u.Z)(),a=(0,R.Z)(e),{htmlLang:i,direction:E}=_[t];return r.createElement(O.Z,null,r.createElement("html",{lang:i,dir:E}),r.createElement("title",null,n),r.createElement("meta",{property:"og:title",content:n}),e&&r.createElement("link",{rel:"icon",href:a}))}var G=t(44763);function q(){const e=(0,d.H)(T.Z),n=(0,o.TH)();return r.createElement(G.Z,null,r.createElement(F.M,null,r.createElement(f.t,null,r.createElement(I,null,r.createElement(Y,null),r.createElement(c,null),r.createElement(K,null),r.createElement(g,{location:L(n)},e)))))}var k=t(16887);const x=function(e){try{return document.createElement("link").relList.supports(e)}catch{return!1}}("prefetch")?function(e){return new Promise(((n,t)=>{var r,_;if("undefined"==typeof document)return void t();const a=document.createElement("link");a.setAttribute("rel","prefetch"),a.setAttribute("href",e),a.onload=()=>n(),a.onerror=()=>t();const i=null!=(r=document.getElementsByTagName("head")[0])?r:null==(_=document.getElementsByName("script")[0])?void 0:_.parentNode;null==i||i.appendChild(a)}))}:function(e){return new Promise(((n,t)=>{const r=new XMLHttpRequest;r.open("GET",e,!0),r.withCredentials=!0,r.onload=()=>{200===r.status?n():t()},r.send(null)}))};var H=t(99670);const Q=new Set,Z=new Set,W=()=>{var e,n;return(null==(e=navigator.connection)?void 0:e.effectiveType.includes("2g"))||(null==(n=navigator.connection)?void 0:n.saveData)},j={prefetch(e){if(!(e=>!W()&&!Z.has(e)&&!Q.has(e))(e))return!1;Q.add(e);const n=(0,d.f)(T.Z,e).flatMap((e=>{return n=e.route.path,Object.entries(k).filter((e=>{let[t]=e;return t.replace(/-[^-]+$/,"")===n})).flatMap((e=>{let[,n]=e;return Object.values((0,H.Z)(n))}));var n}));return Promise.all(n.map((e=>{const n=t.gca(e);return n&&!n.includes("undefined")?x(n).catch((()=>{})):Promise.resolve()})))},preload:e=>!!(e=>!W()&&!Z.has(e))(e)&&(Z.add(e),w(e))},z=Object.freeze(j);if(E.default.canUseDOM){window.docusaurus=z;const e=_.hydrate;w(window.location.pathname).then((()=>{e(r.createElement(i.B6,null,r.createElement(a.VK,null,r.createElement(q,null))),document.getElementById("__docusaurus"))}))}},58940:(e,n,t)=>{"use strict";t.d(n,{_:()=>o,M:()=>d});var r=t(67294),_=t(36809);const a=JSON.parse('{"docusaurus-theme-redoc":{"theme-redoc":{"lightTheme":{"typography":{"fontFamily":"var(--ifm-font-family-base)","fontSize":"var(--ifm-font-size-base)","lineHeight":"var(--ifm-line-height-base)","fontWeightLight":"var(--ifm-font-weight-light)","fontWeightRegular":"var(--ifm-font-weight-base)","fontWeightBold":"var(--ifm-font-weight-bold)","headings":{"fontFamily":"var(--ifm-heading-font-family)","fontWeight":"var(--ifm-heading-font-weight)","lineHeight":"var(--ifm-heading-line-height)"},"code":{"fontFamily":"var(--ifm-font-family-monospace)","lineHeight":"var(--ifm-pre-line-height)"}},"sidebar":{"width":"300px","backgroundColor":"#ffffff"},"rightPanel":{"backgroundColor":"#303846"},"colors":{"primary":{"main":"#25c2a0"}},"theme":{"prism":{"additionalLanguages":["scala"]}}},"darkTheme":{"typography":{"fontFamily":"var(--ifm-font-family-base)","fontSize":"var(--ifm-font-size-base)","lineHeight":"var(--ifm-line-height-base)","fontWeightLight":"var(--ifm-font-weight-light)","fontWeightRegular":"var(--ifm-font-weight-base)","fontWeightBold":"var(--ifm-font-weight-bold)","headings":{"fontFamily":"var(--ifm-heading-font-family)","fontWeight":"var(--ifm-heading-font-weight)","lineHeight":"var(--ifm-heading-line-height)"},"code":{"fontFamily":"var(--ifm-font-family-monospace)","lineHeight":"var(--ifm-pre-line-height)"}},"sidebar":{"width":"300px","backgroundColor":"rgb(24, 25, 26)","textColor":"#f5f6f7","arrow":{"color":"#f5f6f7"}},"colors":{"text":{"primary":"#f5f6f7","secondary":"rgba(255, 255, 255, 1)"},"gray":{"50":"#FAFAFA","100":"#F5F5F5"},"border":{"dark":"#ffffff","light":"rgba(0,0,0, 0.1)"},"primary":{"main":"#25c2a0"}},"schema":{"nestedBackground":"rgb(24, 25, 26)","typeNameColor":"rgba(255, 255, 255, 1)","typeTitleColor":"rgba(255, 255, 255, 1)"},"theme":{"prism":{"additionalLanguages":["scala"]}}},"options":{"scrollYOffset":"nav.navbar","expandSingleSchemaField":true,"menuToggle":true,"suppressWarnings":true}}},"docusaurus-plugin-redoc":{"plugin-redoc-0":{"url":"redocusaurus/plugin-redoc-0.yaml","themeId":"theme-redoc","isSpecFile":true,"spec":{"openapi":"3.0.0","info":{"title":"InfoSum Developer Documentation","description":"This page contains the documentation for the InfoSum Developer API. The methods allow you to try making requests and inspect the input and output formats.","termsOfService":"https://www.infosum.com/legals/website-terms","version":"1.0","contact":{"name":"InfoSum Support","email":"support@infosum.com"}},"tags":[{"name":"Tyrael"}],"paths":{"/api/v1/activations":{"get":{"summary":"List Activations","description":"List current activations, subject to the optional request filters.","operationId":"ListActivations","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelListActivationsResponse"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"403":{"description":"Returned when the user does not have access to activations via the InfoSum API.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"parameters":[{"name":"filter.campaign_name","description":"Campaign Name. The filter to be applied to the campaign name. Case insensitive. Supports partial names.","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter.submitted_at_filter.start_time","description":"Start. Defines the earliest time the filter is applied from. The filter\\nmatches all dates after this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.submitted_at_filter.end_time","description":"End. Defines the time the filter is applied until. The filter matches all\\ndates before this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.query_successful","description":"Query Successful. Filters activations that were successfully completed or not.","in":"query","required":false,"schema":{"type":"boolean"}},{"name":"filter.results_expired","description":"Results Expired. Filters activations that have expired or not.","in":"query","required":false,"schema":{"type":"boolean"}},{"name":"filter.push_destinations","description":"Push Destinations. Filters queries that have been pushed to the specified\\ndestinations.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.output_columns","description":"Output Columns. Filters activations by the selected output columns. Activations which contain any of the specified output columns are included in the result","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.activation_dataset_private_ids","description":"Activation Dataset Private IDs. Filters queries by the activation dataset private ID used in\\nthe query. Activations for any of the dataset private IDs specified are included in the result.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.project_ids","description":"Project IDs. Filters queries by the projects that the activation dataset\\nbelongs to. Activations whose dataset belongs to any of the specified projects are included in the result.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"sort.by","description":"By is the field to sort by.","in":"query","required":false,"schema":{"type":"string"}},{"name":"sort.order","description":"Order is the order to sort in. Defaults\\nto ascending.\\n\\n - ASCENDING: Sort in ascending order.\\n - DESCENDING: Sort in descending order.","in":"query","required":false,"schema":{"type":"string","enum":["ASCENDING","DESCENDING"],"default":"ASCENDING"}}],"tags":["Activations"]},"post":{"summary":"Queue an Activation","description":"Create an Activation and queue the query for execution. Returns immediately with an ID of the Activation created. Use the Get Activation endpoint to see if the query has run. Only available for use with Activation Datasets.","operationId":"CreateActivationQuery","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelActivationQueryStatus"}}}},"400":{"description":"Returned when the Activation Query could not be parsed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"403":{"description":"Returned when the user does not have access to activations via the InfoSum API.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"404":{"description":"Returned when the dataset(s) in the query could not be found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelCreateActivationQueryRequest"}}},"required":true},"tags":["Activations"]}},"/api/v1/activations/validate":{"post":{"summary":"Validates an Activation Query","description":"Performs validation of an Activation Query without executing it.","operationId":"ValidateActivationQuery","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelValidateActivationQueryResponse"}}}},"400":{"description":"Returned when the Activation Query is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"403":{"description":"Returned when the user does not have access to activations via the InfoSum API.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelValidateActivationQueryRequest"}}},"required":true},"tags":["Activations"]}},"/api/v1/activations/{activation_id}":{"get":{"summary":"Get an Activation","description":"Get detailed information about an Activation, including query and push statuses.","operationId":"GetActivation","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelGetActivationResponse"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"403":{"description":"Returned when the user does not have access to activations via the InfoSum API.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"404":{"description":"Returned when the requested Activation Query could not be found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"parameters":[{"name":"activation_id","description":"Activation ID\\n\\nThe unique ID of the activation to get.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Activations"]}},"/api/v1/activations/{activation_id}/push":{"post":{"summary":"Pushes the activation query results to the specified push connector","description":"Pushes the result of an activation query to the specified push connector","operationId":"PushActivationResult","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelPushActivationResultResponse"}}}},"400":{"description":"Returned when the Activation Query results could not be pushed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"403":{"description":"Returned when the user does not have access to activations via the InfoSum API.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"404":{"description":"Returned when the Activation Query can not be found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"parameters":[{"name":"activation_id","description":"Activation ID\\n\\nThe ID of the activation to push the results of.","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"push_connector_id":{"type":"string","description":"Is the ID of the Push Connector to push the results to.","title":"Push Connector ID"},"push_connector_config":{"type":"object","additionalProperties":{"type":"string"},"description":"The push connector map of Configuration Form field IDs to their values for configuring the push connector.","title":"PushConnectorConfig"}},"description":"PushActivationResultRequest is the input for the PushActivationResult endpoints.","title":"Push activation query results request"}}},"required":true},"tags":["Activations"]}},"/api/v1/activations/{activation_id}/push_connectors":{"get":{"summary":"List the permitted Push Connectors for an Activation Query","description":"Returns a list of all the Push Connectors that can be used with the specified Activation Query.","operationId":"ListActivationPushConnectors","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelListActivationPushConnectorsResponse"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"403":{"description":"Returned when the user does not have access to activations via the InfoSum API.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"404":{"description":"Returned when the Activation Query can not be found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"parameters":[{"name":"activation_id","description":"Activation ID\\n\\nIs the ID of the activation to list the permitted push connectors for.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Activations"]}},"/api/v1/base_push_connectors":{"get":{"summary":"List all base Push Connectors","description":"List all Push Connectors that can be used to create a new Push Connector.","operationId":"ListBasePushConnectors","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelListBasePushConnectorsResponse"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"tags":["Push Connectors"]}},"/api/v1/connections":{"get":{"summary":"List all available Connections","description":"List all Connections available from user owned Datasets to Datasets which the user has been granted access.","operationId":"ListConnections","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelListConnectionsResponse"}}}},"400":{"description":"Returned when an invalid request filter is used.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"parameters":[{"name":"filter.origin_private_ids","description":"Origin Private Dataset IDs. The private IDs of the Datasets to display all connections from.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.connected_datasets.private_ids","description":"PrivateIds. The filter to be applied to the private IDs of the returned\\nDatasets. Only Datasets with private IDs containing one of the strings\\nspecified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.connected_datasets.public_names","description":"PublicNames. The filter to be applied to the public names of the\\nreturned Datasets. Only Datasets with public names containing one of the\\nstring specified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.connected_datasets.public_description","description":"PublicDescription. The filter to be applied to the public descriptions\\nof the returned Datasets. Only Datasets with public descriptions\\ncontaining the string specified in this filter will be returned. Case\\ninsensitive.","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter.connected_datasets.create_time_filter.start_time","description":"Start. Defines the earliest time the filter is applied from. The filter\\nmatches all dates after this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.connected_datasets.create_time_filter.end_time","description":"End. Defines the time the filter is applied until. The filter matches all\\ndates before this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.connected_datasets.owner_ids","description":"Owner User IDs. Filters Datasets on the specified owner user IDs.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.connected_datasets.categories.ids","description":"Ids. The IDs of the Categories that must be present in the Dataset.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string","format":"int64"}}},{"name":"filter.connected_datasets.categories.min_fill_rates","description":"MinFillRates. The minimum fill rates for each category specified in Ids.\\nThese are inclusive of the bound. A value must be specified for each\\nCategory. If the user doesn\'t want to filter by fill rate, they can set\\nthe minimum fill rate to 0, which will match all fill rate values.\\nValues should be in the range 0 to 1, inclusive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"number","format":"double"}}},{"name":"filter.connected_datasets.project_ids","description":"ProjectIds. The filter to be applied to the projects associated with the returned\\nDatasets. Only Datasets within projects matching one of the project ids\\nspecified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.min_intersection","description":"Min Intersection. The lowest acceptable intersection relative to the\\nsize of the connected Dataset. This is calculated by taking the number\\nof rows in the from Dataset that are also in the to Dataset when using\\nthe \'best\' key, and diving by the total number of rows in the from\\nDataset.  Values can be between 0 and 1, inclusive. If ommitted, any\\nintersection will be allowed.","in":"query","required":false,"schema":{"type":"number","format":"double"}},{"name":"sort.by","description":"By is the field to sort by.","in":"query","required":false,"schema":{"type":"string"}},{"name":"sort.order","description":"Order is the order to sort in. Defaults\\nto ascending.\\n\\n - ASCENDING: Sort in ascending order.\\n - DESCENDING: Sort in descending order.","in":"query","required":false,"schema":{"type":"string","enum":["ASCENDING","DESCENDING"],"default":"ASCENDING"}}],"tags":["Connections"]}},"/api/v1/connections/{first_private_id}/{second_private_id}":{"get":{"summary":"Get metadata for a Connection","description":"Gets metadata for a specific Connection between two Datasets.","operationId":"GetConnection","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelGetConnectionResponse"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"404":{"description":"Returned when one or both of the Datasets could not be found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"parameters":[{"name":"first_private_id","description":"First Private Datasets ID\\n\\nThe Private ID of the first Dataset in this Connection.","in":"path","required":true,"schema":{"type":"string"}},{"name":"second_private_id","description":"Second Datasets ID\\n\\nThe Private ID of the second Dataset in this Connection.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Connections"]}},"/api/v1/datasets":{"get":{"summary":"List Datasets","description":"Lists Datasets the user has access to.","operationId":"ListDatasets","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelListDatasetsResponse"}}}},"400":{"description":"Returned when an invalid filter is used.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"parameters":[{"name":"filter.ownership","description":"OwnershipFilter. Specifies whether to return all Datasets, or only those that are\\nowned or not owned by the requesting user.\\n\\n - ANY_OWNERSHIP: Returns all Datasets the user has access to.\\n - OWNED: Only returns Datasets owned by the user.\\n - NOT_OWNED: Only returns Datasets not owned by the user.","in":"query","required":false,"schema":{"type":"string","enum":["ANY_OWNERSHIP","OWNED","NOT_OWNED"],"default":"ANY_OWNERSHIP"}},{"name":"filter.datasets.private_ids","description":"PrivateIds. The filter to be applied to the private IDs of the returned\\nDatasets. Only Datasets with private IDs containing one of the strings\\nspecified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.datasets.public_names","description":"PublicNames. The filter to be applied to the public names of the\\nreturned Datasets. Only Datasets with public names containing one of the\\nstring specified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.datasets.public_description","description":"PublicDescription. The filter to be applied to the public descriptions\\nof the returned Datasets. Only Datasets with public descriptions\\ncontaining the string specified in this filter will be returned. Case\\ninsensitive.","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter.datasets.create_time_filter.start_time","description":"Start. Defines the earliest time the filter is applied from. The filter\\nmatches all dates after this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.datasets.create_time_filter.end_time","description":"End. Defines the time the filter is applied until. The filter matches all\\ndates before this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.datasets.owner_ids","description":"Owner User IDs. Filters Datasets on the specified owner user IDs.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.datasets.categories.ids","description":"Ids. The IDs of the Categories that must be present in the Dataset.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string","format":"int64"}}},{"name":"filter.datasets.categories.min_fill_rates","description":"MinFillRates. The minimum fill rates for each category specified in Ids.\\nThese are inclusive of the bound. A value must be specified for each\\nCategory. If the user doesn\'t want to filter by fill rate, they can set\\nthe minimum fill rate to 0, which will match all fill rate values.\\nValues should be in the range 0 to 1, inclusive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"number","format":"double"}}},{"name":"filter.datasets.project_ids","description":"ProjectIds. The filter to be applied to the projects associated with the returned\\nDatasets. Only Datasets within projects matching one of the project ids\\nspecified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"sort.by","description":"By is the field to sort by.","in":"query","required":false,"schema":{"type":"string"}},{"name":"sort.order","description":"Order is the order to sort in. Defaults\\nto ascending.\\n\\n - ASCENDING: Sort in ascending order.\\n - DESCENDING: Sort in descending order.","in":"query","required":false,"schema":{"type":"string","enum":["ASCENDING","DESCENDING"],"default":"ASCENDING"}}],"tags":["Datasets"]}},"/api/v1/datasets/{private_id}":{"get":{"summary":"Get Dataset metadata","description":"Gets metadata for a specific Dataset the user owns or has access to.","operationId":"GetDataset","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelGetDatasetResponse"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"404":{"description":"Returned when the requested Dataset could not be found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"parameters":[{"name":"private_id","description":"Private Dataset ID\\n\\nThe Private ID of the Dataset to retrieve, as assigned by the user.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Datasets"]}},"/api/v1/demo_datasets":{"delete":{"summary":"Remove access to the Demo Datasets","description":"Remove access to the Demo Datasets.","operationId":"RemoveDemoDatasets","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelRemoveDemoDatasetsResponse"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"tags":["Demo Datasets"]},"post":{"summary":"Add access to the Demo Datasets","description":"Add access to the Demo Datasets for querying.","operationId":"AddDemoDatasets","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelAddDemoDatasetsResponse"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"404":{"description":"One or more Demo Datasets could not be found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelAddDemoDatasetsRequest"}}},"required":true},"tags":["Demo Datasets"]}},"/api/v1/explain":{"post":{"summary":"ExplainQuery explains how a query will be executed.","description":"Provides information about the choices made by the platfrom before executing a query.","operationId":"ExplainQuery","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelExplainQueryResponse"}}}},"400":{"description":"Returned when the Query could not be parsed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelExplainQueryRequest"}}},"required":true},"tags":["Queries"]}},"/api/v1/identity_queries":{"post":{"summary":"Create an Identity Query","description":"Queue an Identity Query for execution. Returns immediately with an ID of the Identity Query created. Only available for use with Identity Datasets.","operationId":"CreateIdentityQuery","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelIdentityQueryStatus"}}}},"400":{"description":"Returned when the IdentityQuery could not be parsed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelCreateIdentityQueryRequest"}}},"required":true},"tags":["Identity Queries"],"deprecated":true}},"/api/v1/identity_queries/push_connectors":{"post":{"summary":"Get a list of Push Connectors permitted for an Identity Query","description":"Returns a list of all the Push Connectors that can be used with this Identity Query.","operationId":"GetPermittedPushConnectors","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelGetPermittedPushConnectorsResponse"}}}},"400":{"description":"Returned when the Identity Query could not be parsed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelGetPermittedPushConnectorsRequest"}}},"required":true},"tags":["Identity Queries"],"deprecated":true}},"/api/v1/identity_queries/validate":{"post":{"summary":"Validates an Identity Query","description":"Performs validation of an Identity Query without actually executing it. Good for testing that your queries are correctly formatted.","operationId":"ValidateIdentityQuery","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelValidateIdentityQueryResponse"}}}},"400":{"description":"Returned when the Identity Query could not be parsed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelValidateIdentityQueryRequest"}}},"required":true},"tags":["Identity Queries"],"deprecated":true}},"/api/v1/identity_queries/{identity_query_id}":{"get":{"summary":"Get an Identity Query","description":"Get the current status of the Identity Query.","operationId":"GetIdentityQuery","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelIdentityQueryStatus"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"404":{"description":"Returned when the requested Identity Query could not be found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"parameters":[{"name":"identity_query_id","description":"Identity Query ID\\n\\nThe ID of the Identity Query, as returned from the CreateIdentityQuery method.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Identity Queries"],"deprecated":true}},"/api/v1/permissions":{"get":{"summary":"List all Permissions associated with the User.","description":"List all Permissions the user has offered or been offered.","operationId":"ListPermissions","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelListPermissionsResponse"}}}},"400":{"description":"Returned when an invalid request filter is used.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"parameters":[{"name":"filter.direction","description":"Direction. Specifies whether to return all Permissions, or only those that\\nare incoming or outgoing.\\n\\n - ANY_DIRECTION: Shows all Permissions.\\n - INCOMING: Only shows incoming Permissions.\\n - OUTGOING: Only shows outgoing Permissions.","in":"query","required":false,"schema":{"type":"string","enum":["ANY_DIRECTION","INCOMING","OUTGOING"],"default":"ANY_DIRECTION"}},{"name":"filter.accepted","description":"Accepted. Specifies whether to return all Permissions, or only those\\nthat have or have not been accepted by the recipient.\\n\\n - ANY_ACCEPTED: Shows all Permissions.\\n - INACTIVE: Only shows inactive Permissions.\\n - ACTIVE: Only shows active Permissions.","in":"query","required":false,"schema":{"type":"string","enum":["ANY_ACCEPTED","INACTIVE","ACTIVE"],"default":"ANY_ACCEPTED"}},{"name":"filter.owned_datasets.private_ids","description":"PrivateIds. The filter to be applied to the private IDs of the returned\\nDatasets. Only Datasets with private IDs containing one of the strings\\nspecified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.owned_datasets.public_names","description":"PublicNames. The filter to be applied to the public names of the\\nreturned Datasets. Only Datasets with public names containing one of the\\nstring specified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.owned_datasets.public_description","description":"PublicDescription. The filter to be applied to the public descriptions\\nof the returned Datasets. Only Datasets with public descriptions\\ncontaining the string specified in this filter will be returned. Case\\ninsensitive.","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter.owned_datasets.create_time_filter.start_time","description":"Start. Defines the earliest time the filter is applied from. The filter\\nmatches all dates after this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.owned_datasets.create_time_filter.end_time","description":"End. Defines the time the filter is applied until. The filter matches all\\ndates before this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.owned_datasets.owner_ids","description":"Owner User IDs. Filters Datasets on the specified owner user IDs.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.owned_datasets.categories.ids","description":"Ids. The IDs of the Categories that must be present in the Dataset.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string","format":"int64"}}},{"name":"filter.owned_datasets.categories.min_fill_rates","description":"MinFillRates. The minimum fill rates for each category specified in Ids.\\nThese are inclusive of the bound. A value must be specified for each\\nCategory. If the user doesn\'t want to filter by fill rate, they can set\\nthe minimum fill rate to 0, which will match all fill rate values.\\nValues should be in the range 0 to 1, inclusive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"number","format":"double"}}},{"name":"filter.owned_datasets.project_ids","description":"ProjectIds. The filter to be applied to the projects associated with the returned\\nDatasets. Only Datasets within projects matching one of the project ids\\nspecified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.other_datasets.private_ids","description":"PrivateIds. The filter to be applied to the private IDs of the returned\\nDatasets. Only Datasets with private IDs containing one of the strings\\nspecified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.other_datasets.public_names","description":"PublicNames. The filter to be applied to the public names of the\\nreturned Datasets. Only Datasets with public names containing one of the\\nstring specified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.other_datasets.public_description","description":"PublicDescription. The filter to be applied to the public descriptions\\nof the returned Datasets. Only Datasets with public descriptions\\ncontaining the string specified in this filter will be returned. Case\\ninsensitive.","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter.other_datasets.create_time_filter.start_time","description":"Start. Defines the earliest time the filter is applied from. The filter\\nmatches all dates after this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.other_datasets.create_time_filter.end_time","description":"End. Defines the time the filter is applied until. The filter matches all\\ndates before this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.other_datasets.owner_ids","description":"Owner User IDs. Filters Datasets on the specified owner user IDs.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.other_datasets.categories.ids","description":"Ids. The IDs of the Categories that must be present in the Dataset.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string","format":"int64"}}},{"name":"filter.other_datasets.categories.min_fill_rates","description":"MinFillRates. The minimum fill rates for each category specified in Ids.\\nThese are inclusive of the bound. A value must be specified for each\\nCategory. If the user doesn\'t want to filter by fill rate, they can set\\nthe minimum fill rate to 0, which will match all fill rate values.\\nValues should be in the range 0 to 1, inclusive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"number","format":"double"}}},{"name":"filter.other_datasets.project_ids","description":"ProjectIds. The filter to be applied to the projects associated with the returned\\nDatasets. Only Datasets within projects matching one of the project ids\\nspecified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"sort.by","description":"By is the field to sort by.","in":"query","required":false,"schema":{"type":"string"}},{"name":"sort.order","description":"Order is the order to sort in. Defaults\\nto ascending.\\n\\n - ASCENDING: Sort in ascending order.\\n - DESCENDING: Sort in descending order.","in":"query","required":false,"schema":{"type":"string","enum":["ASCENDING","DESCENDING"],"default":"ASCENDING"}}],"tags":["Permissions"]}},"/api/v1/push_connectors":{"get":{"summary":"List all Push Connectors","description":"List all Push Connectors that the recipient can use to push the results from an Identity Query.","operationId":"ListPushConnectors","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelListPushConnectorsResponse"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"parameters":[{"name":"recipient_id","description":"RecipientId. The ListPushConnectors method will return all PushConnectors that can be\\nused by the user with this ID.","in":"query","required":false,"schema":{"type":"string"}}],"tags":["Push Connectors"]}},"/api/v1/push_connectors/{base_id}":{"post":{"summary":"Create a Push Connector","description":"Create a new Push Connector, based on an existing type of Push Connector, that can be used to push the results from an Identity Query.","operationId":"CreatePushConnector","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelCreatePushConnectorResponse"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"parameters":[{"name":"base_id","description":"BaseId\\n\\nThe ID of the base Push Connector that the new Push Connector is based on.","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"A descriptive name for the new Push Connector.","title":"Name"},"recipient_ids":{"type":"array","items":{"type":"string"},"description":"A list of the user IDs of users who can use the new Push Connector. Only\\nusers in this list will be allowed to use the new template. If left empty,\\nany user will be allowed to use the new template if the owner specifies it\\nin a permission shared with them.","title":"RecipientIds"},"values":{"type":"array","items":{"$ref":"#/components/schemas/tyraelCreatePushConnectorRequestValue"},"description":"Values is a list of modified fields for the new Push Connector. Any fields\\npresent in the base Push Connector that aren\'t in this list will be left\\nunchanged in the new Push Connector.","title":"Values"}},"description":"Used to create a new Push Connector with the CreatePushConnector method.","title":"Create Push Connectors Request"}}},"required":true},"tags":["Push Connectors"]}},"/api/v1/push_connectors/{push_connector_id}":{"get":{"summary":"Get a Form for a Push Connector","description":"Returns a Form which describes the values that need to be specified in order to configure a Push Connector.","operationId":"GetPushConnectorForm","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelGetPushConnectorFormResponse"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"404":{"description":"Returned when the Push Connector could not be found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"parameters":[{"name":"push_connector_id","description":"PushConnectorId\\n\\nThe ID of the Push Connector.","in":"path","required":true,"schema":{"type":"string"}},{"name":"user_email_domain","description":"UserEmailDomain is the domain part only of the requesting user\'s email address.","in":"query","required":false,"schema":{"type":"string"}}],"tags":["Push Connectors"]}},"/api/v1/queries":{"post":{"summary":"Create a Query","description":"Queue a Query for execution. Returns immediately with an ID of the Query created.","operationId":"CreateQuery","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelQuery"}}}},"400":{"description":"Returned when the Query could not be parsed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelCreateQueryRequest"}}},"required":true},"tags":["Queries"]}},"/api/v1/queries/{query_id}":{"get":{"summary":"Get a Query","description":"Get the current status of the Query.","operationId":"GetQuery","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelQuery"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"404":{"description":"Returned when the requested Query could not be found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"parameters":[{"name":"query_id","description":"Query ID\\n\\nThe ID of the Query, as returned from the CreateQuery method.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Queries"]}},"/api/v1/queries/{query_id}/result":{"get":{"summary":"Get a Result","description":"Get the Result of a Query, when it is available.","operationId":"GetQueryResult","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelQueryResult"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"404":{"description":"Returned when the requested Result could not be found or was not yet ready.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"parameters":[{"name":"query_id","description":"Query ID\\n\\nThe ID of the Query, as returned from the CreateQuery method.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Queries"]}},"/api/v1/usage/datasets/{private_id}":{"get":{"summary":"Get Dataset credit usage","description":"Gets a time series of credit usage on the specified Dataset.","operationId":"GetDatasetUsage","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelGetDatasetUsageResponse"}}}},"400":{"description":"Returned when an invalid request filter is used.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"404":{"description":"Returned when the requested Dataset could not be found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"parameters":[{"name":"private_id","description":"Private Dataset ID\\n\\nThe Private ID of the Dataset to return usage data for.","in":"path","required":true,"schema":{"type":"string"}},{"name":"start_time","description":"Start Time. The timestamp from which to return usage data. If not specified,\\nwill default to the beginning of the current month. If specified, the\\nStartTime will be rounded down to the next group boundary as specified\\nby Grouping.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"end_time","description":"End Time. The timestamp up to which to return usage data. If not specified,\\nwill return all data up to the present moment. The EndTime will be\\nrounded up to the next group boundary as specified by Grouping.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"grouping","description":"Grouping. Specifies how to roll up a time series into discrete groups.\\n\\n - TIME_GROUPING_UNSPECIFIED: Default value - should not be used.\\n - DAY: All values within a single day will be rolled up into a single\\ndatapoint.\\n - WEEK: All values within a single week (Monday - Sunday) will be\\nrolled up into a single datapoint.\\n - MONTH: All values within a single calendar month will be rolled up\\ninto a single datapoint.\\n - YEAR: All values within a single calendar year will be rolled up into\\na single datapoint.","in":"query","required":false,"schema":{"type":"string","enum":["TIME_GROUPING_UNSPECIFIED","DAY","WEEK","MONTH","YEAR"],"default":"TIME_GROUPING_UNSPECIFIED"}}],"tags":["Datasets"]}},"/api/v1/usage/permissions/{private_id}/{recipient_id}":{"get":{"summary":"Get Permission credit usage","description":"Gets a time series of credit usage on the specified Dataset.","operationId":"GetPermissionUsage","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelGetPermissionUsageResponse"}}}},"400":{"description":"Returned when an invalid request filter is used.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"404":{"description":"Returned when the requested Permission could not be found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"parameters":[{"name":"private_id","description":"Private Dataset ID\\n\\nThe Private ID of the Dataset that the Permission is from,\\nwhich identifies the Permission to return usage data for when combined\\nwith RecipientId.","in":"path","required":true,"schema":{"type":"string"}},{"name":"recipient_id","description":"Recipient user ID\\n\\nThe user ID of the recipient of the Permission to return usage data for,\\nwhich identifies a single Permission when combined with Dataset ID.","in":"path","required":true,"schema":{"type":"string"}},{"name":"start_time","description":"Start Time. The timestamp from which to return usage data. If not specified,\\nwill default to the beginning of the current month. If specified, the\\nStartTime will be rounded down to the next group boundary as specified\\nby Grouping.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"end_time","description":"End Time. The timestamp up to which to return usage data. If not specified,\\nwill return all data up to the present moment. The EndDate will be\\nrounded up to the next group boundary as specified by Grouping.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"grouping","description":"Grouping. Specifies how to roll up a time series into discrete groups.\\n\\n - TIME_GROUPING_UNSPECIFIED: Default value - should not be used.\\n - DAY: All values within a single day will be rolled up into a single\\ndatapoint.\\n - WEEK: All values within a single week (Monday - Sunday) will be\\nrolled up into a single datapoint.\\n - MONTH: All values within a single calendar month will be rolled up\\ninto a single datapoint.\\n - YEAR: All values within a single calendar year will be rolled up into\\na single datapoint.","in":"query","required":false,"schema":{"type":"string","enum":["TIME_GROUPING_UNSPECIFIED","DAY","WEEK","MONTH","YEAR"],"default":"TIME_GROUPING_UNSPECIFIED"}}],"tags":["Permissions"]}},"/api/v1/validate":{"post":{"summary":"ValidateQuery validates a query","description":"Performs validation of a query without actually executing it. Good for testing that your queries are correctly formatted.","operationId":"ValidateQuery","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelValidateQueryResponse"}}}},"400":{"description":"Returned when the Query could not be parsed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelError"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rpcStatus"}}}}},"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/tyraelValidateQueryRequest"}}},"required":true},"tags":["Queries"]}}},"externalDocs":{"description":"Official documentation","url":"https://support.infosum.com/"},"components":{"schemas":{"SortOrder":{"type":"string","enum":["ASCENDING","DESCENDING"],"default":"ASCENDING","description":"Order defines the options for sorting the list results.\\n\\n - ASCENDING: Sort in ascending order.\\n - DESCENDING: Sort in descending order."},"protobufAny":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"rpcStatus":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"$ref":"#/components/schemas/protobufAny"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."},"tyraelAcceptedFilter":{"type":"string","enum":["ANY_ACCEPTED","INACTIVE","ACTIVE"],"default":"ANY_ACCEPTED","description":"AcceptedFilter specifies whether to return all Permissions, or only those that\\nhave or have not been accepted by the Recipient.\\n\\n - ANY_ACCEPTED: Shows all Permissions.\\n - INACTIVE: Only shows inactive Permissions.\\n - ACTIVE: Only shows active Permissions."},"tyraelActivation":{"type":"object","properties":{"summary":{"$ref":"#/components/schemas/tyraelActivationSummary"},"query_error":{"$ref":"#/components/schemas/rpcStatus"},"output_columns":{"type":"array","items":{"type":"string"},"description":"The output columns that were requested.","title":"Output Columns"},"pushes":{"type":"array","items":{"$ref":"#/components/schemas/tyraelPush"},"description":"The list of pushes for this activation.","title":"Pushes"},"query_string":{"type":"string","description":"The raw IQL query string representation of the query.","title":"Query String"}},"description":"Activation describes information about an activation."},"tyraelActivationQueryExecutionStatus":{"type":"string","enum":["QUERY_PENDING","QUERY_RUNNING","QUERY_COMPLETED"],"default":"QUERY_PENDING","description":"ActivationQueryExecutionStatus defines the different states that an activation Query can\\nbe in.\\n\\n - QUERY_PENDING: QUERY_PENDING indicates that the query is waiting to be executed.\\n - QUERY_RUNNING: QUERY_RUNNING indicates that the query is currently being executed.\\n - QUERY_COMPLETED: QUERY_COMPLETED indicates that the query has completed execution."},"tyraelActivationQueryStatus":{"type":"object","properties":{"activation_id":{"type":"string","description":"The ID of the Activation.","title":"Activation ID"},"query_completed":{"type":"boolean","description":"Whether the Query has finished or not.","title":"Query Completed"},"query_error":{"$ref":"#/components/schemas/rpcStatus"},"query_response":{"$ref":"#/components/schemas/tyraelIdentityResponse"}},"description":"Status of an Activation Query.","title":"Activation Status"},"tyraelActivationStringLiteral":{"type":"object","properties":{"column_name":{"type":"string","description":"The name of the column.","title":"Column Name"},"column_literal":{"type":"string","description":"The string literal that will be used for every row of\\nactivation data.","title":"Column Literal"}},"description":"ActivationStringLiteral contains information about a string literal\\nactivation column."},"tyraelActivationSummary":{"type":"object","properties":{"activation_id":{"type":"string","description":"A unique identifier of the activation.","title":"Activation ID"},"campaign_name":{"type":"string","description":"The optional name that is associated with a campaign.","title":"Campaign Name"},"status":{"$ref":"#/components/schemas/tyraelActivationQueryExecutionStatus"},"total_rows":{"type":"integer","format":"int64","description":"The total number of rows in the result.","title":"Total Rows"},"submitted_at":{"type":"string","format":"date-time","description":"The time when the activation was submitted.","title":"Submitted At"},"query_successful":{"type":"boolean","description":"Indicates whether the activation query successfully completed.","title":"Query Successful"},"results_expired":{"type":"boolean","description":"Indicates whether the cached results for the activation query have expired.","title":"Results Expired"},"dataset_id":{"type":"string","description":"The ID of the dataset that was used in the activation query.","title":"Dataset ID"},"project_ids":{"type":"array","items":{"type":"string"},"description":"The projects that the Activation dataset belongs to.","title":"ProjectIDs"},"column_separator":{"type":"string","description":"The separator to be used to delimit activation data\\ncolumns.","title":"Column Separator"},"string_literal_column":{"$ref":"#/components/schemas/tyraelActivationStringLiteral"},"original_record_count":{"type":"integer","format":"int64","description":"A count of the records before de-duplication","title":"Original Record Count"}},"description":"ActivationSummary describes summary information about an activation."},"tyraelActivationsFilter":{"type":"object","properties":{"campaign_name":{"type":"string","description":"The filter to be applied to the campaign name. Case insensitive. Supports partial names.","title":"Campaign Name"},"submitted_at_filter":{"$ref":"#/components/schemas/tyraelTimeRangeFilter"},"query_successful":{"type":"boolean","description":"Filters activations that were successfully completed or not.","title":"Query Successful"},"results_expired":{"type":"boolean","description":"Filters activations that have expired or not.","title":"Results Expired"},"push_destinations":{"type":"array","items":{"type":"string"},"description":"Filters queries that have been pushed to the specified\\ndestinations.","title":"Push Destinations"},"output_columns":{"type":"array","items":{"type":"string"},"description":"Filters activations by the selected output columns. Activations which contain any of the specified output columns are included in the result","title":"Output Columns"},"activation_dataset_private_ids":{"type":"array","items":{"type":"string"},"description":"Filters queries by the activation dataset private ID used in\\nthe query. Activations for any of the dataset private IDs specified are included in the result.","title":"Activation Dataset Private IDs"},"project_ids":{"type":"array","items":{"type":"string"},"description":"Filters queries by the projects that the activation dataset\\nbelongs to. Activations whose dataset belongs to any of the specified projects are included in the result.","title":"Project IDs"}},"description":"ActivationsFilter contains parameters for filtering Activations\\nbased on user visible properties."},"tyraelAddDemoDatasetsRequest":{"type":"object","description":"Used to add Demo Datasets with the AddDemoDatasets method.","title":"Add Demo Datasets Request"},"tyraelAddDemoDatasetsResponse":{"type":"object","properties":{"permissions":{"type":"array","items":{"$ref":"#/components/schemas/tyraelPermission"},"description":"Details of the permissions to the Demo Datasets.","title":"Permissions"}},"description":"Permission details of the Demo Datasets.","title":"Add Demo Datasets Response"},"tyraelAggregationPlan":{"type":"object","properties":{"private_id":{"type":"string","description":"PrivateId is the private ID of the Dataset on which the aggregation will take place.","title":"PrivateId"},"representation":{"$ref":"#/components/schemas/tyraelRepresentationPlan"},"aggregation_joins":{"$ref":"#/components/schemas/tyraelJoinPlan"},"filter_joins":{"$ref":"#/components/schemas/tyraelJoinPlan"}},"description":"Aggregation Plan is the top level aggregation of the query plan.","title":"Aggregation Plan"},"tyraelBunkerState":{"type":"string","enum":["CLAIMED","UPLOADING","UPLOADED","UPLOAD_FAILED","CONVERTING","CONVERTED","CONVERSION_FAILED","NORMALISING","NORMALISED","NORMALISATION_FAILED","ONLINE","UPGRADING","PROVISIONING"],"default":"CLAIMED","description":"BunkerState represents the state that a Bunker is in.\\n\\n - CLAIMED: The initial value when a Bunker is claimed but has not had\\ndata imported. Bunkers cannot return to this state after others have\\nbeen entered.\\n - UPLOADING: Set while data is being uploaded to the Bunker.\\n - UPLOADED: Set when the data successfully finished UPLOADING.\\n - UPLOAD_FAILED: Set when the UPLOADING stage failed.\\n - CONVERTING: Set when the data is being converted into the intermediate database.\\n - CONVERTED: Set when the data successfully finished CONVERTING.\\n - CONVERSION_FAILED: Set when the CONVERTING stage failed.\\n - NORMALISING: Set when the data is being normalised.\\n - NORMALISED: Set when NORMALISING completed successfully.\\n - NORMALISATION_FAILED: Set when the NORMALISING stage failed.\\n - ONLINE: Set when a Bunker is ready to be queried.\\n - UPGRADING: UPGRADING is set when a bunker is performing an upgrade and is inaccessible until finished\\n - PROVISIONING: PROVISIONING is set when a bunker is allocated to the user but is provisioning still"},"tyraelCategory":{"type":"object","properties":{"label":{"type":"string","description":"The text label of the Category, such as \\"Age\\" or \\"Gender\\".","title":"Label"},"representations":{"type":"array","items":{"$ref":"#/components/schemas/tyraelRepresentation"},"description":"An array of all Representations of this Category in this Dataset.","title":"Representations"},"version":{"type":"string","format":"int64","description":"The Category version number.","title":"Version"},"unit":{"type":"string","description":"The unit that this Category should be be displayed in.","title":"Unit"}},"description":"An InfoSum data Category, such as \\"Age\\" or \\"Gender\\".","title":"Category"},"tyraelCategoryFilter":{"type":"object","properties":{"ids":{"type":"array","items":{"type":"string","format":"int64"},"description":"The IDs of the Categories that must be present in the Dataset.","title":"Ids"},"min_fill_rates":{"type":"array","items":{"type":"number","format":"double"},"description":"The minimum fill rates for each category specified in Ids.\\nThese are inclusive of the bound. A value must be specified for each\\nCategory. If the user doesn\'t want to filter by fill rate, they can set\\nthe minimum fill rate to 0, which will match all fill rate values.\\nValues should be in the range 0 to 1, inclusive.","title":"MinFillRates"}},"description":"Contains parameters for specifying categories that must be present in a Dataset. For a Dataset to match the filter, it only needs to match one of the categories specified in the CategoryFilter. The Ids and MinFillRates fields should be considered together - the ID at a given index in the Ids field corresponds to the minimum fill rate at the same index in the MinFillRates field. For this reason, the same number of Ids and MinFillRates must be specified.","title":"Category Filter"},"tyraelCombinator":{"type":"object","properties":{"type":{"$ref":"#/components/schemas/tyraelCombinatorType"},"joins":{"type":"array","items":{"$ref":"#/components/schemas/tyraelJoinPlan"},"description":"Joins is a list of expected joins between two datasets.","title":"Joins"}},"description":"Combinator describes how joins are combined.","title":"Combinator"},"tyraelCombinatorType":{"type":"string","enum":["AND","OR","NOT","TRANSLATE"],"default":"AND","description":"CombinatorType is the type of operation that is performed on sub joins.\\n\\n - AND: AND indicates that the sets are intersected.\\n - OR: OR indicates that the sets are unioned.\\n - NOT: NOT indicates that the sets are negated.\\n - TRANSLATE: TRANSLATE indicates a key conversion is being applied."},"tyraelConnection":{"type":"object","properties":{"from_dataset_private_id":{"type":"string","description":"The private ID of the origin Dataset for the Connection.","title":"From Dataset Private ID"},"to_dataset_private_id":{"type":"string","description":"The private ID of the Dataset connected to the origin Dataset.","title":"To Dataset Private ID"},"keys":{"type":"array","items":{"$ref":"#/components/schemas/tyraelConnectionKey"},"description":"Contains the intersection and duplicates for each key\\nthat the Datasets have in common.","title":"Keys"},"selected_key_name":{"type":"string","description":"The name of the key that we might select for a simple\\nquery that moves the FromDataset to the ToDataset.","title":"Selected Key Name"}},"description":"A Connection between two Datasets.","title":"Connection"},"tyraelConnectionKey":{"type":"object","properties":{"name":{"type":"string","description":"The name for the key.","title":"Name"},"intersection":{"type":"string","format":"uint64","description":"The number of rows in the FromDataset that are present in\\nthe ToDataset when using this key.","title":"Intersection"},"duplicates":{"type":"string","format":"uint64","description":"Duplicates\\nThe number of duplicates from the FromDataset that are\\nfound in the ToDataset when using this key."},"bad_estimate":{"type":"boolean","description":"BadEstimate\\nFlag, is true when the estimated \'Intersection\' and \'Duplicates\'\\nare expected to be bad. More accurate values are calculated\\nin the background and should be available in a future request.\\nThe Time depends on the size of the involved datasets and on the\\namount of permitted connections."},"union":{"type":"string","format":"uint64","title":"Union is the number of rows in the FromDataset and the ToDataset minus the\\nintersection when using this key"},"exclude":{"type":"string","format":"uint64","title":"Exclude is the number of rows in the FromDataset minus the intersection\\nwhen using this key"},"intersection_expansion_count":{"type":"string","format":"int64","description":"Fields 7 and 8 have been removed as they have been deprecated and are not in use (non nullable intersection expansion/reduction counts).\\nA combination of a multi value to a single will be result in an expansion (intersection). This value needs to be nullable."},"intersection_reduction_count":{"type":"string","format":"int64","description":"A combination of a single value to a multi value will result in a reduction (intersection). This value needs to be nullable."}},"description":"Describes the intersection and duplicates from one Dataset to another when using this key.","title":"Graph Connection"},"tyraelConnectionsFilter":{"type":"object","properties":{"origin_private_ids":{"type":"array","items":{"type":"string"},"description":"The private IDs of the Datasets to display all connections from.","title":"Origin Private Dataset IDs"},"connected_datasets":{"$ref":"#/components/schemas/tyraelDatasetFilter"},"min_intersection":{"type":"number","format":"double","description":"The lowest acceptable intersection relative to the\\nsize of the connected Dataset. This is calculated by taking the number\\nof rows in the from Dataset that are also in the to Dataset when using\\nthe \'best\' key, and diving by the total number of rows in the from\\nDataset.  Values can be between 0 and 1, inclusive. If ommitted, any\\nintersection will be allowed.","title":"Min Intersection"}},"description":"Contains the filter expressions for listing Connections.","title":"Connections Filter"},"tyraelCreateActivationQueryRequest":{"type":"object","properties":{"query":{"type":"string","description":"The Query that should be executed. This takes the\\nformat of an InfoSum Activation Query. See\\nthe documentation of the InfoSum Activation Query Language\\nfor more information.","title":"Query"},"path_overrides":{"type":"array","items":{"$ref":"#/components/schemas/tyraelPathOverride"},"description":"A list of instructions on how to connect two datasets, overriding the automatic choices\\nmade by the core engine.","title":"Path Overrides"},"campaign_name":{"type":"string","description":"A name that a user can associate with an activation query.","title":"CampaignName"},"column_separator":{"type":"string","description":"The separator to be used to delimit activation data columns.","title":"Column Separator"},"string_literal_column":{"$ref":"#/components/schemas/tyraelActivationStringLiteral"}},"description":"Used to queue an Activation Query with the CreateActivationQuery endpoint.","title":"Create Activation Query Request"},"tyraelCreateIdentityQueryRequest":{"type":"object","properties":{"query":{"type":"string","description":"The Query that should be queued. This takes the\\nformat of an InfoSum Identity Query. See\\nthe documentation of the InfoSum Identity Query Language\\nfor more information.","title":"Query"},"path_overrides":{"type":"array","items":{"$ref":"#/components/schemas/tyraelPathOverride"},"description":"A list of instructions on how to connect two datasets, overriding the automatic choices\\nmade by the core engine.","title":"Path Overrides"},"push_connector_config":{"$ref":"#/components/schemas/tyraelPushConnectorConfig"},"campaign_id":{"type":"string","description":"A name that a user can associate with an identity query.","title":"CampaignId"}},"description":"Used to create an Identity Query with the CreateIdentityQuery method.","title":"Create Identity Query Request"},"tyraelCreatePushConnectorRequestValue":{"type":"object","properties":{"field_id":{"type":"string","description":"Idenitifies which field from the base Push Connector is being referred\\nto with this Value.","title":"FieldId"},"value":{"type":"string","description":"The default value for this field in the new Push Connector.","title":"Value"},"user_editable":{"type":"boolean","description":"If true, Value can be considered a default value, and anyone using the\\nPush Connector will be able to change the value for that field.\\nIf false, users will not be able to change or see this value, and\\nwhatever Value is set to will be used when pushing Identity Results.","title":"UserEditable"}},"description":"Value defines the value of a field in a Push Connector."},"tyraelCreatePushConnectorResponse":{"type":"object","properties":{"push_connector":{"$ref":"#/components/schemas/tyraelPushConnector"}},"description":"The ID and name of the new Push Connector.","title":"Create Push Connector Response"},"tyraelCreateQueryRequest":{"type":"object","properties":{"query":{"type":"string","description":"The Query that should be queued. This takes the\\nformat of an InfoSum Query Language Query. See\\nthe documentation of the InfoSum Query Language\\nfor more information.","title":"Query"},"path_overrides":{"type":"array","items":{"$ref":"#/components/schemas/tyraelPathOverride"},"description":"A list of instructions on how to connect two datasets, overriding the automatic choices\\nmade by the core engine.","title":"Path Overrides"},"sample":{"type":"boolean","description":"A flag that can be used to execute the query against a smaller sample\\nof the data. Can be used to reduce the execution time for a less accurate\\nresult.","title":"Sample"}},"description":"Used to create a Query with the CreateQuery method.","title":"Create Query Request"},"tyraelCreditShare":{"type":"object","properties":{"user":{"$ref":"#/components/schemas/tyraelUser"},"allowance":{"type":"integer","format":"int64","description":"The number of credits allocated to this Share per billing cycle.","title":"Allowance"},"current_allowance":{"type":"integer","format":"int64","description":"The number of credits that may be used on this Share in\\nthe current billing cycle.","title":"CurrentAllowance"},"used":{"type":"integer","format":"int64","description":"The number of credits used by this User in this billing cycle.","title":"Used"},"uses_parent_allocation":{"type":"boolean","description":"Indicates whether this User was allocated a specific\\nnumber of credits, or if they consume credits directly from the Dataset.\\nIf true, Allowance and CurrentAllowance may be ignored.","title":"UsesParentAllocation"}},"description":"The credits allowance and usage on a specific Permission.","title":"Credit Share"},"tyraelCredits":{"type":"object","properties":{"allocation":{"type":"integer","format":"int64","description":"The number of credits that may be used per billing cycle.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"Allocation"},"current_allocation":{"type":"integer","format":"int64","description":"The maximum number of credits that may be used in\\nThis field is only returned if the requesting user is the owner of the Dataset.\\nthe current billing cycle.","title":"CurrentAllocation"},"used":{"type":"integer","format":"int64","description":"The number of credits used in the this billing cycle.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"Used"},"shares":{"type":"array","items":{"$ref":"#/components/schemas/tyraelCreditShare"},"description":"A breakdown of how many credits have been allocated and\\nused for each Permission. For non-owners, only the share\\nrelated to their Permission is shown.","title":"Shares"}},"description":"The credits allocation and usage for a Dataset.","title":"Credits"},"tyraelDataType":{"type":"string","enum":["STRINGS","BOOLEANS","INTEGERS","INTEGER_RANGES","STRING_SET","INTEGER_SET"],"default":"STRINGS","description":"DataType defines the different types of data a Representation can take.\\n\\n - STRINGS: String values. Representations of this type are suitable for use with\\na BARCHART aggregation.\\n - BOOLEANS: Either True or False. Representations of this type are suitable for use with\\na BARCHART aggregation.\\n - INTEGERS: Signed integer values. Representations of this type are suitable for use with\\na HISTOGRAM aggregation.\\n - INTEGER_RANGES: Ranges of signed integer values, expressed as tuples of [low, high).\\nThe lower value is inclusive and the higher value is exclusive.\\nRepresentations of this type are suitable for use with a HISTOGRAM aggregation.\\n - STRING_SET: String set represents unique list of string.\\n - INTEGER_SET: Integer set represents unique list of integers."},"tyraelDataset":{"type":"object","properties":{"private_id":{"type":"string","description":"The private ID assigned to the Dataset.\\nThis is assigned by the user and unique to them.","title":"Private ID"},"owner":{"$ref":"#/components/schemas/tyraelUser"},"public_name":{"type":"string","description":"The public name assigned to the Dataset by the Owner.","title":"Public Name"},"public_description":{"type":"string","description":"The description assigned to the Dataset by the Owner.","title":"Public Description"},"create_time":{"type":"string","format":"date-time","description":"The time when the Owner created the Dataset.","title":"Create time"},"last_queried_time":{"type":"string","format":"date-time","description":"The time when the Dataset was last queried.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"Time Last Queried"},"expire_time":{"type":"string","format":"date-time","description":"The time when this Dataset expires.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"Expire Time"},"state":{"$ref":"#/components/schemas/tyraelDatasetState"},"latest_access":{"$ref":"#/components/schemas/tyraelDatasetAccess"},"stats":{"$ref":"#/components/schemas/tyraelDatasetDescription"},"credits":{"$ref":"#/components/schemas/tyraelCredits"},"product":{"$ref":"#/components/schemas/tyraelProduct"}},"description":"A Dataset.","title":"Dataset"},"tyraelDatasetAccess":{"type":"object","properties":{"user":{"$ref":"#/components/schemas/tyraelUser"},"access_time":{"type":"string","format":"date-time","description":"The time at which the Dataset was accessed.","title":"Access Time"}},"description":"Access information about a Dataset.","title":"Dataset Access"},"tyraelDatasetDescription":{"type":"object","properties":{"version":{"$ref":"#/components/schemas/tyraelDatasetVersion"},"row_count":{"type":"string","format":"uint64","description":"The number of queryable rows in the Dataset.","title":"RowCount"},"redaction_threshold":{"type":"integer","format":"int64","description":"The minimum number of results required for a bin\\nto be included in the results returned when querying this Dataset.","title":"RedactionThreshold"},"keys":{"type":"array","items":{"$ref":"#/components/schemas/tyraelKey"},"description":"Describes all key columns.","title":"Keys"},"categories":{"type":"array","items":{"$ref":"#/components/schemas/tyraelCategory"},"description":"Describes all categories.","title":"Categories"},"identities":{"type":"array","items":{"$ref":"#/components/schemas/tyraelIdentity"},"description":"Describes all Identities.","title":"Identities"}},"description":"Contains statistical information about the Columns and Categories of the Dataset, and the Dataset itself.","title":"Dataset Description"},"tyraelDatasetFilter":{"type":"object","properties":{"private_ids":{"type":"array","items":{"type":"string"},"description":"The filter to be applied to the private IDs of the returned\\nDatasets. Only Datasets with private IDs containing one of the strings\\nspecified in this filter will be returned. Case insensitive.","title":"PrivateIds"},"public_names":{"type":"array","items":{"type":"string"},"description":"The filter to be applied to the public names of the\\nreturned Datasets. Only Datasets with public names containing one of the\\nstring specified in this filter will be returned. Case insensitive.","title":"PublicNames"},"public_description":{"type":"string","description":"The filter to be applied to the public descriptions\\nof the returned Datasets. Only Datasets with public descriptions\\ncontaining the string specified in this filter will be returned. Case\\ninsensitive.","title":"PublicDescription"},"create_time_filter":{"$ref":"#/components/schemas/tyraelTimeRangeFilter"},"owner_ids":{"type":"array","items":{"type":"string"},"description":"Filters Datasets on the specified owner user IDs.","title":"Owner User IDs"},"categories":{"$ref":"#/components/schemas/tyraelCategoryFilter"},"project_ids":{"type":"array","items":{"type":"string"},"description":"The filter to be applied to the projects associated with the returned\\nDatasets. Only Datasets within projects matching one of the project ids\\nspecified in this filter will be returned. Case insensitive.","title":"ProjectIds"}},"description":"Used to configure filtering of Datasets in List methods.","title":"Dataset Filter"},"tyraelDatasetPermissionUsage":{"type":"object","properties":{"recipient":{"$ref":"#/components/schemas/tyraelUser"},"allowance":{"type":"integer","format":"int64","description":"The number of credits that can be used on this Permission\\nper billing cycle.","title":"Allowance"},"current_allowance":{"type":"integer","format":"int64","description":"The number of credits that can be used on this\\nPermission in the current billing cycle.","title":"CurrentAllowance"},"used":{"type":"integer","format":"int64","description":"The number of credits used by the User in this billing cycle.","title":"Used"},"uses_parent_allocation":{"type":"boolean","description":"False if the User has been given their own restricted allowance,\\ntrue if they consume directly from the Dataset\'s unallocated credits.","title":"UsesParentAllocation"}},"description":"Specifies the usage and allowance for a specific Permission.","title":"Permission Usage"},"tyraelDatasetSchema":{"type":"object","properties":{"version":{"type":"string","description":"The version of this Dataset. This is based on the number\\nof revisions the user has made to their Dataset.","title":"Version"},"update_time":{"type":"string","format":"date-time","description":"The time when the Dataset was last updated.","title":"Update Time"},"categories":{"type":"array","items":{"$ref":"#/components/schemas/tyraelCategory"},"description":"The Categories that belong to this Dataset.","title":"Categories"},"num_rows":{"type":"string","format":"uint64","description":"The number of rows in the Dataset.","title":"NumRows"},"redaction_threshold":{"type":"integer","format":"int64","description":"The minimum number of results required for a bin to be included in the results\\nreturned from this Dataset.","title":"RedactionThreshold"},"keys":{"type":"array","items":{"$ref":"#/components/schemas/tyraelKey"},"description":"The Keys in this Dataset.","title":"Keys"}},"description":"Metadata about a Dataset, such as what Categories it contains.","title":"Dataset Schema"},"tyraelDatasetState":{"type":"object","properties":{"bunker_state":{"$ref":"#/components/schemas/tyraelBunkerState"},"progress":{"type":"number","format":"double","description":"Indicates how far through the current state the Bunker is.\\nThis is valid for UPLOADING, CONVERTING, and NORMALISING states only.\\nValues start at 0.0 for 0% progress, through to 1.0 for 100% complete.","title":"Progress"}},"description":"The state of a Dataset.","title":"Dataset State"},"tyraelDatasetThreshold":{"type":"object","properties":{"private_id":{"type":"string","description":"Identifies a Dataset.","title":"Private Dataset ID"},"threshold":{"type":"integer","format":"int32","description":"Threshold is the threshold for the Dataset.","title":"Threshold"}},"description":"DatasetThreshold represents a threshold associated with a dataset.","title":"Dataset Threshold"},"tyraelDatasetUsage":{"type":"object","properties":{"owner":{"$ref":"#/components/schemas/tyraelUser"},"allocation":{"type":"integer","format":"int64","description":"The total credits available for this Dataset\\nper billing cycle.","title":"Allocation"},"current_allocation":{"type":"integer","format":"int64","description":"The number of credits available for this Dataset\\nin the current billing cycle.","title":"CurrentAllocation"},"used":{"type":"integer","format":"int64","description":"The number of credits used for this Dataset in\\nthe current billing cycle.","title":"Used"},"permissions":{"type":"array","items":{"$ref":"#/components/schemas/tyraelDatasetPermissionUsage"},"description":"Contains Usage information for all Permissions on this\\nDataset.","title":"Permissions"}},"description":"The Dataset and metadata for the Dataset.","title":"Dataset Usage"},"tyraelDatasetUsageTimeValue":{"type":"object","properties":{"timestamp":{"type":"string","format":"date-time","description":"The time at which Usage was at the levels described in Usage.\\nIf usage is grouped, this will be the timestamp of the end of the interval.","title":"Timestamp"},"usage":{"$ref":"#/components/schemas/tyraelDatasetUsage"}},"description":"A single Dataset usage datapoint.","title":"Dataset Usage Value"},"tyraelDatasetVersion":{"type":"object","properties":{"version":{"type":"string","description":"A version string to represent the installed software\\nversion of the Bunker.","title":"Version"},"last_normalised_time":{"type":"string","format":"date-time","description":"The timestamp of the last normalisation run.","title":"Last Normalised Time"},"global_schema_id":{"type":"string","format":"int64","description":"The ID of the used global schema version.","title":"Global Schema ID"},"global_schema_name":{"type":"string","description":"The version/name of the used global schema.","title":"Global Schema Name"},"global_schema_status":{"type":"string","description":"The status of the used global schema,\\ne.g. \\"beta-1\\", \\"release\\".","title":"Global Schema Status"},"dataset_version":{"type":"string","description":"The version for the internal dataset held by the Bunker that should be used\\nwhen querying the Bunker.","title":"Dataset Version"}},"description":"Information about the version of the Bunker software, the global schema in use and the Dataset.","title":"Dataset Version"},"tyraelDatasetWithKeys":{"type":"object","properties":{"private_id":{"type":"string","description":"Is the private ID of the Dataset.","title":"Private ID"},"keys":{"type":"array","items":{"type":"string"},"description":"Is an ordered list of keys that can be used when joining this dataset to another dataset.\\nWhen this dataset is joined to another dataset each row in the datasets is joined using the key order defined here.\\nIf a key is missing from a specific row, the next key in the order is used.","title":"Keys"}},"description":"Represents a dataset private id with an associated list of keys to be used when joining the dataset.","title":"Dataset With Keys"},"tyraelDimension":{"type":"object","properties":{"value":{"type":"string","description":"The value associated with this Dimension.\\nThis can take several different forms, including:\\n\\n1. String values, e.g. `\\"Engineer\\"`.\\n1. Integer values, e.g. `\\"144\\"`.\\n1. Boolean values, e.g. `\\"true\\"`.\\n1. Integer Ranges, e.g. `\\"[5, 10)\\"`.\\n    This is a value which contains a lower and an upper value in a single string,\\n    of the format `\\"[x, y)\\"`, where `x` is the lower value, and `y` is the upper value.\\n    `[` means the value is inclusive and `)` means the value is exclusive. For example:\\n    `\\"[5, 10)\\"` means an integer range including the values `5`, `6`, `7`, `8` and `9`.\\n    Note that `10` is _not_ included.","title":"Value"},"category":{"type":"string","description":"The name of the Category that this Dimension describes.","title":"Category"},"count":{"type":"integer","format":"int64","description":"The number of results in this Dimension.","title":"Count"},"continuous":{"type":"boolean","description":"Indicates whether the values represent continuous or discrete data. Values of the form Integer Ranges\\nwill have this value set to true. Values of the form String values will have this value set to false.","title":"Continuous"},"private_id":{"type":"string","description":"The private ID of the Dataset this Category comes from.","title":"Dataset Private ID"},"dimensions":{"type":"array","items":{"$ref":"#/components/schemas/tyraelDimension"},"description":"Child dimensions of this Dimension.","title":"Child dimensions"}},"description":"A hierarchy of dimensional data broken down by labels. The result of an InfoSum Insight query or a child of another dimension.","title":"Dimension"},"tyraelDimensionPlan":{"type":"object","properties":{"private_id":{"type":"string","description":"Identifies a Dataset.","title":"Private Dataset ID"},"category":{"type":"string","description":"Category is the category this Dimension describes.","title":"Category"},"bins":{"type":"array","items":{"type":"string"},"description":"Bins is the list of expected bins which this Dimension will contain.","title":"Bins"},"inferred_bins":{"type":"boolean","description":"It indicates whether the bins in the results we inferred by the platform or explicitly specified by the\\nuser in the query.","title":"InferredBins"}},"description":"Dimension Plan describes a Dimension of the expected result.","title":"Dimension Plan"},"tyraelDirectionFilter":{"type":"string","enum":["ANY_DIRECTION","INCOMING","OUTGOING"],"default":"ANY_DIRECTION","description":"DirectionFilter specifies whether to return all Permissions, or only those that\\nare incoming or outgoing.\\n\\n - ANY_DIRECTION: Shows all Permissions.\\n - INCOMING: Only shows incoming Permissions.\\n - OUTGOING: Only shows outgoing Permissions."},"tyraelError":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"},"tyraelExplainQueryRequest":{"type":"object","properties":{"query":{"type":"string","description":"The Query whose execution will be explained. This takes the\\nformat of an InfoSum Query Language Query. See\\nthe documentation of the InfoSum Query Language\\nfor more information.","title":"Query"},"path_overrides":{"type":"array","items":{"$ref":"#/components/schemas/tyraelPathOverride"},"description":"A list of instructions on how to connect two datasets, overriding the automatic choices\\nmade by the core engine.","title":"Path Overrides"}},"description":"Used to explain the choices made by the platform before executing a query.","title":"Explain Query Request"},"tyraelExplainQueryResponse":{"type":"object","properties":{"query_plan":{"$ref":"#/components/schemas/tyraelQueryPlan"},"hop_table":{"type":"array","items":{"$ref":"#/components/schemas/tyraelHop"},"description":"HopTable is the list of all joins that have taken place between datasets.","title":"HopTable"}},"description":"An explanation of the choices made by the platform before executing the query.","title":"Explain Query Response"},"tyraelFormField":{"type":"object","properties":{"id":{"type":"string","description":"The unique identifier for the field.","title":"Id"},"label":{"type":"string","description":"A human readable label for the field.","title":"Label"},"options":{"type":"array","items":{"type":"string"},"description":"A suggestion for possible values for this field. Not all fields will\\nspecify Options.","title":"Options"}},"description":"Fields specify the values that must be specified to configurea Push Connector.","title":"Form Field"},"tyraelFormPanel":{"type":"object","properties":{"label":{"type":"string","description":"A human readable label for the panel.","title":"Label"},"fields":{"type":"array","items":{"$ref":"#/components/schemas/tyraelFormField"},"description":"A list of fields for the panel.","title":"Fields"}},"description":"Panels make up the Form for a Push Connector.","title":"Form Panel"},"tyraelGetActivationResponse":{"type":"object","properties":{"activation":{"$ref":"#/components/schemas/tyraelActivation"}},"description":"GetActivationResponse is the response from the GetActivation\\nmethod.","title":"Get Activation Response"},"tyraelGetConnectionResponse":{"type":"object","properties":{"connection":{"$ref":"#/components/schemas/tyraelConnection"}},"description":"Metadata for a single Connection between two Datasets.","title":"Connection Response"},"tyraelGetDatasetResponse":{"type":"object","properties":{"dataset":{"$ref":"#/components/schemas/tyraelDataset"},"schema":{"$ref":"#/components/schemas/tyraelDatasetSchema"}},"description":"The Dataset and metadata for the Dataset.","title":"Dataset Response"},"tyraelGetDatasetUsageResponse":{"type":"object","properties":{"timeseries":{"type":"array","items":{"$ref":"#/components/schemas/tyraelDatasetUsageTimeValue"},"description":"An array of datapoints that describe the Usage for a Dataset over time.","title":"Timeseries"}},"description":"The credit usage information for the Dataset.","title":"Dataset Usage Response"},"tyraelGetPermissionUsageResponse":{"type":"object","properties":{"timeseries":{"type":"array","items":{"$ref":"#/components/schemas/tyraelPermissionUsageTimeValue"},"description":"An array of datapoints that describe the Usage for a Permission over time.","title":"Timeseries"}},"description":"The response from the GetPermissionUsage method.","title":"Get Permissions Usage Response"},"tyraelGetPermittedPushConnectorsRequest":{"type":"object","properties":{"private_id":{"type":"string","description":"The Private ID of the Dataset to retrieve, as assigned by the user.","title":"Private Dataset ID"}},"description":"The dataset to return a list of permitted Push Connectors for.","title":"Get Permitted Push Connectors Request"},"tyraelGetPermittedPushConnectorsResponse":{"type":"object","properties":{"push_connectors":{"type":"array","items":{"$ref":"#/components/schemas/tyraelPushConnector"},"description":"A list of the permitted Push Connectors.","title":"PushConnectors"}},"description":"The list of permitted Push Connectors.","title":"Get Permitted Push Connectors Response"},"tyraelGetPushConnectorFormResponse":{"type":"object","properties":{"form":{"$ref":"#/components/schemas/tyraelPushConnectorForm"}},"description":"The Form for a Push Connector.","title":"Get Push Connector Form Response"},"tyraelHop":{"type":"object","properties":{"id":{"type":"integer","format":"int32","description":"The ID of the Hop.","title":"Id"},"join_id":{"type":"integer","format":"int32","description":"The ID of the Join that this hop is part of.","title":"JoinID"},"from_private_id":{"type":"string","description":"The Private ID of the dataset on which the join starts.","title":"From Private Dataset ID"},"to_private_id":{"type":"string","description":"The Private ID of the dataset on which the join ends.","title":"To Private Dataset ID"},"key_name":{"type":"string","description":"The name of the Key used for the join.","title":"Key Name"},"overlap":{"type":"string","format":"int64","description":"The approximate overlap of keys between the from and to datasets.","title":"Overlap"},"duplicates":{"type":"string","format":"int64","description":"The approximate number of duplicate keys we expect when joining the from and to datasets\\non the specified key.","title":"Duplicates"},"from_dataset_size":{"type":"string","format":"int64","description":"The size of the from dataset.","title":"FromDatasetSize"},"to_dataset_size":{"type":"string","format":"int64","description":"The size of the to dataset.","title":"ToDatasetSize"},"max_overcounted_values":{"type":"integer","format":"int32","description":"The maximum number of additional keys (and as a result additional values) that can be\\nexpected due to errors in the Bloom Filter used when joining the two datasets.","title":"MaxOvercountedValues"},"representation":{"$ref":"#/components/schemas/tyraelRepresentationPlan"}},"description":"Hop represents a join that will take place between two datasets as part of executing a query.","title":"Hop"},"tyraelIdentity":{"type":"object","properties":{"name":{"type":"string","description":"The user-assigned name of the contents of the Output Data.","title":"Name"}},"description":"An Identity column in an Identity Dataset.","title":"Identity"},"tyraelIdentityQualityMeasures":{"type":"object","properties":{"redaction_threshold_outlier":{"type":"number","format":"float","description":"Indicates if one or more datasets may be obscuring the resolution of the results by\\nbeing significantly different from the others.","title":"Redaction Threshold Outlier"},"model_accuracy":{"type":"number","format":"float","description":"This is an indication of how accurately the engine represented the datasets involved when executing the query.\\nSmall errors are introduced in the query results due to internal statistical representations of the data during query execution.","title":"Model Accuracy"}},"description":"A list of statistics that provide an indication of the quality of the Identity query.","title":"Identity Quality Measures"},"tyraelIdentityQueryStatus":{"type":"object","properties":{"identity_query_id":{"type":"string","description":"The ID of the Identity Query.","title":"Identity Query ID"},"query_completed":{"type":"boolean","description":"Whether the Query has finished or not.","title":"Query Completed"},"query_error":{"$ref":"#/components/schemas/rpcStatus"},"query_response":{"$ref":"#/components/schemas/tyraelIdentityResponse"},"push_completed":{"type":"boolean","description":"Indicates whether or not the Push is still in progress.","title":"Push Completed"},"push_error":{"$ref":"#/components/schemas/rpcStatus"}},"description":"Status of a started Identity Query.","title":"Indentity Query Status"},"tyraelIdentityResponse":{"type":"object","properties":{"identities":{"type":"array","items":{"type":"string"},"description":"The identity types that were requested.","title":"Identities"},"total_rows":{"type":"integer","format":"int64","description":"Total Rows\\nThe total number of rows in the result."},"quality_measures":{"$ref":"#/components/schemas/tyraelIdentityQualityMeasures"}},"description":"Information about the result of an Identity Query.","title":"Indentity Response"},"tyraelInsightQualityMeasures":{"type":"object","properties":{"redaction_threshold_outlier":{"type":"number","format":"float","description":"Indicates if one or more datasets may be obscuring the resolution of the results by\\nbeing significantly different from the others.","title":"Redaction Threshold Outlier"},"rounding_threshold_outlier":{"type":"number","format":"float","description":"Indicates if one or more datasets may be obscuring the resolution of the results by\\nbeing significantly different from the others.","title":"Rounding Threshold Outlier"},"model_accuracy":{"type":"number","format":"float","description":"This is an indication of how accurately the engine represented the datasets involved when executing the query.\\nSmall errors are introduced in the query results due to internal statistical representations of the data during query execution.\\nTypically these errors are small and obscured by rounding.","title":"Model Accuracy"},"result_precision_include_empty_bins":{"type":"number","format":"float","description":"This includes empty bins when calculating the average bin size.","title":"Result Precision Include Empty Bins"},"result_precision_exclude_empty_bins":{"type":"number","format":"float","description":"This excludes empty bins when calculating the average bin size.","title":"Result Precision Exclude Empty Bins"}},"description":"A list of statistics that provide an indication of the quality of the Insight query.","title":"Insight Quality Measures"},"tyraelJoinPlan":{"type":"object","properties":{"combinator":{"$ref":"#/components/schemas/tyraelCombinator"},"id":{"type":"integer","format":"int32","description":"ID is the unique ID of the join within the scope of a single response.","title":"ID"},"from_private_id":{"type":"string","description":"FromPrivateId is the private ID of the Dataset from which the join will originate.","title":"FromPrivateId"},"to_private_id":{"type":"string","description":"ToPrivateId is the private ID of the Dataset on which the join will terminate.","title":"ToPrivateId"},"representation":{"$ref":"#/components/schemas/tyraelRepresentationPlan"},"keys":{"$ref":"#/components/schemas/tyraelKeyPlan"}},"description":"JoinPlan describes a tree of joins between datasets.","title":"Join Plan"},"tyraelKey":{"type":"object","properties":{"label":{"type":"string","description":"The Keys\' display name.","title":"Label"},"null_fraction":{"type":"number","format":"double","description":"The fraction of the values in this Key that are `null`,\\nin the range (0, 1], representating a percentage value between 0% and 100%.","title":"NullFraction"},"num_distinct":{"type":"number","format":"double","description":"An estimated number of distinct values in the Key, if positive, or\\nthe number of distinct values divided by the number of rows, if negative.\\n\\nSign  | Negative     | Positive\\n----- | ------------ | --------\\nValue | Uniques/Rows | Uniques","title":"NumDistinct"}},"description":"A Dataset Key, for joining between Datasets.","title":"Key"},"tyraelKeyJoinStats":{"type":"object","properties":{"key_name":{"type":"string","description":"KeyName is the name of the Key used for the join.","title":"KeyName"},"overlap":{"type":"string","format":"int64","description":"Overlap is the approximate overlap of keys between the from and to datasets.","title":"Overlap"},"duplicates":{"type":"string","format":"int64","description":"Duplicates is the approximate number of duplicate keys we expect when joining the from and to datasets\\non the specified key.","title":"Duplicates"},"from_dataset_size":{"type":"string","format":"int64","description":"FromDatasetSize is the approximate number of keys in the dataset from which the join will originate.","title":"FromDatasetSize"},"to_dataset_size":{"type":"string","format":"int64","description":"ToDatasetSize is the approximate number of keys in the dataset on which the join will terminate.","title":"ToDatasetSize"}},"description":"Key Join Stats contains information about a join for a given Key.","title":"Key Join Stats"},"tyraelKeyPlan":{"type":"object","properties":{"max_overcounted":{"type":"integer","format":"int32","description":"MaxOvercounted is the total maximum number of additional keys (and as a result additional values) that can be\\nexpected due to errors in the Bloom Filter used when joining the two datasets using the specified keys.","title":"MaxOvercounted"},"used":{"type":"array","items":{"type":"string"},"description":"The list of all the key names that participated in the join.","title":"Used"},"keys":{"type":"array","items":{"$ref":"#/components/schemas/tyraelKeyJoinStats"},"description":"The list of keys that could participate in the join.","title":"Keys"},"inferred":{"type":"boolean","description":"It indicates whether the Key was inferred by the platform or explicitly specified by the\\nuser in the query.","title":"Inferred"}},"description":"Key Plan is a description of the keys that have participated in the join and any remaining keys that did not participate in the join.","title":"Key Plan"},"tyraelListActivationPushConnectorsResponse":{"type":"object","properties":{"push_connectors":{"type":"array","items":{"$ref":"#/components/schemas/tyraelPushConnector"},"description":"Is a list of permitted push connector IDs for the specified activation query,\\nand their associated display names.","title":"PushConnectors"}},"description":"ListActivationPushConnectorsResponse is the output of the ListActivationPushConnectors endpoint.","title":"List Push Connectors Response is the output of the ListActivationPushConnectors endpoint"},"tyraelListActivationsResponse":{"type":"object","properties":{"activations":{"type":"array","items":{"$ref":"#/components/schemas/tyraelActivationSummary"},"description":"The list of activations which met the activation filter requirements.","title":"Activations"}},"description":"ListActivationsResponse is the response from the ListActivations endpoint.","title":"List Activation Queries Response"},"tyraelListBasePushConnectorsResponse":{"type":"object","properties":{"push_connectors":{"type":"array","items":{"$ref":"#/components/schemas/tyraelPushConnector"},"description":"A list of base Push Connector IDs and their associated names.","title":"PushConnectors"}},"description":"The list of Push Connectors that can be used to create new Push Connectors.","title":"List Base Push Connectors Response"},"tyraelListConnectionsResponse":{"type":"object","properties":{"connections":{"type":"array","items":{"$ref":"#/components/schemas/tyraelConnection"},"description":"A list of all Connections between the users Datasets and\\nthose the user has been granted access to.","title":"Connections"},"datasets":{"type":"array","items":{"$ref":"#/components/schemas/tyraelDataset"},"description":"A is a list of Datasets included.","title":"Datasets"}},"description":"A list of Connections, as returned by the ListConnections method.","title":"Connections List"},"tyraelListDatasetsFilter":{"type":"object","properties":{"ownership":{"$ref":"#/components/schemas/tyraelOwnershipFilter"},"datasets":{"$ref":"#/components/schemas/tyraelDatasetFilter"}},"description":"Used to filter which Datasets to return in ListDatasets.","title":"List Dataset Filter"},"tyraelListDatasetsResponse":{"type":"object","properties":{"datasets":{"type":"array","items":{"$ref":"#/components/schemas/tyraelDataset"},"description":"The Datasets returned by the ListDatasets method.","title":"Datasets"}},"description":"A list of Datasets, as returned from the ListDatasets method.","title":"Datasets List"},"tyraelListPermissionsFilter":{"type":"object","properties":{"direction":{"$ref":"#/components/schemas/tyraelDirectionFilter"},"accepted":{"$ref":"#/components/schemas/tyraelAcceptedFilter"},"owned_datasets":{"$ref":"#/components/schemas/tyraelDatasetFilter"},"other_datasets":{"$ref":"#/components/schemas/tyraelDatasetFilter"}},"description":"Contains the filter expressions used to filter the Listing of Permissions.","title":"List Permissions Filter"},"tyraelListPermissionsResponse":{"type":"object","properties":{"permissions":{"type":"array","items":{"$ref":"#/components/schemas/tyraelPermission"},"description":"Contains the requested Permissions.","title":"Permissions"}},"description":"The response from the ListPermissions method.","title":"List Permissions Response"},"tyraelListPushConnectorsResponse":{"type":"object","properties":{"push_connectors":{"type":"array","items":{"$ref":"#/components/schemas/tyraelPushConnector"},"description":"A list of Push Connector IDs and their associated names.","title":"PushConnectors"}},"description":"The list of Push Connectors that the recipient can use.","title":"List Push Connectors Response"},"tyraelOccurrence":{"type":"object","properties":{"value":{"type":"string","description":"The Value, as a string.","title":"Value"},"frequency":{"type":"number","format":"double","description":"The frequency with which this Value appears in the Representation,\\nin the range (0, 1], representating a percentage value between 0% and 100%.","title":"Frequency"}},"description":"An occurrence of a value, and with what frequency it appears in the Representation.","title":"Occurrence"},"tyraelOwnershipFilter":{"type":"string","enum":["ANY_OWNERSHIP","OWNED","NOT_OWNED"],"default":"ANY_OWNERSHIP","description":"OwnershipFilter specifies whether to return all Datasets, or only those that are\\nowned or not owned by the user.\\n\\n - ANY_OWNERSHIP: Returns all Datasets the user has access to.\\n - OWNED: Only returns Datasets owned by the user.\\n - NOT_OWNED: Only returns Datasets not owned by the user."},"tyraelPathOverride":{"type":"object","properties":{"source_dataset":{"$ref":"#/components/schemas/tyraelDatasetWithKeys"},"destination_private_id":{"type":"string","description":"Is the private ID of the Dataset that the path ends at.","title":"Destination Private ID"}},"description":"Contains instructions on how to join two datasets, overriding the automatic choices made by the core engine.","title":"Path Override"},"tyraelPermission":{"type":"object","properties":{"owner":{"$ref":"#/components/schemas/tyraelUser"},"private_id":{"type":"string","description":"Private ID of the Dataset for the requesting User.","title":"Private ID"},"recipient":{"$ref":"#/components/schemas/tyraelUser"},"create_time":{"type":"string","format":"date-time","description":"Time when the owner offered Permission to the Recipient.","title":"Create Time"},"accept_time":{"type":"string","format":"date-time","description":"Time when the Permission was accepted by the Recipient.","title":"Accept Time"},"accepted":{"type":"boolean","description":"Indicates whether the Permission has been accpeted by the Recipient.","title":"Accepted"},"credits":{"$ref":"#/components/schemas/tyraelCreditShare"},"dataset_public_name":{"type":"string","description":"Indicates the name of the Dataset the Permission references.","title":"DatasetPublicName"},"dataset_public_desc":{"type":"string","description":"Indicates the name of the Dataset the Permission references.","title":"DatasetPublicDesc"}},"description":"An explicit Permission to access a Dataset given by a user to another user.","title":"Permission"},"tyraelPermissionUsage":{"type":"object","properties":{"allowance":{"type":"integer","format":"int64","description":"The number of credits that can be used on this Permission\\nper billing cycle.","title":"Allowance"},"current_allowance":{"type":"integer","format":"int64","description":"The number of credits that can be used on this\\nPermission in the current billing cycle.","title":"CurrentAllowance"},"used":{"type":"integer","format":"int64","description":"The number of credits used on this Permission in this billing cycle.","title":"Used"},"uses_parent_allocation":{"type":"boolean","description":"UsesParentAllocation is false if the User has been given their own\\nrestricted allowance, or true if they consume directly from the Dataset\'s\\nunallocated credits."},"parent_allocation":{"type":"integer","format":"int64","description":"The number of credits allocated to the parent Dataset\\nper billing cycle.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"ParentAllocation"},"current_parent_allocation":{"type":"integer","format":"int64","description":"The number of credits currently allocated to\\nthe parent Dataset in the current billing cycle.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"CurrentParentAllocation"}},"description":"Contains credit usage for a specific Permission.","title":"Permission Usage"},"tyraelPermissionUsageTimeValue":{"type":"object","properties":{"timestamp":{"type":"string","format":"date-time","description":"The time at which Usage was at the levels described in Usage.\\nIf usage is grouped, this will be the timestamp of the end of the interval.","title":"Timestamp"},"usage":{"$ref":"#/components/schemas/tyraelPermissionUsage"}},"description":"A single Permission usage datapoint.","title":"Permission Usage Value"},"tyraelProduct":{"type":"string","enum":["INSIGHT","IDENTITY"],"default":"INSIGHT","description":"Product enumerates the different Dataset Product types supported.\\n\\n - INSIGHT: An Insight Dataset which can be used in Insight queries.\\n - IDENTITY: An Identity Dataset which can be used in Identity queries."},"tyraelPush":{"type":"object","properties":{"push_id":{"type":"string","description":"The unique identifier for the push.","title":"Push ID"},"status":{"$ref":"#/components/schemas/tyraelPushStatus"},"connector_type":{"type":"string","description":"The type of the connector used for the push.","title":"Connector Type"},"pushed_at":{"type":"string","format":"date-time","description":"The time when the push was executed.","title":"Pushed At"},"completed_at":{"type":"string","format":"date-time","description":"The time when the push completed.","title":"Completed At"},"push_error":{"$ref":"#/components/schemas/rpcStatus"},"push_successful":{"type":"boolean","description":"Indicates whether the push successfully completed.","title":"Push Successful"}},"description":"Push contains details about a specific push of an activation."},"tyraelPushActivationResultResponse":{"type":"object","properties":{"push_id":{"type":"string","description":"Is the unique identifier for the push request.","title":"Push ID"}},"description":"PushActivationResultResponse is the output of the PushActivationResult endpoint.","title":"Push activation query results request"},"tyraelPushConnector":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the push connector.","title":"Id"},"name":{"type":"string","description":"The display name of the push connector.","title":"Name"}},"description":"The Name and ID for a Push Connector.","title":"Push Connector"},"tyraelPushConnectorConfig":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the Push Connector.","title":"Id"},"config":{"type":"object","additionalProperties":{"type":"string"},"description":"A map of Configuration Form field IDs to their values.","title":"Config"}},"description":"The configuration for a Push Connector.","title":"Push Connector Config"},"tyraelPushConnectorForm":{"type":"object","properties":{"panels":{"type":"array","items":{"$ref":"#/components/schemas/tyraelFormPanel"},"description":"A list of panels. Panels contain fields which should be set to configure\\nthe Push Connector.","title":"Panels"}},"description":"The Form for a Push Connector.","title":"Push Connector Form"},"tyraelPushStatus":{"type":"string","enum":["PUSH_PENDING","PUSH_RUNNING","PUSH_COMPLETED"],"default":"PUSH_PENDING","description":"PushStatus defines the different states that a Push request can be in.\\n\\n - PUSH_PENDING: PUSH_PENDING indicates that the push is waiting to be executed.\\n - PUSH_RUNNING: PUSH_RUNNING indicates that the push is currently being executed.\\n - PUSH_COMPLETED: PUSH_COMPLETED indicates that the push has completed execution."},"tyraelQuery":{"type":"object","properties":{"query_id":{"type":"string","description":"The ID of the Query.","title":"Query ID"},"done":{"type":"boolean","description":"Whether the Query has finished or not.","title":"Done"}},"description":"A started Query.","title":"Query"},"tyraelQueryPlan":{"type":"object","properties":{"query":{"type":"string","description":"Query is the query to be explained","title":"Query"},"plan":{"$ref":"#/components/schemas/tyraelAggregationPlan"},"results":{"$ref":"#/components/schemas/tyraelResultPlan"}},"description":"QueryPlan is the representation of how the query will be executed and the decisions made by the platform as part of the execution.","title":"Query Plan"},"tyraelQueryResult":{"type":"object","properties":{"dimensions":{"type":"array","items":{"$ref":"#/components/schemas/tyraelDimension"},"description":"A hierarchical result of an InfoSum Query Language SELECT statement.","title":"Result Dimensions"},"audience":{"type":"integer","format":"int64","description":"The total number of audience members contained in\\nthis result set.","title":"Audience"},"quality_measures":{"$ref":"#/components/schemas/tyraelInsightQualityMeasures"}},"description":"The Result of a Query.","title":"Query Result"},"tyraelRedactionThreshold":{"type":"object","properties":{"threshold":{"type":"integer","format":"int32","description":"Threshold is the redaction threshold that will be applied to all bins in the results.","title":"Threshold"},"datasets":{"type":"array","items":{"$ref":"#/components/schemas/tyraelDatasetThreshold"},"description":"Datasets is a list of redaction thresholds for each dataset involved in the query.","title":"Datasets"}},"description":"Redaction Threshold describes the redaction threshold that will be used for the values in the bins. It also contains the redaction thresholds for all the Datasets involved in the query.","title":"Redaction Threshold"},"tyraelRemoveDemoDatasetsResponse":{"type":"object","description":"Response from the RemoveDemoDatasets method.","title":"Remove Demo Datasets Response"},"tyraelRepresentation":{"type":"object","properties":{"label":{"type":"string","description":"The text label of the Representation, such as \\"Binary Gender\\".","title":"Label"},"data_type":{"$ref":"#/components/schemas/tyraelDataType"},"precision":{"type":"number","format":"double","description":"How accurate this Representation is to the source data. It is\\nin the range (0, 1], representating a percentage value between 0% and 100%.\\nThings that affect the Precision of a Representation include any data transformations\\nthat had to be performed to match the source data into this Representation.","title":"Precision"},"statistics":{"$ref":"#/components/schemas/tyraelStatistics"},"possible_values":{"type":"array","items":{"type":"string"},"description":"Contains the list of values or ranges that this representation can contain. If the\\nPossibleValues contains an empty list then it represents that it can be any value defined by\\nthe DataType value.","title":"PossibleValues"}},"description":"A Representation of a Category, such as \\"Binary Gender\\".","title":"Representation"},"tyraelRepresentationPlan":{"type":"object","properties":{"category":{"type":"string","description":"Category is the name of the category","title":"Category"},"selected_representation":{"type":"string","description":"SelectedRepresentation is the name of the selected representation.","title":"SelectedRepresentation"},"inferred":{"type":"boolean","description":"Inferred indicate whether the representation was inferred by the platform or explicitly specified by the\\nuser in the query.","title":"Inferred"},"bins":{"type":"array","items":{"type":"string"},"description":"The bins specified in the query.","title":"Bins"},"filter":{"type":"string","description":"The Filter specified in the query.","title":"Filter"},"representations":{"type":"array","items":{"$ref":"#/components/schemas/tyraelRepresentationStats"},"description":"RepresentationStats is the list of all possible representations for the category.","title":"RepresentationStats"}},"description":"Representation Plan is the representation of the Category used when performing an aggregation or filter.","title":"Representation Plan"},"tyraelRepresentationStats":{"type":"object","properties":{"name":{"type":"string","description":"Name is the name of the representation.","title":"Name"},"type":{"type":"string","description":"Type is the type of the representation.","title":"Type"},"score":{"type":"number","format":"float","description":"Score is the score associated with the representation.","title":"Score"},"precision":{"type":"number","format":"float","description":"Precision is the precision of the representation.","title":"Precision"},"bins":{"type":"array","items":{"type":"string"},"description":"The list of bins that is expected to be used with this Representation.","title":"Bins"},"filter":{"type":"string","description":"The Filter that would be applied for this representation.","title":"Filter"}},"description":"Representation Stats contains information about a representation.","title":"Representation Stats"},"tyraelResultPlan":{"type":"object","properties":{"max_overcounted_values":{"type":"integer","format":"int32","description":"MaxOvercountedValues is the maximum number of additional keys (and as a result additional values) that can be\\nexpected due to errors in the Bloom Filter used when joining the two datasets.","title":"MaxOvercountedValues"},"dimensions":{"type":"array","items":{"$ref":"#/components/schemas/tyraelDimensionPlan"},"description":"Dimensions describes the expected Dimensions in the results","title":"Dimensions"},"filter":{"type":"string","description":"The filter that has been applied to the results.","title":"Filter"},"rounding_threshold":{"$ref":"#/components/schemas/tyraelRoundingThreshold"},"redaction_threshold":{"$ref":"#/components/schemas/tyraelRedactionThreshold"}},"description":"Result Plan is the expected format of the results from the query and decisions made by the platform when generating the results.","title":"Result Plan"},"tyraelRoundingThreshold":{"type":"object","properties":{"threshold":{"type":"integer","format":"int32","description":"Threshold is the rounding threshold that will be applied to all bins in the results.","title":"Threshold"},"datasets":{"type":"array","items":{"$ref":"#/components/schemas/tyraelDatasetThreshold"},"description":"Datasets is a list of rounding thresholds for each dataset involved in the query.","title":"Datasets"}},"description":"Rounding Threshold describes the rounding threshold that will be used for the values in the bins. It also contains the rounding thresholds for all the Datasets involved in the query.","title":"Rounding Threshold"},"tyraelSort":{"type":"object","properties":{"by":{"type":"string","description":"By is the field to sort by."},"order":{"$ref":"#/components/schemas/SortOrder"}},"description":"User to configure sorting of results.","title":"Sort"},"tyraelStatistics":{"type":"object","properties":{"average":{"type":"number","format":"double","description":"The average value of the column.\\nOnly populated if the type of the Representation is numeric.","title":"Average"},"standard_deviation":{"type":"number","format":"double","description":"The standard deviation of the column-\\nOnly populated if the type of the Representation is numeric.","title":"StandardDeviation"},"percentiles":{"type":"array","items":{"type":"number","format":"double"},"description":"Array of 101 elements representing percentiles from 0 to 100 with stepsize 1.\\nThe first element is the minimum value found and the last element is the maximum value found.\\nOnly populated if the type of the Representation is numeric.","title":"Percentiles"},"null_fraction":{"type":"number","format":"double","description":"The fraction of the values in this Representation that are `null`,\\nin the range (0, 1], representating a percentage value between 0% and 100%.","title":"NullFraction"},"num_distinct":{"type":"number","format":"double","description":"An estimated number of distinct values in the Representation, if positive, or\\nthe number of distinct values divided by the number of rows, if negative.\\n\\nSign  | Negative     | Positive\\n----- | ------------ | --------\\nValue | Uniques/Rows | Uniques","title":"NumDistinct"},"most_common":{"type":"array","items":{"$ref":"#/components/schemas/tyraelOccurrence"},"description":"An array of the most common elements in the Representation, if there\\nare any that occur with greater frequency than others.","title":"MostCommon"}},"description":"Statistical information for a Representation. Numerical statistics are only supplied for numerical Representations.","title":"Statistics"},"tyraelTimeGrouping":{"type":"string","enum":["TIME_GROUPING_UNSPECIFIED","DAY","WEEK","MONTH","YEAR"],"default":"TIME_GROUPING_UNSPECIFIED","description":"TimeGrouping specifies how a time series should be grouped.\\n\\n - TIME_GROUPING_UNSPECIFIED: Default value - should not be used.\\n - DAY: All values within a single day will be rolled up into a single\\ndatapoint.\\n - WEEK: All values within a single week (Monday - Sunday) will be\\nrolled up into a single datapoint.\\n - MONTH: All values within a single calendar month will be rolled up\\ninto a single datapoint.\\n - YEAR: All values within a single calendar year will be rolled up into\\na single datapoint."},"tyraelTimeRangeFilter":{"type":"object","properties":{"start_time":{"type":"string","format":"date-time","description":"Defines the earliest time the filter is applied from. The filter\\nmatches all dates after this point in time, inclusive.","title":"Start"},"end_time":{"type":"string","format":"date-time","description":"Defines the time the filter is applied until. The filter matches all\\ndates before this point in time, inclusive.","title":"End"}},"description":"Used to filter events to those that occurred between two timestamps. Both Start and End are optional. If either is not specified, the time range is open-ended in that direction.","title":"Timerange Filter"},"tyraelUser":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the User. This is often used as a parameter to endpoints.\\nIt uniquely identifies this user in the Platform.","title":"ID"},"display_name":{"type":"string","description":"The display name of the user, as chosen by themselves.","title":"Display name"}},"description":"Describes a user in the InfoSum Platform.","title":"User"},"tyraelValidateActivationQueryRequest":{"type":"object","properties":{"query":{"type":"string","description":"The query to be validated. This takes the format of an IQL Query.\\nSee the documentation of the IQL for more information.","title":"Query"},"path_overrides":{"type":"array","items":{"$ref":"#/components/schemas/tyraelPathOverride"},"description":"A list of instructions on how to connect two datasets,\\noverriding the automatic choices made by the core engine.","title":"Path Overrides"},"string_literal_column":{"$ref":"#/components/schemas/tyraelActivationStringLiteral"}},"description":"ValidateActivationQueryRequest is the output of the ValidateActivationQuery endpoint.","title":"Validate activation query request"},"tyraelValidateActivationQueryResponse":{"type":"object","properties":{"success":{"type":"boolean","description":"True if the Activation Query was successfully validated.","title":"Success"}},"description":"ValidateActivationQueryResponse is the output of the ValidateActivationQuery method.","title":"Validate activation query response"},"tyraelValidateIdentityQueryRequest":{"type":"object","properties":{"query":{"type":"string","description":"The Query that should be queued. This takes the\\nformat of an InfoSum Identity Query. See\\nthe documentation of the InfoSum Identity Query Language\\nfor more information.","title":"Query"},"path_overrides":{"type":"array","items":{"$ref":"#/components/schemas/tyraelPathOverride"},"description":"A list of instructions on how to connect two datasets, overriding the automatic choices\\nmade by the core engine.","title":"Path Overrides"},"push_connector_config":{"$ref":"#/components/schemas/tyraelPushConnectorConfig"}},"description":"Used to validate an Identity Query before executing it.","title":"Validate Identity Request"},"tyraelValidateIdentityQueryResponse":{"type":"object","properties":{"success":{"type":"boolean","description":"True if the Identity Query was successully validated.","title":"Success"}},"description":"Whether the Identity Query was successfully validated.","title":"Validate Identity Query Response"},"tyraelValidateQueryRequest":{"type":"object","properties":{"query":{"type":"string","description":"The Query that should be validated. This takes the\\nformat of an InfoSum Query Language Query. See\\nthe documentation of the InfoSum Query Language\\nfor more information.","title":"Query"},"path_overrides":{"type":"array","items":{"$ref":"#/components/schemas/tyraelPathOverride"},"description":"A list of instructions on how to connect two datasets, overriding the automatic choices\\nmade by the core engine.","title":"Path Overrides"}},"description":"Used to validate a Query before executing it.","title":"Validate Request"},"tyraelValidateQueryResponse":{"type":"object","properties":{"success":{"type":"boolean","description":"True if the Query was successfully validated.","title":"Success"}},"description":"Whether the Query was successfully validated.","title":"Validate Query Response"}}}}},"plugin-redoc-1":{"url":"redocusaurus/plugin-redoc-1.yaml","themeId":"theme-redoc","isSpecFile":true,"spec":{"openapi":"3.0.0","info":{"title":"InfoSum \u03a3 API","description":"This page contains the documentation for the InfoSum \u03a3 API. The methods allow you to try making requests and inspect the input and output formats.","termsOfService":"https://www.infosum.com/legals/website-terms","version":"2.0","contact":{"name":"InfoSum Support","email":"support@infosum.com"}},"externalDocs":{"description":"Official documentation","url":"https://docs.infosum.com/"},"paths":{"/api/v2/bunker/import/import-connector-configs":{"get":{"summary":"List Import Connector Config.","description":"List available Import Connector Configs.","operationId":"ImportConnectorConfigsList","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"configs":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"ID is the globally unique ID of the import connector config."},"name":{"type":"string","description":"Name is the display name given to this import connector config."},"description":{"type":"string","description":"Description is an optional description given to this import connector config."},"s3_connector":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the S3 Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"cross_account":{"description":"CrossAccount is the type of auth.","type":"object","properties":{"user_arn":{"type":"string","description":"UserArn is the Amazon Resource Name (ARN) of the role to assume."},"session_name":{"type":"string","description":"Session name is the identifier of the session."},"principal":{"type":"string","description":"Output only. Principal is the principal for the trust relationship.","readOnly":true},"external_id":{"type":"string","description":"Output only. ExternalId is the external ID for the trust relationship.","readOnly":true}}},"access_keys":{"description":"S3AccessKeysAuth is the type of auth.","type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKey is the S3 access key ID."},"secret_access_key":{"type":"string","description":"SecretAccessKey is the S3 secret access key."},"session_name":{"type":"string","description":"Session name is the identifier of the session."}}},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"S3Provider is the information about the connector that can be returned."},"gcs_connector":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the GCS Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"GCSProvider is the information about the connector that can be returned."},"created_date_time":{"type":"string","format":"date-time","description":"CreatedDateTime is the date and time the import connector config was created."},"updated_date_time":{"type":"string","format":"date-time","description":"UpdatedDateTime is the date and time the import connector config was last updated."},"user_id":{"type":"string","description":"UserId is the ID of the user who created the import connector config."}},"description":"Config is the information that can be retrieved about an import connector config. It is all Output only.","readOnly":true}},"pagination":{"type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}},"description":"PaginationResponse holds information on the returned records."}},"description":"ListResponse is the output of the List method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order_by","description":"OrderBy is a comma seperated value to define sorting.\\ne.g \'name,created_time DESC\'\\nThe values are seperated by space, \'{column} {ASC/DESC}\'","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter","description":"Filter is a string containing logic that can specify a restricted set of ICCs to be returned.\\ne.g. `name co \'Test\' or name co \'Acme\'`","in":"query","required":false,"schema":{"type":"string"}}],"tags":["ImportConnectorConfigs"],"security":[{"API_Keys":[]}]},"post":{"summary":"Create an Import Connector Config.","description":"Create a configuration for importing data from a connector.","operationId":"ImportConnectorConfigsCreate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"config_id":{"type":"string"}},"description":"CreateResponse is the output of the Create method."}}}},"400":{"description":"Returned when the Import Connector Config was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"409":{"description":"Returned when an Import Connector Config with the same name already exists.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"config":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the globally unique ID of the import connector config.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this import connector config."},"description":{"type":"string","description":"Description is an optional description given to this import connector config."},"s3_connector":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the S3 Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"cross_account":{"description":"CrossAccount is the type of auth.","type":"object","properties":{"user_arn":{"type":"string","description":"UserArn is the Amazon Resource Name (ARN) of the role to assume."},"session_name":{"type":"string","description":"Session name is the identifier of the session."},"principal":{"type":"string","description":"Output only. Principal is the principal for the trust relationship.","readOnly":true},"external_id":{"type":"string","description":"Output only. ExternalId is the external ID for the trust relationship.","readOnly":true}}},"access_keys":{"description":"S3AccessKeysAuth is the type of auth.","type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKey is the S3 access key ID."},"secret_access_key":{"type":"string","description":"SecretAccessKey is the S3 secret access key."},"session_name":{"type":"string","description":"Session name is the identifier of the session."}}},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"S3Connector is the information required to define an S3 Connector."},"gcs_connector":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the GCS Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"secret_auth":{"description":"SecretAuth is the type of auth.","type":"object","properties":{"credentials_json":{"type":"string"}}},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"GCSConnector is the information required to define an GCS Connector."}},"description":"UpsertConfig is the information required to define an import connector config."}},"description":"CreateRequest is the input to the Create method."}}},"required":true},"tags":["ImportConnectorConfigs"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/import-connector-configs/{config.id}":{"patch":{"summary":"Update an Import Connector Config","description":"Updates the provided fields in a specific Import Connector Config.","operationId":"ImportConnectorConfigsUpdate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"config":{"type":"object","properties":{"id":{"type":"string","description":"ID is the globally unique ID of the import connector config."},"name":{"type":"string","description":"Name is the display name given to this import connector config."},"description":{"type":"string","description":"Description is an optional description given to this import connector config."},"s3_connector":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the S3 Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"cross_account":{"description":"CrossAccount is the type of auth.","type":"object","properties":{"user_arn":{"type":"string","description":"UserArn is the Amazon Resource Name (ARN) of the role to assume."},"session_name":{"type":"string","description":"Session name is the identifier of the session."},"principal":{"type":"string","description":"Output only. Principal is the principal for the trust relationship.","readOnly":true},"external_id":{"type":"string","description":"Output only. ExternalId is the external ID for the trust relationship.","readOnly":true}}},"access_keys":{"description":"S3AccessKeysAuth is the type of auth.","type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKey is the S3 access key ID."},"secret_access_key":{"type":"string","description":"SecretAccessKey is the S3 secret access key."},"session_name":{"type":"string","description":"Session name is the identifier of the session."}}},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"S3Provider is the information about the connector that can be returned."},"gcs_connector":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the GCS Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"GCSProvider is the information about the connector that can be returned."},"created_date_time":{"type":"string","format":"date-time","description":"CreatedDateTime is the date and time the import connector config was created."},"updated_date_time":{"type":"string","format":"date-time","description":"UpdatedDateTime is the date and time the import connector config was last updated."},"user_id":{"type":"string","description":"UserId is the ID of the user who created the import connector config."}},"description":"Config is the information that can be retrieved about an import connector config. It is all Output only.","readOnly":true}},"description":"UpdateResponse is the output of the Update method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Import Connector Config could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"config.id","description":"Output only. ID is the globally unique ID of the import connector config.","in":"path","required":true,"schema":{"type":"string"}},{"name":"update_mask","description":"UpdateMask is a field mask, allowing partial resource update.\\nThe update mask applies to the Allocation resource. For the `FieldMask` definition,\\nsee https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask","in":"query","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name is the display name given to this import connector config."},"description":{"type":"string","description":"Description is an optional description given to this import connector config."},"s3_connector":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the S3 Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"cross_account":{"description":"CrossAccount is the type of auth.","type":"object","properties":{"user_arn":{"type":"string","description":"UserArn is the Amazon Resource Name (ARN) of the role to assume."},"session_name":{"type":"string","description":"Session name is the identifier of the session."},"principal":{"type":"string","description":"Output only. Principal is the principal for the trust relationship.","readOnly":true},"external_id":{"type":"string","description":"Output only. ExternalId is the external ID for the trust relationship.","readOnly":true}}},"access_keys":{"description":"S3AccessKeysAuth is the type of auth.","type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKey is the S3 access key ID."},"secret_access_key":{"type":"string","description":"SecretAccessKey is the S3 secret access key."},"session_name":{"type":"string","description":"Session name is the identifier of the session."}}},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"S3Connector is the information required to define an S3 Connector."},"gcs_connector":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the GCS Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"secret_auth":{"description":"SecretAuth is the type of auth.","type":"object","properties":{"credentials_json":{"type":"string"}}},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"GCSConnector is the information required to define an GCS Connector."}},"description":"UpsertConfig is the information required to define an import connector config."}}},"required":true},"tags":["ImportConnectorConfigs"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/import-connector-configs/{config_id}":{"get":{"summary":"Get an Import Connector Config.","description":"Get the details of a specific Import Connector Config.","operationId":"ImportConnectorConfigsGet","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"config":{"type":"object","properties":{"id":{"type":"string","description":"ID is the globally unique ID of the import connector config."},"name":{"type":"string","description":"Name is the display name given to this import connector config."},"description":{"type":"string","description":"Description is an optional description given to this import connector config."},"s3_connector":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the S3 Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"cross_account":{"description":"CrossAccount is the type of auth.","type":"object","properties":{"user_arn":{"type":"string","description":"UserArn is the Amazon Resource Name (ARN) of the role to assume."},"session_name":{"type":"string","description":"Session name is the identifier of the session."},"principal":{"type":"string","description":"Output only. Principal is the principal for the trust relationship.","readOnly":true},"external_id":{"type":"string","description":"Output only. ExternalId is the external ID for the trust relationship.","readOnly":true}}},"access_keys":{"description":"S3AccessKeysAuth is the type of auth.","type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKey is the S3 access key ID."},"secret_access_key":{"type":"string","description":"SecretAccessKey is the S3 secret access key."},"session_name":{"type":"string","description":"Session name is the identifier of the session."}}},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"S3Provider is the information about the connector that can be returned."},"gcs_connector":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the GCS Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"GCSProvider is the information about the connector that can be returned."},"created_date_time":{"type":"string","format":"date-time","description":"CreatedDateTime is the date and time the import connector config was created."},"updated_date_time":{"type":"string","format":"date-time","description":"UpdatedDateTime is the date and time the import connector config was last updated."},"user_id":{"type":"string","description":"UserId is the ID of the user who created the import connector config."}},"description":"Config is the information that can be retrieved about an import connector config. It is all Output only.","readOnly":true}},"description":"GetResponse is the output of the Get method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Import Connector Config could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"config_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["ImportConnectorConfigs"],"security":[{"API_Keys":[]}]},"delete":{"summary":"Delete an Import Connector Config.","description":"Deletes a specific Import Connector Config.","operationId":"ImportConnectorConfigsDelete","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"config_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["ImportConnectorConfigs"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/executions":{"get":{"summary":"List Executions.","description":"List all import executions.","operationId":"ImportsListExecutions","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"executions":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Id is the ID of the execution."},"import_id":{"type":"string","description":"ImportId is the ID of the import used in the execution."},"bunker_id":{"type":"string","description":"BunkerId is the ID of the bunker used to execute the import."},"user_id":{"type":"string","description":"UserId is the ID of the user who executed the import."},"history":{"type":"array","items":{"type":"object","properties":{"status":{"type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS","description":"Status is an enum of the different states that an async task can be in."},"date_time":{"type":"string","format":"date-time"},"progress":{"type":"string"}},"description":"History holds information about the status of the import execution."},"description":"History is the status history of the import execution."},"current_status":{"type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS","description":"Status is an enum of the different states that an async task can be in."},"created_date_time":{"type":"string","format":"date-time","description":"CreatedDateTime is the creation date and time of the current execution."},"updated_date_time":{"type":"string","format":"date-time","description":"UpdatedDateTime is the date and time the execution was updated."},"tracker":{"title":"Tracker has the information of the progress of the import as whole","type":"object","properties":{"speed":{"type":"string","format":"int64","description":"Speed is the transferred average number of bytes per second."},"progress":{"type":"number","format":"float","description":"Progress is the transferred bytes percentage."},"transferred_bytes":{"type":"string","format":"int64","description":"TransferredBytes is the current transferred number of bytes."},"total_bytes":{"type":"string","format":"int64","description":"Total is the total number of bytes to be transferred."}},"description":"Tracker holds the information of the progress of the import execution as a whole."}},"description":"Execution holds information about an import execution."}},"pagination":{"type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}},"description":"PaginationResponse holds information on the returned records."}},"description":"ListExecutionsResponse is the output from the ListExecutions method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order_by","description":"OrderBy is a comma seperated value to define sorting.\\ne.g \'current_status DESC\'\\nThe values are seperated by space, \'{column} {ASC/DESC}\'","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter","description":"Filter is a string containing logic that can specify a restricted set of Executions to be returned.\\ne.g. `current_status eq \'WAITING\'`","in":"query","required":false,"schema":{"type":"string"}}],"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/executions/{execution_id}":{"get":{"summary":"Gets an Execution","description":"Gets a specific import execution.","operationId":"ImportsGetExecution","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"execution":{"type":"object","properties":{"id":{"type":"string","description":"Id is the ID of the execution."},"import_id":{"type":"string","description":"ImportId is the ID of the import used in the execution."},"bunker_id":{"type":"string","description":"BunkerId is the ID of the bunker used to execute the import."},"user_id":{"type":"string","description":"UserId is the ID of the user who executed the import."},"history":{"type":"array","items":{"type":"object","properties":{"status":{"type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS","description":"Status is an enum of the different states that an async task can be in."},"date_time":{"type":"string","format":"date-time"},"progress":{"type":"string"}},"description":"History holds information about the status of the import execution."},"description":"History is the status history of the import execution."},"current_status":{"type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS","description":"Status is an enum of the different states that an async task can be in."},"created_date_time":{"type":"string","format":"date-time","description":"CreatedDateTime is the creation date and time of the current execution."},"updated_date_time":{"type":"string","format":"date-time","description":"UpdatedDateTime is the date and time the execution was updated."},"tracker":{"title":"Tracker has the information of the progress of the import as whole","type":"object","properties":{"speed":{"type":"string","format":"int64","description":"Speed is the transferred average number of bytes per second."},"progress":{"type":"number","format":"float","description":"Progress is the transferred bytes percentage."},"transferred_bytes":{"type":"string","format":"int64","description":"TransferredBytes is the current transferred number of bytes."},"total_bytes":{"type":"string","format":"int64","description":"Total is the total number of bytes to be transferred."}},"description":"Tracker holds the information of the progress of the import execution as a whole."}},"description":"Execution holds information about an import execution."}},"description":"GetExecutionResponse is the output from the GetExecution method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Execution could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"execution_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/executions/{execution_id}/cancel":{"post":{"summary":"Cancel an Execution","description":"Cancels a specific import execution.","operationId":"ImportsCancelExecution","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Execution could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"execution_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/imports":{"get":{"summary":"List Import.","description":"List available Imports.","operationId":"ImportsList","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"imports":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"Output only. Id is the id for the import","readOnly":true},"name":{"type":"string","title":"Name is a name given to the import"},"description":{"type":"string","title":"Description is a description of the import"},"icc_id":{"type":"string","title":"IccId is the id of the icc used by the import"},"destination_id":{"type":"string","description":"DestinationId is the identifier of where the files will be imported to. Currently this is a bunker ID, but in future will be either a file store or workspace."},"data_filter":{"description":"DataFilter is the filtered data to import from the ICC.","type":"object","properties":{"filter":{"type":"array","items":{"type":"string"},"title":"Filter is an array of strings used to filter the data from the ICC. No filter == *"}}},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the id of the user who created the import.","readOnly":true}},"description":"Import is the information required to define an import."}},"pagination":{"type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}},"description":"PaginationResponse holds information on the returned records."}},"description":"ListResponse is the output of the List method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order_by","description":"OrderBy is a comma seperated value to define sorting.\\ne.g \'name,created_time DESC\'\\nThe values are seperated by space, \'{column} {ASC/DESC}\'","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter","description":"Filter is a string containing logic that can specify a restricted set of Imports to be returned.\\ne.g. `name co \'Test\' or name co \'Acme\'`","in":"query","required":false,"schema":{"type":"string"}}],"tags":["Imports"],"security":[{"API_Keys":[]}]},"post":{"summary":"Create an Import.","description":"Create a configuration for importing data.","operationId":"ImportsCreate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"import_id":{"type":"string"}},"description":"CreateResponse is the output of the Create method."}}}},"400":{"description":"Returned when the Import was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"409":{"description":"Returned when an Import with the same name already exists.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"import":{"type":"object","properties":{"id":{"type":"string","title":"Output only. Id is the id for the import","readOnly":true},"name":{"type":"string","title":"Name is a name given to the import"},"description":{"type":"string","title":"Description is a description of the import"},"icc_id":{"type":"string","title":"IccId is the id of the icc used by the import"},"destination_id":{"type":"string","description":"DestinationId is the identifier of where the files will be imported to. Currently this is a bunker ID, but in future will be either a file store or workspace."},"data_filter":{"description":"DataFilter is the filtered data to import from the ICC.","type":"object","properties":{"filter":{"type":"array","items":{"type":"string"},"title":"Filter is an array of strings used to filter the data from the ICC. No filter == *"}}},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the id of the user who created the import.","readOnly":true}},"description":"Import is the information required to define an import."}},"description":"CreateRequest is the input to the Create method."}}},"required":true},"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/imports/{import.id}":{"patch":{"summary":"Update an Import","description":"Updates the provided fields in a specific Import.","operationId":"ImportsUpdate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"import":{"type":"object","properties":{"id":{"type":"string","title":"Output only. Id is the id for the import","readOnly":true},"name":{"type":"string","title":"Name is a name given to the import"},"description":{"type":"string","title":"Description is a description of the import"},"icc_id":{"type":"string","title":"IccId is the id of the icc used by the import"},"destination_id":{"type":"string","description":"DestinationId is the identifier of where the files will be imported to. Currently this is a bunker ID, but in future will be either a file store or workspace."},"data_filter":{"description":"DataFilter is the filtered data to import from the ICC.","type":"object","properties":{"filter":{"type":"array","items":{"type":"string"},"title":"Filter is an array of strings used to filter the data from the ICC. No filter == *"}}},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the id of the user who created the import.","readOnly":true}},"description":"Import is the information required to define an import."}},"description":"UpdateResponse is the output of the Update method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Import could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"import.id","description":"Output only. Id is the id for the import","in":"path","required":true,"schema":{"type":"string"}},{"name":"update_mask","description":"UpdateMask is a field mask, allowing partial resource update.\\nThe update mask applies to the Allocation resource. For the `FieldMask` definition,\\nsee https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask","in":"query","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","title":"Name is a name given to the import"},"description":{"type":"string","title":"Description is a description of the import"},"icc_id":{"type":"string","title":"IccId is the id of the icc used by the import"},"destination_id":{"type":"string","description":"DestinationId is the identifier of where the files will be imported to. Currently this is a bunker ID, but in future will be either a file store or workspace."},"data_filter":{"description":"DataFilter is the filtered data to import from the ICC.","type":"object","properties":{"filter":{"type":"array","items":{"type":"string"},"title":"Filter is an array of strings used to filter the data from the ICC. No filter == *"}}},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the id of the user who created the import.","readOnly":true}},"description":"Import is the information required to define an import."}}},"required":true},"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/imports/{import_id}":{"get":{"summary":"Get an Import.","description":"Get the details of a specific Import.","operationId":"ImportsGet","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"import":{"type":"object","properties":{"id":{"type":"string","title":"Output only. Id is the id for the import","readOnly":true},"name":{"type":"string","title":"Name is a name given to the import"},"description":{"type":"string","title":"Description is a description of the import"},"icc_id":{"type":"string","title":"IccId is the id of the icc used by the import"},"destination_id":{"type":"string","description":"DestinationId is the identifier of where the files will be imported to. Currently this is a bunker ID, but in future will be either a file store or workspace."},"data_filter":{"description":"DataFilter is the filtered data to import from the ICC.","type":"object","properties":{"filter":{"type":"array","items":{"type":"string"},"title":"Filter is an array of strings used to filter the data from the ICC. No filter == *"}}},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the id of the user who created the import.","readOnly":true}},"description":"Import is the information required to define an import."}},"description":"GetResponse is the output of the Get method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Import could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"import_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Imports"],"security":[{"API_Keys":[]}]},"delete":{"summary":"Delete an Import.","description":"Deletes a specific Import.","operationId":"ImportsDelete","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"import_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/imports/{import_id}/execute":{"post":{"summary":"Executes an Import","description":"Executes an import for the specified import ID against the specified bunker.","operationId":"ImportsExecuteImport","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"execution_id":{"type":"string","description":"ExecutionId is the ID of the submitted execution."}},"description":"ExecuteImportResponse is the output from the ExecuteImport method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Import or Bunker could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"import_id","description":"ImportId is the ID of the import to execute.","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"compute_instance_id":{"type":"string","description":"ComputeInstanceId is the ID of the compute instance to use when executing."}},"description":"ExecuteImportRequest is the input to the ExecuteImport method."}}},"required":true},"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/transform/scaled-tasks":{"post":{"summary":"Start a scaled Transform.","description":"Start a transform using ephemeral compute instances to scale work horizontally","operationId":"TransformServiceCreateScaledTransform","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"transform_id":{"type":"string","description":"TransformId is the ID of the submitted transform."}},"description":"CreateScaledTransformResponse is the output from the CreateScaledTransform method."}}}},"400":{"description":"Returned when the Transform was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"script":{"type":"string","description":"Script is the transform script to be executed."},"file_vault_id":{"type":"string","description":"FileVaultId is the id of the filevault having source and destination file(s)."},"shard_count":{"type":"integer","format":"int64","description":"ShardCount is the number of shards to horizontally scale the transform execution across."},"allowance_permission_id":{"type":"string","title":"AllowancePermissionID"}},"description":"CreateScaledTransformRequest is the input to the CreateScaledTransform method."}}},"required":true},"tags":["TransformService"],"security":[{"API_Keys":[]}]}},"/api/v2/transform/scripts/validate":{"post":{"summary":"Validate a Transform.","description":"Validate a transform","operationId":"TransformServiceValidateTransform","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","description":"ValidateTransformResponse is the output of the ValidateTransform method."}}}},"400":{"description":"Returned when the Transform Script was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"script":{"type":"string","description":"Script is the transform script to be validated."}},"description":"ValidateTransformRequest is the input to the ValidateTransform method."}}},"required":true},"tags":["TransformService"],"security":[{"API_Keys":[]}]}},"/api/v2/transform/static-tasks":{"post":{"summary":"Start a static Transform.","description":"Start a transform using the static compute instance provided in the request","operationId":"TransformServiceCreateStaticTransform","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"transform_id":{"type":"string","description":"TransformId is the ID of the submitted transform."}},"description":"CreateStaticTransformResponse is the output from the CreateStaticTransform method."}}}},"400":{"description":"Returned when the Transform was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"script":{"type":"string","description":"Script is the transform script to be executed."},"file_vault_id":{"type":"string","description":"FileVaultId is the id of the filevault having source and destination file(s)."},"compute_instance_id":{"type":"string","description":"ComputeInstanceId is the id of an existing compute instance which will be used to execute the transformation."}},"description":"CreateStaticTransformRequest is the input to the CreateStaticTransform method."}}},"required":true},"tags":["TransformService"],"security":[{"API_Keys":[]}]}},"/api/v2/transform/tasks":{"get":{"summary":"List all transforms.","description":"List all transforms","operationId":"TransformServiceListTransforms","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"transforms":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Id is the ID of the transform."},"current_status":{"description":"CurrentStatus is the latest status of the transform aggregated from its constituent shards statuses.","type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS"},"script":{"type":"string","description":"Script is the transform script to be executed."},"shard_count":{"type":"integer","format":"int64","title":"ShardCount is the total number of shards in the transform"},"file_vault_id":{"type":"string","description":"FileVaultId is the id of the filevault having source and destination file(s)."},"user_id":{"type":"string","description":"UserId is the ID of the user who created the transform."},"created_date_time":{"type":"string","format":"date-time","description":"CreatedDateTime is the creation date and time of the transform."},"updated_date_time":{"type":"string","format":"date-time","description":"UpdatedDateTime is the latest date and time any transform shards were updated."}},"description":"Transform holds global information about a transform."},"description":"Transforms is the list of requested transforms."},"pagination":{"description":"Pagination is the pagination details of the returned transforms.","type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}}}},"description":"ListTransformsResponse is the output from the ListTransforms method."}}}},"400":{"description":"Returned when the ListTransforms request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"sort.order","description":"Order is the sort order.\\n\\n - ASC: ASC is ascending.\\n - DESC: DESC is descending.","in":"query","required":false,"schema":{"type":"string","enum":["ASC","DESC"],"default":"ASC"}},{"name":"sort.column","description":"Column is the column to sort on.","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter","description":"Filter is a string containing logic that can specify a restricted set of Transforms to be returned.\\ne.g. `history.status co \\"READY\\"`.","in":"query","required":false,"schema":{"type":"string"}}],"tags":["TransformService"],"security":[{"API_Keys":[]}]}},"/api/v2/transform/tasks/{transform_id}":{"get":{"summary":"Get a transform.","description":"Get a transform","operationId":"TransformServiceGetTransform","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"transform_details":{"description":"TransformDetails are details of the requested transform execution.","type":"object","properties":{"transform":{"type":"object","properties":{"id":{"type":"string","description":"Id is the ID of the transform."},"current_status":{"description":"CurrentStatus is the latest status of the transform aggregated from its constituent shards statuses.","type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS"},"script":{"type":"string","description":"Script is the transform script to be executed."},"shard_count":{"type":"integer","format":"int64","title":"ShardCount is the total number of shards in the transform"},"file_vault_id":{"type":"string","description":"FileVaultId is the id of the filevault having source and destination file(s)."},"user_id":{"type":"string","description":"UserId is the ID of the user who created the transform."},"created_date_time":{"type":"string","format":"date-time","description":"CreatedDateTime is the creation date and time of the transform."},"updated_date_time":{"type":"string","format":"date-time","description":"UpdatedDateTime is the latest date and time any transform shards were updated."}},"description":"Transform holds global information about a transform."},"shards":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Id is the ID of the shard."},"compute_instance_id":{"type":"string","description":"ComputeInstanceId is the compute instance used for executing the transform shard."},"current_status":{"description":"CurrentStatus is the latest status of the shard.","type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS"},"current_progress":{"type":"string","description":"CurrentProgress is the latest progress reported for the shard."},"created_date_time":{"type":"string","format":"date-time","description":"CreatedDateTime is the creation date and time of the shard."},"updated_date_time":{"type":"string","format":"date-time","description":"UpdatedDateTime is the date and time the shard was updated."},"histories":{"type":"array","items":{"type":"object","properties":{"status":{"description":"Status is the status of the transform execution shard.","type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS"},"date_time":{"type":"string","format":"date-time","description":"DateTime is the created time of the shard."},"progress":{"type":"string","description":"Progress is the reported progress for this history entry."},"message":{"type":"string","description":"Message is the reported message or error with status change."}},"description":"History holds information about the status of a transform execution shard."},"description":"History is the status history of the transform execution shard."}},"description":"Shard holds information about a transform task shard."},"description":"Shards hold a list of the shards that constitute the transform task."}}}},"description":"GetTransformResponse is the output from the GetTransform method."}}}},"400":{"description":"Returned when the GetTransform request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Transform could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"transform_id","description":"TransformId is the id of the requested transform.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["TransformService"],"security":[{"API_Keys":[]}]}},"/api/v2/transform/tasks/{transform_id}/cancel":{"post":{"summary":"Cancel a running transform.","description":"Cancel a running transform","operationId":"TransformServiceCancelTransform","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","description":"CancelTransformResponse is the response from the CancelTransform method."}}}},"400":{"description":"Returned when the CancelTransform request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Transform could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"transform_id","description":"TransformId is the id of the transform to cancel all possible shards of.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["TransformService"],"security":[{"API_Keys":[]}]}},"/api/v2/filevaults":{"get":{"summary":"List FileVaults.","description":"List available FileVaults.","operationId":"FileVaultsList","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"file_vaults":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the unique identifier of the FileVault.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this FileVault."},"description":{"type":"string","description":"Description is an optional description given to this FileVault."},"region":{"description":"Output only. Region identifies the region that this FileVault is located\\nin.","readOnly":true,"type":"string","enum":["UNKNOWN","AWS_EU_WEST_2","AWS_US_EAST_1","IBM_EU_CENTRAL_1","AWS_EU_CENTRAL_1"],"default":"UNKNOWN"},"created_by":{"type":"string","description":"Output only. CreatedBy is the id of the user that created this FileVault.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the id of the owner of this FileVault.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time that this FileVault was\\ncreated.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","title":"Output only. UpdatedDateTime is the date and time that thie FileVault was\\nupdated","readOnly":true}},"description":"FileVault is the details about a specific filevault."}},"pagination":{"description":"Pagination is the information on how the results were paginated.","type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}}}}}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order_by","description":"OrderBy is a comma seperated value to define sorting.\\ne.g \'name,created_time DESC\'\\nThe values are seperated by space, \'{column} {ASC/DESC}\'","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter","description":"Filter is a string containing logic that can specify a restricted set of\\nFileVaults to be returned. e.g. `name co \'Test\' or name co \'Acme\'`","in":"query","required":false,"schema":{"type":"string"}}],"tags":["FileVaults"],"security":[{"API_Keys":[]}]},"post":{"summary":"Create a new FileVault.","description":"Create a FileVault to hold data and connect to a bunker.","operationId":"FileVaultsCreate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"file_vault":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the unique identifier of the FileVault.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this FileVault."},"description":{"type":"string","description":"Description is an optional description given to this FileVault."},"region":{"description":"Output only. Region identifies the region that this FileVault is located\\nin.","readOnly":true,"type":"string","enum":["UNKNOWN","AWS_EU_WEST_2","AWS_US_EAST_1","IBM_EU_CENTRAL_1","AWS_EU_CENTRAL_1"],"default":"UNKNOWN"},"created_by":{"type":"string","description":"Output only. CreatedBy is the id of the user that created this FileVault.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the id of the owner of this FileVault.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time that this FileVault was\\ncreated.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","title":"Output only. UpdatedDateTime is the date and time that thie FileVault was\\nupdated","readOnly":true}},"description":"FileVault is the details about a specific filevault."}}}}}},"400":{"description":"Returned when the FileVault was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"409":{"description":"Returned when a FileVault with the same name already exists.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name is the display name given to this FileVault.","required":["name"]},"description":{"type":"string","description":"Description is an optional description given to this FileVault."},"region":{"title":"Region identifies the region that this FileVault is located in.\\nExpected format: cloudprovider + region e.g. aws-eu-west-2","type":"string","enum":["UNKNOWN","AWS_EU_WEST_2","AWS_US_EAST_1","IBM_EU_CENTRAL_1","AWS_EU_CENTRAL_1"],"default":"UNKNOWN","description":"Region enumerates the supported cloud providers and locations.\\n\\n - UNKNOWN: UNKNOWN means the region has not been defined.\\n - AWS_EU_WEST_2: AWS_EU_WEST_2 means AWS Europe (London).\\n - AWS_US_EAST_1: AWS_US_EAST_1 means AWS US East (N. Virginia).\\n - IBM_EU_CENTRAL_1: IBM_EU_CENTRAL_1 means IBM MZR EU Central (Frankfurt).\\n - AWS_EU_CENTRAL_1: AWS_EU_CENTRAL_1 means AWS Europe (Frankfurt)."}},"required":["name"]}}},"required":true},"tags":["FileVaults"],"security":[{"API_Keys":[]}]}},"/api/v2/filevaults/{file_vault.id}":{"patch":{"summary":"Update a FileVault","description":"Updates the provided fields in a specific FileVault.","operationId":"FileVaultsUpdate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"file_vault":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the unique identifier of the FileVault.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this FileVault."},"description":{"type":"string","description":"Description is an optional description given to this FileVault."},"region":{"description":"Output only. Region identifies the region that this FileVault is located\\nin.","readOnly":true,"type":"string","enum":["UNKNOWN","AWS_EU_WEST_2","AWS_US_EAST_1","IBM_EU_CENTRAL_1","AWS_EU_CENTRAL_1"],"default":"UNKNOWN"},"created_by":{"type":"string","description":"Output only. CreatedBy is the id of the user that created this FileVault.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the id of the owner of this FileVault.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time that this FileVault was\\ncreated.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","title":"Output only. UpdatedDateTime is the date and time that thie FileVault was\\nupdated","readOnly":true}},"description":"FileVault is the details about a specific filevault."}}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the FileVault could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"file_vault.id","description":"Output only. ID is the unique identifier of the FileVault.","in":"path","required":true,"schema":{"type":"string"}},{"name":"update_mask","description":"UpdateMask is a field mask, allowing partial resource update.\\nThe update mask applies to the Allocation resource. For the `FieldMask`\\ndefinition, see\\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask","in":"query","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name is the display name given to this FileVault."},"description":{"type":"string","description":"Description is an optional description given to this FileVault."}},"description":"UpdateFileVault is used to update a FileVault. Users can only update the\\nname, description and auth fields."}}},"required":true},"tags":["FileVaults"],"security":[{"API_Keys":[]}]}},"/api/v2/filevaults/{file_vault_id}/associate":{"post":{"summary":"Associate a FileVault with a bunker","description":"Associate a FileVault with a bunker, a filevault can be associated with with multiple bunkers","operationId":"FileVaultsAssociate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"file_vault_id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bunker_id":{"type":"string"}},"description":"AssociateRequest used to associate a filevault with the supplied bunker."}}},"required":true},"tags":["FileVaults"],"security":[{"API_Keys":[]}]}},"/api/v2/filevaults/{file_vault_id}/dissociate":{"post":{"summary":"Dissociate a FileVault from a bunker","description":"Dissociate a FileVault from a bunker","operationId":"FileVaultsDissociate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"file_vault_id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bunker_id":{"type":"string"}},"description":"DissociateRequest used to dissociate a filevault from the supplied bunker."}}},"required":true},"tags":["FileVaults"],"security":[{"API_Keys":[]}]}},"/api/v2/filevaults/{id}":{"get":{"summary":"Get a FileVault.","description":"Get the details of a specific FileVault.","operationId":"FileVaultsGet","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"file_vault":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the unique identifier of the FileVault.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this FileVault."},"description":{"type":"string","description":"Description is an optional description given to this FileVault."},"region":{"description":"Output only. Region identifies the region that this FileVault is located\\nin.","readOnly":true,"type":"string","enum":["UNKNOWN","AWS_EU_WEST_2","AWS_US_EAST_1","IBM_EU_CENTRAL_1","AWS_EU_CENTRAL_1"],"default":"UNKNOWN"},"created_by":{"type":"string","description":"Output only. CreatedBy is the id of the user that created this FileVault.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the id of the owner of this FileVault.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time that this FileVault was\\ncreated.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","title":"Output only. UpdatedDateTime is the date and time that thie FileVault was\\nupdated","readOnly":true}},"description":"FileVault is the details about a specific filevault."}}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the FileVault could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["FileVaults"],"security":[{"API_Keys":[]}]},"delete":{"summary":"Delete a FileVault.","description":"Deletes a specific FileVault.","operationId":"FileVaultsDelete","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["FileVaults"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/export/destinations":{"get":{"summary":"List Destinations","description":"Lists available Destinations.","operationId":"DestinationsListDestinations","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"pagination":{"type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}},"description":"PaginationResponse holds information on the returned records."},"destinations":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the globally unique ID of the destination.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the user or company ID of the owner of the destination.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this destination."},"description":{"type":"string","description":"Description is an optional description given to this destination."},"s3":{"type":"object","properties":{"bucket_name":{"type":"string","description":"BucketName is the name of the S3 Bucket."},"region":{"description":"Region is the region of the S3 Bucket.","type":"string","enum":["UNKNOWN_REGION","US_EAST_1","US_EAST_2","US_WEST_1","US_WEST_2","CA_CENTRAL_1","EU_WEST_1","EU_WEST_2","EU_CENTRAL_1","AP_SOUTHEAST_1","AP_SOUTHEAST_2","AP_SOUTH_1","AP_NORTHEAST_1","AP_NORTHEAST_2","SA_EAST_1","CN_NORTH_1"],"default":"UNKNOWN_REGION"},"default_push_overrides":{"title":"DefaultPushOverrides","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the s3 bucket to export data to."}},"description":"S3Overrides are the values that can be overridden when pushing to s3."},"access_key":{"type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKeyId is the id of the access key to authenticate with AWS."},"secret":{"type":"string","description":"Secret is the access key secret for authentication."},"session_token":{"type":"string","description":"SessionToken is an optional STS session token.\\nLeave blank if using an IAM User access key."}},"description":"S3AccessKeyAuth holds the details needed for access key / secret authentication."},"cross_account":{"type":"object","properties":{"push_role_arn":{"type":"string","description":"PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."},"session_name":{"type":"string","description":"SessionName is the name of the IAM role session."},"external_id":{"type":"string","description":"ExternalId is the aws ExternalId that must be set in your role\'s trust policy to enable cross account access. Output only.","readOnly":true}},"description":"S3CrossAccount holds the details needed for cross account authentication."}},"description":"S3Connector is the information required to define a destination using an S3 bucket."},"pubmatic":{"type":"object","properties":{"dpid":{"type":"integer","format":"int32","description":"DPID is your PubMatic data partner ID."}},"description":"PubmaticConnector is the information required to define a destination pushing to PubMatic."},"sftp":{"type":"object","properties":{"host":{"type":"string","description":"Host is the host address of the sftp server."},"port":{"type":"integer","format":"int32","description":"port is the port number that gets used when connecting to the sftp server."},"password_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"password":{"type":"string","description":"Password is the password of the user."}},"description":"SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."},"ssh_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"ssh_key":{"type":"string","description":"SshKey is the ssh key of the user."}},"description":"SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."},"host_keys":{"description":"HostKeys contains options for providing a public key to verify the host.","type":"object","properties":{"authorized_keys":{"type":"array","items":{"type":"string"},"description":"AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."},"known_hosts":{"type":"array","items":{"type":"string"},"description":"KnownHosts are the host public keys in OpenSSH known_hosts format."},"public_key_pem":{"type":"string","description":"PublicKeyPem is the servers public PEM key."}}},"gpg_public_key":{"type":"string","description":"GpgPublicKey is the GPG public key to use in encrypting the data. Optional."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"SftpConnector is the information required to define a destination pushing to a sftp server."},"gcs":{"type":"object","properties":{"bucket_name":{"type":"string","description":"Bucket Name is the name of the GCS bucket."},"gcs_service_account_config":{"type":"object","properties":{"type":{"type":"string","description":"Type is the type of account e.g. service_account."},"project_id":{"type":"string","description":"Project ID is the GCS project ID."},"private_key_id":{"type":"string","description":"Private Key ID used to authenticate the service account."},"private_key":{"type":"string","description":"Private Key is a PEM private key."},"client_email":{"type":"string","description":"Client Email is the service account email."},"client_id":{"type":"string","description":"Client ID is the user account ID."},"auth_uri":{"type":"string","description":"Authentication URI is the oauth2 uri."},"token_uri":{"type":"string","description":"Token URI is the oauth2 token."},"auth_provider_x509_cert_url":{"type":"string","description":"Authentication Provider x509 Certificate URL is the oauth2 certificate."},"client_x509_cert_url":{"type":"string","description":"Client x509 Certificate URL is the x509 metadata url containing the service account email."}},"description":"GCSServiceAccountConfig credentials which are used for communicating with GCS."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"GCSConnector is the information required to define a destination pushing to a sftp server."},"creator_id":{"type":"string","description":"Output only. CreatorId is the ID of the user who created the destination.","readOnly":true},"created_time":{"type":"string","format":"date-time","description":"Output only. CreatedTime is the date and time the destination was created.","readOnly":true},"updated_time":{"type":"string","format":"date-time","description":"Output only. UpdatedTime is the date and time the destination was last updated.","readOnly":true},"connector_type":{"description":"Output only. ConnectorType states the type of connector used by the destination.","readOnly":true,"type":"string","enum":["S3_ACCESS_KEYS","PUBMATIC","S3_CROSS_ACCOUNT","SFTP","GCS"],"default":"S3_ACCESS_KEYS"}},"description":"Destination is the information required to define destinations."}}},"description":"ListDestinationsResponse is the output of the ListDestination method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the right to view Destinations.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order_by","description":"OrderBy is a comma seperated value to define sorting.\\ne.g \'created_time,name DESC\'\\nThe values are seperated by space, \'{column} {ASC/DESC}\'\\nValid columns: name, created_time","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter.names","description":"Names is the filter to be applied to the names of the returned\\ndatasets. Supports partial matching. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}}],"tags":["Destinations"],"security":[{"API_Keys":[]}]},"post":{"summary":"Create a Destination","description":"Creates a Destination.","operationId":"DestinationsCreateDestination","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"destination_id":{"type":"string"}},"description":"CreateDestinationResponse is the output of the CreateDestination method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the right to create Destinations.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name is the display name given to this destination."},"description":{"type":"string","description":"Description is an optional description given to this destination."},"s3":{"type":"object","properties":{"bucket_name":{"type":"string","description":"BucketName is the name of the S3 Bucket."},"region":{"description":"Region is the region of the S3 Bucket.","type":"string","enum":["UNKNOWN_REGION","US_EAST_1","US_EAST_2","US_WEST_1","US_WEST_2","CA_CENTRAL_1","EU_WEST_1","EU_WEST_2","EU_CENTRAL_1","AP_SOUTHEAST_1","AP_SOUTHEAST_2","AP_SOUTH_1","AP_NORTHEAST_1","AP_NORTHEAST_2","SA_EAST_1","CN_NORTH_1"],"default":"UNKNOWN_REGION"},"default_push_overrides":{"title":"DefaultPushOverrides","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the s3 bucket to export data to."}},"description":"S3Overrides are the values that can be overridden when pushing to s3."},"access_key":{"type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKeyId is the id of the access key to authenticate with AWS."},"secret":{"type":"string","description":"Secret is the access key secret for authentication."},"session_token":{"type":"string","description":"SessionToken is an optional STS session token.\\nLeave blank if using an IAM User access key."}},"description":"S3AccessKeyAuth holds the details needed for access key / secret authentication."},"cross_account":{"type":"object","properties":{"push_role_arn":{"type":"string","description":"PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."},"session_name":{"type":"string","description":"SessionName is the name of the IAM role session."},"external_id":{"type":"string","description":"ExternalId is the aws ExternalId that must be set in your role\'s trust policy to enable cross account access. Output only.","readOnly":true}},"description":"S3CrossAccount holds the details needed for cross account authentication."}},"description":"S3Connector is the information required to define a destination using an S3 bucket."},"pubmatic":{"type":"object","properties":{"dpid":{"type":"integer","format":"int32","description":"DPID is your PubMatic data partner ID."}},"description":"PubmaticConnector is the information required to define a destination pushing to PubMatic."},"sftp":{"type":"object","properties":{"host":{"type":"string","description":"Host is the host address of the sftp server."},"port":{"type":"integer","format":"int32","description":"port is the port number that gets used when connecting to the sftp server."},"password_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"password":{"type":"string","description":"Password is the password of the user."}},"description":"SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."},"ssh_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"ssh_key":{"type":"string","description":"SshKey is the ssh key of the user."}},"description":"SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."},"host_keys":{"description":"HostKeys contains options for providing a public key to verify the host.","type":"object","properties":{"authorized_keys":{"type":"array","items":{"type":"string"},"description":"AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."},"known_hosts":{"type":"array","items":{"type":"string"},"description":"KnownHosts are the host public keys in OpenSSH known_hosts format."},"public_key_pem":{"type":"string","description":"PublicKeyPem is the servers public PEM key."}}},"gpg_public_key":{"type":"string","description":"GpgPublicKey is the GPG public key to use in encrypting the data. Optional."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"SftpConnector is the information required to define a destination pushing to a sftp server."},"gcs":{"type":"object","properties":{"bucket_name":{"type":"string","description":"Bucket Name is the name of the GCS bucket."},"gcs_service_account_config":{"type":"object","properties":{"type":{"type":"string","description":"Type is the type of account e.g. service_account."},"project_id":{"type":"string","description":"Project ID is the GCS project ID."},"private_key_id":{"type":"string","description":"Private Key ID used to authenticate the service account."},"private_key":{"type":"string","description":"Private Key is a PEM private key."},"client_email":{"type":"string","description":"Client Email is the service account email."},"client_id":{"type":"string","description":"Client ID is the user account ID."},"auth_uri":{"type":"string","description":"Authentication URI is the oauth2 uri."},"token_uri":{"type":"string","description":"Token URI is the oauth2 token."},"auth_provider_x509_cert_url":{"type":"string","description":"Authentication Provider x509 Certificate URL is the oauth2 certificate."},"client_x509_cert_url":{"type":"string","description":"Client x509 Certificate URL is the x509 metadata url containing the service account email."}},"description":"GCSServiceAccountConfig credentials which are used for communicating with GCS."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"GCSConnector is the information required to define a destination pushing to a sftp server."}},"description":"CreateDestinationRequest is the input to the CreateDestination method."}}},"required":true},"tags":["Destinations"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/export/destinations/{destination.id}":{"patch":{"summary":"Update a Destination","description":"Updates the provided fields in a specific Destination.","operationId":"DestinationsUpdateDestination","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"destination":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the globally unique ID of the destination.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the user or company ID of the owner of the destination.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this destination."},"description":{"type":"string","description":"Description is an optional description given to this destination."},"s3":{"type":"object","properties":{"bucket_name":{"type":"string","description":"BucketName is the name of the S3 Bucket."},"region":{"description":"Region is the region of the S3 Bucket.","type":"string","enum":["UNKNOWN_REGION","US_EAST_1","US_EAST_2","US_WEST_1","US_WEST_2","CA_CENTRAL_1","EU_WEST_1","EU_WEST_2","EU_CENTRAL_1","AP_SOUTHEAST_1","AP_SOUTHEAST_2","AP_SOUTH_1","AP_NORTHEAST_1","AP_NORTHEAST_2","SA_EAST_1","CN_NORTH_1"],"default":"UNKNOWN_REGION"},"default_push_overrides":{"title":"DefaultPushOverrides","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the s3 bucket to export data to."}},"description":"S3Overrides are the values that can be overridden when pushing to s3."},"access_key":{"type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKeyId is the id of the access key to authenticate with AWS."},"secret":{"type":"string","description":"Secret is the access key secret for authentication."},"session_token":{"type":"string","description":"SessionToken is an optional STS session token.\\nLeave blank if using an IAM User access key."}},"description":"S3AccessKeyAuth holds the details needed for access key / secret authentication."},"cross_account":{"type":"object","properties":{"push_role_arn":{"type":"string","description":"PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."},"session_name":{"type":"string","description":"SessionName is the name of the IAM role session."},"external_id":{"type":"string","description":"ExternalId is the aws ExternalId that must be set in your role\'s trust policy to enable cross account access. Output only.","readOnly":true}},"description":"S3CrossAccount holds the details needed for cross account authentication."}},"description":"S3Connector is the information required to define a destination using an S3 bucket."},"pubmatic":{"type":"object","properties":{"dpid":{"type":"integer","format":"int32","description":"DPID is your PubMatic data partner ID."}},"description":"PubmaticConnector is the information required to define a destination pushing to PubMatic."},"sftp":{"type":"object","properties":{"host":{"type":"string","description":"Host is the host address of the sftp server."},"port":{"type":"integer","format":"int32","description":"port is the port number that gets used when connecting to the sftp server."},"password_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"password":{"type":"string","description":"Password is the password of the user."}},"description":"SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."},"ssh_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"ssh_key":{"type":"string","description":"SshKey is the ssh key of the user."}},"description":"SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."},"host_keys":{"description":"HostKeys contains options for providing a public key to verify the host.","type":"object","properties":{"authorized_keys":{"type":"array","items":{"type":"string"},"description":"AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."},"known_hosts":{"type":"array","items":{"type":"string"},"description":"KnownHosts are the host public keys in OpenSSH known_hosts format."},"public_key_pem":{"type":"string","description":"PublicKeyPem is the servers public PEM key."}}},"gpg_public_key":{"type":"string","description":"GpgPublicKey is the GPG public key to use in encrypting the data. Optional."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"SftpConnector is the information required to define a destination pushing to a sftp server."},"gcs":{"type":"object","properties":{"bucket_name":{"type":"string","description":"Bucket Name is the name of the GCS bucket."},"gcs_service_account_config":{"type":"object","properties":{"type":{"type":"string","description":"Type is the type of account e.g. service_account."},"project_id":{"type":"string","description":"Project ID is the GCS project ID."},"private_key_id":{"type":"string","description":"Private Key ID used to authenticate the service account."},"private_key":{"type":"string","description":"Private Key is a PEM private key."},"client_email":{"type":"string","description":"Client Email is the service account email."},"client_id":{"type":"string","description":"Client ID is the user account ID."},"auth_uri":{"type":"string","description":"Authentication URI is the oauth2 uri."},"token_uri":{"type":"string","description":"Token URI is the oauth2 token."},"auth_provider_x509_cert_url":{"type":"string","description":"Authentication Provider x509 Certificate URL is the oauth2 certificate."},"client_x509_cert_url":{"type":"string","description":"Client x509 Certificate URL is the x509 metadata url containing the service account email."}},"description":"GCSServiceAccountConfig credentials which are used for communicating with GCS."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"GCSConnector is the information required to define a destination pushing to a sftp server."},"creator_id":{"type":"string","description":"Output only. CreatorId is the ID of the user who created the destination.","readOnly":true},"created_time":{"type":"string","format":"date-time","description":"Output only. CreatedTime is the date and time the destination was created.","readOnly":true},"updated_time":{"type":"string","format":"date-time","description":"Output only. UpdatedTime is the date and time the destination was last updated.","readOnly":true},"connector_type":{"description":"Output only. ConnectorType states the type of connector used by the destination.","readOnly":true,"type":"string","enum":["S3_ACCESS_KEYS","PUBMATIC","S3_CROSS_ACCOUNT","SFTP","GCS"],"default":"S3_ACCESS_KEYS"}},"description":"Destination is the information required to define destinations."}},"description":"UpdateDestinationResponse is the output of the UpdateDestination method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the right to update the Destination.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Destination could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"destination.id","description":"Output only. ID is the globally unique ID of the destination.","in":"path","required":true,"schema":{"type":"string"}},{"name":"update_mask","description":"UpdateMask is a field mask, allowing partial resource update.\\nThe update mask applies to the Allocation resource. For the `FieldMask` definition,\\nsee https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask","in":"query","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"owner_id":{"type":"string","description":"Output only. OwnerId is the user or company ID of the owner of the destination.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this destination."},"description":{"type":"string","description":"Description is an optional description given to this destination."},"s3":{"type":"object","properties":{"bucket_name":{"type":"string","description":"BucketName is the name of the S3 Bucket."},"region":{"description":"Region is the region of the S3 Bucket.","type":"string","enum":["UNKNOWN_REGION","US_EAST_1","US_EAST_2","US_WEST_1","US_WEST_2","CA_CENTRAL_1","EU_WEST_1","EU_WEST_2","EU_CENTRAL_1","AP_SOUTHEAST_1","AP_SOUTHEAST_2","AP_SOUTH_1","AP_NORTHEAST_1","AP_NORTHEAST_2","SA_EAST_1","CN_NORTH_1"],"default":"UNKNOWN_REGION"},"default_push_overrides":{"title":"DefaultPushOverrides","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the s3 bucket to export data to."}},"description":"S3Overrides are the values that can be overridden when pushing to s3."},"access_key":{"type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKeyId is the id of the access key to authenticate with AWS."},"secret":{"type":"string","description":"Secret is the access key secret for authentication."},"session_token":{"type":"string","description":"SessionToken is an optional STS session token.\\nLeave blank if using an IAM User access key."}},"description":"S3AccessKeyAuth holds the details needed for access key / secret authentication."},"cross_account":{"type":"object","properties":{"push_role_arn":{"type":"string","description":"PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."},"session_name":{"type":"string","description":"SessionName is the name of the IAM role session."},"external_id":{"type":"string","description":"ExternalId is the aws ExternalId that must be set in your role\'s trust policy to enable cross account access. Output only.","readOnly":true}},"description":"S3CrossAccount holds the details needed for cross account authentication."}},"description":"S3Connector is the information required to define a destination using an S3 bucket."},"pubmatic":{"type":"object","properties":{"dpid":{"type":"integer","format":"int32","description":"DPID is your PubMatic data partner ID."}},"description":"PubmaticConnector is the information required to define a destination pushing to PubMatic."},"sftp":{"type":"object","properties":{"host":{"type":"string","description":"Host is the host address of the sftp server."},"port":{"type":"integer","format":"int32","description":"port is the port number that gets used when connecting to the sftp server."},"password_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"password":{"type":"string","description":"Password is the password of the user."}},"description":"SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."},"ssh_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"ssh_key":{"type":"string","description":"SshKey is the ssh key of the user."}},"description":"SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."},"host_keys":{"description":"HostKeys contains options for providing a public key to verify the host.","type":"object","properties":{"authorized_keys":{"type":"array","items":{"type":"string"},"description":"AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."},"known_hosts":{"type":"array","items":{"type":"string"},"description":"KnownHosts are the host public keys in OpenSSH known_hosts format."},"public_key_pem":{"type":"string","description":"PublicKeyPem is the servers public PEM key."}}},"gpg_public_key":{"type":"string","description":"GpgPublicKey is the GPG public key to use in encrypting the data. Optional."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"SftpConnector is the information required to define a destination pushing to a sftp server."},"gcs":{"type":"object","properties":{"bucket_name":{"type":"string","description":"Bucket Name is the name of the GCS bucket."},"gcs_service_account_config":{"type":"object","properties":{"type":{"type":"string","description":"Type is the type of account e.g. service_account."},"project_id":{"type":"string","description":"Project ID is the GCS project ID."},"private_key_id":{"type":"string","description":"Private Key ID used to authenticate the service account."},"private_key":{"type":"string","description":"Private Key is a PEM private key."},"client_email":{"type":"string","description":"Client Email is the service account email."},"client_id":{"type":"string","description":"Client ID is the user account ID."},"auth_uri":{"type":"string","description":"Authentication URI is the oauth2 uri."},"token_uri":{"type":"string","description":"Token URI is the oauth2 token."},"auth_provider_x509_cert_url":{"type":"string","description":"Authentication Provider x509 Certificate URL is the oauth2 certificate."},"client_x509_cert_url":{"type":"string","description":"Client x509 Certificate URL is the x509 metadata url containing the service account email."}},"description":"GCSServiceAccountConfig credentials which are used for communicating with GCS."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"GCSConnector is the information required to define a destination pushing to a sftp server."},"creator_id":{"type":"string","description":"Output only. CreatorId is the ID of the user who created the destination.","readOnly":true},"created_time":{"type":"string","format":"date-time","description":"Output only. CreatedTime is the date and time the destination was created.","readOnly":true},"updated_time":{"type":"string","format":"date-time","description":"Output only. UpdatedTime is the date and time the destination was last updated.","readOnly":true},"connector_type":{"description":"Output only. ConnectorType states the type of connector used by the destination.","readOnly":true,"type":"string","enum":["S3_ACCESS_KEYS","PUBMATIC","S3_CROSS_ACCOUNT","SFTP","GCS"],"default":"S3_ACCESS_KEYS"}},"description":"Destination is the information required to define destinations."}}},"required":true},"tags":["Destinations"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/export/destinations/{destination_id}":{"get":{"summary":"Get a Destination","description":"Gets a specific Destination.","operationId":"DestinationsGetDestination","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"destination":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the globally unique ID of the destination.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the user or company ID of the owner of the destination.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this destination."},"description":{"type":"string","description":"Description is an optional description given to this destination."},"s3":{"type":"object","properties":{"bucket_name":{"type":"string","description":"BucketName is the name of the S3 Bucket."},"region":{"description":"Region is the region of the S3 Bucket.","type":"string","enum":["UNKNOWN_REGION","US_EAST_1","US_EAST_2","US_WEST_1","US_WEST_2","CA_CENTRAL_1","EU_WEST_1","EU_WEST_2","EU_CENTRAL_1","AP_SOUTHEAST_1","AP_SOUTHEAST_2","AP_SOUTH_1","AP_NORTHEAST_1","AP_NORTHEAST_2","SA_EAST_1","CN_NORTH_1"],"default":"UNKNOWN_REGION"},"default_push_overrides":{"title":"DefaultPushOverrides","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the s3 bucket to export data to."}},"description":"S3Overrides are the values that can be overridden when pushing to s3."},"access_key":{"type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKeyId is the id of the access key to authenticate with AWS."},"secret":{"type":"string","description":"Secret is the access key secret for authentication."},"session_token":{"type":"string","description":"SessionToken is an optional STS session token.\\nLeave blank if using an IAM User access key."}},"description":"S3AccessKeyAuth holds the details needed for access key / secret authentication."},"cross_account":{"type":"object","properties":{"push_role_arn":{"type":"string","description":"PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."},"session_name":{"type":"string","description":"SessionName is the name of the IAM role session."},"external_id":{"type":"string","description":"ExternalId is the aws ExternalId that must be set in your role\'s trust policy to enable cross account access. Output only.","readOnly":true}},"description":"S3CrossAccount holds the details needed for cross account authentication."}},"description":"S3Connector is the information required to define a destination using an S3 bucket."},"pubmatic":{"type":"object","properties":{"dpid":{"type":"integer","format":"int32","description":"DPID is your PubMatic data partner ID."}},"description":"PubmaticConnector is the information required to define a destination pushing to PubMatic."},"sftp":{"type":"object","properties":{"host":{"type":"string","description":"Host is the host address of the sftp server."},"port":{"type":"integer","format":"int32","description":"port is the port number that gets used when connecting to the sftp server."},"password_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"password":{"type":"string","description":"Password is the password of the user."}},"description":"SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."},"ssh_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"ssh_key":{"type":"string","description":"SshKey is the ssh key of the user."}},"description":"SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."},"host_keys":{"description":"HostKeys contains options for providing a public key to verify the host.","type":"object","properties":{"authorized_keys":{"type":"array","items":{"type":"string"},"description":"AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."},"known_hosts":{"type":"array","items":{"type":"string"},"description":"KnownHosts are the host public keys in OpenSSH known_hosts format."},"public_key_pem":{"type":"string","description":"PublicKeyPem is the servers public PEM key."}}},"gpg_public_key":{"type":"string","description":"GpgPublicKey is the GPG public key to use in encrypting the data. Optional."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"SftpConnector is the information required to define a destination pushing to a sftp server."},"gcs":{"type":"object","properties":{"bucket_name":{"type":"string","description":"Bucket Name is the name of the GCS bucket."},"gcs_service_account_config":{"type":"object","properties":{"type":{"type":"string","description":"Type is the type of account e.g. service_account."},"project_id":{"type":"string","description":"Project ID is the GCS project ID."},"private_key_id":{"type":"string","description":"Private Key ID used to authenticate the service account."},"private_key":{"type":"string","description":"Private Key is a PEM private key."},"client_email":{"type":"string","description":"Client Email is the service account email."},"client_id":{"type":"string","description":"Client ID is the user account ID."},"auth_uri":{"type":"string","description":"Authentication URI is the oauth2 uri."},"token_uri":{"type":"string","description":"Token URI is the oauth2 token."},"auth_provider_x509_cert_url":{"type":"string","description":"Authentication Provider x509 Certificate URL is the oauth2 certificate."},"client_x509_cert_url":{"type":"string","description":"Client x509 Certificate URL is the x509 metadata url containing the service account email."}},"description":"GCSServiceAccountConfig credentials which are used for communicating with GCS."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"GCSConnector is the information required to define a destination pushing to a sftp server."},"creator_id":{"type":"string","description":"Output only. CreatorId is the ID of the user who created the destination.","readOnly":true},"created_time":{"type":"string","format":"date-time","description":"Output only. CreatedTime is the date and time the destination was created.","readOnly":true},"updated_time":{"type":"string","format":"date-time","description":"Output only. UpdatedTime is the date and time the destination was last updated.","readOnly":true},"connector_type":{"description":"Output only. ConnectorType states the type of connector used by the destination.","readOnly":true,"type":"string","enum":["S3_ACCESS_KEYS","PUBMATIC","S3_CROSS_ACCOUNT","SFTP","GCS"],"default":"S3_ACCESS_KEYS"}},"description":"Destination is the information required to define destinations."}},"description":"GetDestinationResponse is the output of the GetDestination method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the right to view Destinations.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Destination could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"destination_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Destinations"],"security":[{"API_Keys":[]}]},"delete":{"summary":"Delete a Destination","description":"Deletes a specific Destination.","operationId":"DestinationsDeleteDestination","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the right to delete the Destination.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"destination_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Destinations"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/export/execute":{"post":{"summary":"Push to a destination","description":"Pushes a result into a destination.","operationId":"DestinationsPushResults","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"push_id":{"type":"string","description":"PushId is the unique identifier for the requested push."}},"description":"PushResultsResponse is the output of the PushResults request."}}}},"400":{"description":"Returned when the request is invalid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the right to push to the Destinations.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the destination, query or the dataset does not exist.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"destination_id":{"type":"string","description":"DestinationID is the unique identifier for destination."},"dataset_id":{"type":"string","description":"DatasetId is the id of the dataset used for the query."},"activation_query_id":{"type":"string","description":"ActivationQueryId is the id of the activation query."},"cohort_version":{"type":"string","description":"CohortVersion is the version of the cohort to push."},"s3":{"description":"S3 are the push time variable for the s3 connector type.","type":"object","properties":{"filename":{"type":"string","description":"Filename is the name used for file when pushing the results to a destination."},"overrides":{"description":"Overrides contains the fields that can be overridden when pushing to s3.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the s3 bucket to export data to."}}}}},"pubmatic":{"description":"Pubmatic are the overrides for the PubMatic connector type.","type":"object","properties":{"user_id_column":{"type":"string","description":"UserIDColumn is the name of the output column you want mapping to PubMatic userid field."},"uid_type":{"description":"UIDType is a value that determines what the identity partner\'s PubMatic user ID represents.","type":"string","enum":["COOKIE_ID","DEVICE_ID","BOUNCE_X","TTD","ID5","CRITEO_RTUS","IDENTITY_LINK","PUB_COMMON_ID","FIRST_PARTY_ID","LIVE_INTENT","BRITEPOOL","PARRABLE","CRITEO_ID","MERKLE_M1","TTD_UID","LOTAME_PANORAMA","QUANTCAST_ID","FABRICK_ID","NET_ID","ZEOTAP","SHARED_ID","NUID","IMUID"],"default":"COOKIE_ID"},"country_code":{"description":"CountryCode is the country code that the users belong to.","type":"string","enum":["US","AT","BE","CA","CN","CY","DK","EG","FJ","FI","FR","DE","GR","HK","HU","IS","IN","IE","IT","JP","LU","NL","NZ","NO","PL","PT","SG","ES","SE","CH","GB","AU"],"default":"US"},"addseg":{"type":"array","items":{"type":"string"},"description":"Addseg is a  list of audiences to add users to."}}},"sftp":{"description":"Sftp are the overrides for the sftp connector type.","type":"object","properties":{"filename":{"type":"string","description":"Filename is the name used for file when pushing the results to a destination."},"overrides":{"description":"Overrides contains the fields that can be overridden when pushing to a sftp server.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}}},"gcs":{"description":"gcs are the overrides for the gcs connector type.","type":"object","properties":{"filename":{"type":"string","description":"Filename is the name used for file when pushing the results to a destination."},"gcs_sharding":{"description":"GCS Sharding conatins file sharding configurations. Optional.","type":"object","properties":{"suffix":{"type":"string","description":"Suffix used when splitting large files (will be followed by the number of the file). Optional."},"sharding_size":{"type":"string","description":"Sharding Size allows the user to select a Max file size in MB (if splitting large files). Optional - 1024 mb should be the default."}}},"overrides":{"description":"Overrides contains the fields that can be overridden when pushing to a sftp server.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}}}},"description":"PushResultsRequest is input to the PushResult request."}}},"required":true},"tags":["Destinations"],"security":[{"API_Keys":[]}]}},"/api/v2/files/{cloud_vault_id}":{"get":{"summary":"List files","description":"List available files with any metadata","operationId":"FilesServicelistFiles","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"files":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The name of the file.","readOnly":true},"size":{"type":"string","format":"int64","description":"The size of the file in bytes.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"The AWS timestamp for when this file was created","readOnly":true},"metadata":{"description":"The metadata associated with this file.","readOnly":true,"type":"object","properties":{"origin":{"type":"object","description":"The details of the origin of the file.","readOnly":true},"user_settings":{"type":"object","description":"The user settings associated with this file.","readOnly":true},"last_modified_date_time":{"type":"string","format":"date-time","description":"The time at which we most recently updated (or created) this Metadata.","readOnly":true}}}},"description":"File is the combination of File attributes and File metadata."},"description":"Files are a list of data for files matching the list request."},"pagination":{"description":"Pagination is the information on how the results were paginated.","type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}}}},"description":"ListFilesResponse is the output of the List method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"cloud_vault_id","description":"CloudVaultId is the id of the Cloud Vault to list files from.","in":"path","required":true,"schema":{"type":"string"}},{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order_by","description":"OrderBy is a comma seperated value to define sorting.\\ne.g \'name,created_time DESC\'.\\nThe values are sperated by space, \'{column} {ASC/DESC}\'.\\nThese are the values that are sortable:\\n  name\\n  size\\n  created_date_time (in RFC3339 format)","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter","description":"Filter is a string containing logic that can specify a restricted set of\\nFiles to be returned. e.g. `name co \'Test\' or name co \'Acme\'`. These are\\nthe supported fields for filtering:\\n  name\\n  size\\n  created_date_time (in RFC3339 format)","in":"query","required":false,"schema":{"type":"string"}}],"tags":["FilesService"],"security":[{"API_Keys":[]}]}},"/api/v2/files/{cloud_vault_id}/{name}":{"get":{"summary":"Get information about a specific file","description":"Gets information about a file along with any metadata","operationId":"FilesServicegetFile","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"The name of the file.","readOnly":true},"size":{"type":"string","format":"int64","description":"The size of the file in bytes.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"The AWS timestamp for when this file was created","readOnly":true},"metadata":{"description":"The metadata associated with this file.","readOnly":true,"type":"object","properties":{"origin":{"type":"object","description":"The details of the origin of the file.","readOnly":true},"user_settings":{"type":"object","description":"The user settings associated with this file.","readOnly":true},"last_modified_date_time":{"type":"string","format":"date-time","description":"The time at which we most recently updated (or created) this Metadata.","readOnly":true}}}},"description":"File is the combination of File attributes and File metadata."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the File could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"cloud_vault_id","description":"CloudVaultId is the id of the Cloud Vault where the file to get data about is\\nstored.","in":"path","required":true,"schema":{"type":"string"}},{"name":"name","description":"Name is the name of the file to get data about.","in":"path","required":true,"schema":{"type":"string","pattern":".+"}}],"tags":["FilesService"],"security":[{"API_Keys":[]}]},"delete":{"summary":"Delete file","description":"Delete the specified file","operationId":"FilesServicedeleteFile","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","description":"DeleteFileResponse is an empty response for the Delete file request."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"cloud_vault_id","description":"The globally unique identifier for the Cloud Vault where the file to delete is.","in":"path","required":true,"schema":{"type":"string"}},{"name":"name","description":"The name of the file to be deleted.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["FilesService"],"security":[{"API_Keys":[]}]},"patch":{"summary":"Updates metadata for a file.","description":"Updates the metadata for a file on a specific Cloud Vault.","operationId":"FilesServiceupdateFileMetadata","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"The name of the file.","readOnly":true},"size":{"type":"string","format":"int64","description":"The size of the file in bytes.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"The AWS timestamp for when this file was created","readOnly":true},"metadata":{"description":"The metadata associated with this file.","readOnly":true,"type":"object","properties":{"origin":{"type":"object","description":"The details of the origin of the file.","readOnly":true},"user_settings":{"type":"object","description":"The user settings associated with this file.","readOnly":true},"last_modified_date_time":{"type":"string","format":"date-time","description":"The time at which we most recently updated (or created) this Metadata.","readOnly":true}}}},"description":"File is the combination of File attributes and File metadata."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Cloud Vault could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"cloud_vault_id","description":"The globally unique identifier for the Cloud Vault where the file to delete is.","in":"path","required":true,"schema":{"type":"string"}},{"name":"name","description":"The name of the file to be deleted.","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","description":"A map of string to any value that can be used for any user specific tags or metadata. Some settings such as \'hidden\' are interpreted by the UI. An update replaces all all previous values."}}},"description":"UserSettings contains the new user settings to associate with the file.","required":true},"tags":["FilesService"],"security":[{"API_Keys":[]}]}},"/api/v2/files/{update_bulk.cloud_vault_id}":{"patch":{"summary":"Update or add metadata to multiple files in a Cloud Vault.","description":"Update or add metadata to multiple files in a Cloud Vault.","operationId":"FilesServiceupdateBulkFileMetadata","responses":{"200":{"description":"Returned when the request is accepted","content":{"application/json":{"schema":{"type":"object","description":"UpdateBulkMetadataResponse is an empty response for the UpdateBulk request."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","FILE_INVALID_REGION","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED","NORMALIZATIONS_CONFIG_NOT_FOUND","NORMALIZATIONS_TASK_NOT_FOUND","NORMALIZATIONS_CANNOT_CANCEL_TASK","NORMALIZATIONS_NO_INPUT_FILES"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported.\\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\\nnormalization configId cannot be found.\\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\\nnormalizationId cannot be found.\\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\\ncannot produce a file from the specified filevault."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"update_bulk.cloud_vault_id","description":"The globally unique identifier for the Cloud Vault where the files to bulk apply metadata to are.","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"filenames":{"type":"array","items":{"type":"string"},"description":"A list of the files in the Cloud Vault to bulk apply metadata to."},"user_settings":{"type":"object","description":"A map of string to any value that can be used for any user specific tags or metadata. Some settings such as \'hidden\' are interpreted by the UI. An update replaces all all previous values."}},"title":"UpdateBulkMetadata is the bulk update request."}}},"description":"UpdateBulkMetadata is the bulk update request.","required":true},"tags":["FilesService"],"security":[{"API_Keys":[]}]}}},"tags":[{"name":"ImportConnectorConfigs","description":"Define templates for the importing of data from various remote systems into the InfoSum platform."},{"name":"Imports","description":"Create, Run and Manage import tasks; which are used to import data from a 3rd party system into a File Vault."},{"name":"TransformService","description":"Run transformation scripts against data stored in a File Vault."},{"name":"FileVaults","description":"Create and manage File Vaults which allow the storage of raw data."},{"name":"Destinations","description":"Define how and where to send data when it is exported from the InfoSum platform."},{"name":"FilesService","description":"List, Delete and Manage metadata about files within a Cloud Vault."}],"components":{"securitySchemes":{"API_Keys":{"type":"apiKey","description":"Your API key.","name":"Authorization","in":"header"}}}}}},"docusaurus-plugin-content-docs":{"default":{"path":"/infosum-docs/docs","versions":[{"name":"current","label":"Next","isLast":true,"path":"/infosum-docs/docs","mainDocId":"intro","docs":[{"id":"authentication","path":"/infosum-docs/docs/authentication","sidebar":"tutorialSidebar"},{"id":"cloudvaults/index","path":"/infosum-docs/docs/cloudvaults/","sidebar":"tutorialSidebar"},{"id":"getting-started/index","path":"/infosum-docs/docs/getting-started/","sidebar":"tutorialSidebar"},{"id":"getting-started/transforming-a-file","path":"/infosum-docs/docs/getting-started/transforming-a-file","sidebar":"tutorialSidebar"},{"id":"getting-started/uploading-a-file-from-aws-s3-to-a-cloudvault","path":"/infosum-docs/docs/getting-started/uploading-a-file-from-aws-s3-to-a-cloudvault","sidebar":"tutorialSidebar"},{"id":"intro","path":"/infosum-docs/docs/intro","sidebar":"tutorialSidebar"},{"id":"transform/index","path":"/infosum-docs/docs/transform/","sidebar":"tutorialSidebar"}],"draftIds":[],"sidebars":{"tutorialSidebar":{"link":{"path":"/infosum-docs/docs/intro","label":"intro"}}}}],"breadcrumbs":true}}}'),i=JSON.parse('{"defaultLocale":"en","locales":["en"],"path":"i18n","currentLocale":"en","localeConfigs":{"en":{"label":"English","direction":"ltr","htmlLang":"en","calendar":"gregory","path":"en"}}}');var E=t(57529);const s=JSON.parse('{"docusaurusVersion":"2.0.0-rc.1","siteVersion":"0.0.0","pluginVersions":{"docusaurus-plugin-content-docs":{"type":"package","name":"@docusaurus/plugin-content-docs","version":"2.0.0-rc.1"},"docusaurus-plugin-content-blog":{"type":"package","name":"@docusaurus/plugin-content-blog","version":"2.0.0-rc.1"},"docusaurus-plugin-content-pages":{"type":"package","name":"@docusaurus/plugin-content-pages","version":"2.0.0-rc.1"},"docusaurus-plugin-sitemap":{"type":"package","name":"@docusaurus/plugin-sitemap","version":"2.0.0-rc.1"},"docusaurus-plugin-redoc":{"type":"package","name":"docusaurus-plugin-redoc","version":"1.2.3"},"docusaurus-theme-classic":{"type":"package","name":"@docusaurus/theme-classic","version":"2.0.0-rc.1"},"docusaurus-theme-redoc":{"type":"package","name":"docusaurus-theme-redoc","version":"1.3.0"},"docusaurus-plugin-pwa":{"type":"package","name":"@docusaurus/plugin-pwa","version":"2.0.0-rc.1"}}}'),T={siteConfig:_.default,siteMetadata:s,globalData:a,i18n:i,codeTranslations:E},o=r.createContext(T);function d(e){let{children:n}=e;return r.createElement(o.Provider,{value:T},n)}},44763:(e,n,t)=>{"use strict";t.d(n,{Z:()=>o});var r=t(67294),_=t(10412),a=t(35742),i=t(94669);function E(e){let{error:n,tryAgain:t}=e;return r.createElement("div",{style:{display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center",height:"50vh",width:"100%",fontSize:"20px"}},r.createElement("h1",null,"This page crashed."),r.createElement("p",null,n.message),r.createElement("button",{type:"button",onClick:t},"Try again"))}function s(e){let{error:n,tryAgain:t}=e;return r.createElement(o,{fallback:()=>r.createElement(E,{error:n,tryAgain:t})},r.createElement(a.Z,null,r.createElement("title",null,"Page Error")),r.createElement(i.Z,null,r.createElement(E,{error:n,tryAgain:t})))}const T=e=>r.createElement(s,e);class o extends r.Component{constructor(e){super(e),this.state={error:null}}componentDidCatch(e){_.default.canUseDOM&&this.setState({error:e})}render(){const{children:e}=this.props,{error:n}=this.state;if(n){var t;const e={error:n,tryAgain:()=>this.setState({error:null})};return(null!=(t=this.props.fallback)?t:T)(e)}return null!=e?e:null}}},10412:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>_});const r="undefined"!=typeof window&&"document"in window&&"createElement"in window.document,_={canUseDOM:r,canUseEventListeners:r&&("addEventListener"in window||"attachEvent"in window),canUseIntersectionObserver:r&&"IntersectionObserver"in window,canUseViewport:r&&"screen"in window}},35742:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var r=t(67294),_=t(70405);function a(e){return r.createElement(_.ql,e)}},39960:(e,n,t)=>{"use strict";t.d(n,{Z:()=>N});var r=t(87462),_=t(67294),a=t(73727),i=t(18780),E=t(52263),s=t(13919),T=t(10412);const o=_.createContext({collectLink:()=>{}});var d=t(44996);function I(e,n){var t,I;let{isNavLink:N,to:O,href:u,activeClassName:R,isActive:A,"data-noBrokenLinkCheck":D,autoAddBaseUrl:S=!0,...l}=e;const{siteConfig:{trailingSlash:h,baseUrl:C}}=(0,E.Z)(),{withBaseUrl:P}=(0,d.C)(),U=(0,_.useContext)(o),c=(0,_.useRef)(null);(0,_.useImperativeHandle)(n,(()=>c.current));const p=O||u;const L=(0,s.Z)(p),f=null==p?void 0:p.replace("pathname://","");let F=void 0!==f?(m=f,S&&(e=>e.startsWith("/"))(m)?P(m):m):void 0;var m;F&&L&&(F=(0,i.applyTrailingSlash)(F,{trailingSlash:h,baseUrl:C}));const M=(0,_.useRef)(!1),w=N?a.OL:a.rU,b=T.default.canUseIntersectionObserver,g=(0,_.useRef)();(0,_.useEffect)((()=>(!b&&L&&null!=F&&window.docusaurus.prefetch(F),()=>{b&&g.current&&g.current.disconnect()})),[g,F,b,L]);const X=null!=(t=null==(I=F)?void 0:I.startsWith("#"))&&t,y=!F||!L||X;return y||D||U.collectLink(F),y?_.createElement("a",(0,r.Z)({ref:c,href:F},p&&!L&&{target:"_blank",rel:"noopener noreferrer"},l)):_.createElement(w,(0,r.Z)({},l,{onMouseEnter:()=>{M.current||null==F||(window.docusaurus.preload(F),M.current=!0)},innerRef:e=>{c.current=e,b&&e&&L&&(g.current=new window.IntersectionObserver((n=>{n.forEach((n=>{e===n.target&&(n.isIntersecting||n.intersectionRatio>0)&&(g.current.unobserve(e),g.current.disconnect(),null!=F&&window.docusaurus.prefetch(F))}))})),g.current.observe(e))},to:F},N&&{isActive:A,activeClassName:R}))}const N=_.forwardRef(I)},95999:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s,I:()=>E});var r=t(67294);function _(e,n){const t=e.split(/(\{\w+\})/).map(((e,t)=>{if(t%2==1){const t=null==n?void 0:n[e.slice(1,-1)];if(void 0!==t)return t}return e}));return t.some((e=>(0,r.isValidElement)(e)))?t.map(((e,n)=>(0,r.isValidElement)(e)?r.cloneElement(e,{key:n}):e)).filter((e=>""!==e)):t.join("")}var a=t(57529);function i(e){var n,t;let{id:r,message:_}=e;if(void 0===r&&void 0===_)throw new Error("Docusaurus translation declarations must have at least a translation id or a default translation message");return null!=(n=null!=(t=a[null!=r?r:_])?t:_)?n:r}function E(e,n){let{message:t,id:r}=e;return _(i({message:t,id:r}),n)}function s(e){let{children:n,id:t,values:a}=e;if(n&&"string"!=typeof n)throw console.warn("Illegal <Translate> children",n),new Error("The Docusaurus <Translate> component only accept simple string values");const E=i({message:n,id:t});return r.createElement(r.Fragment,null,_(E,a))}},29935:(e,n,t)=>{"use strict";t.d(n,{m:()=>r});const r="default"},13919:(e,n,t)=>{"use strict";function r(e){return/^(?:\w*:|\/\/)/.test(e)}function _(e){return void 0!==e&&!r(e)}t.d(n,{Z:()=>_,b:()=>r})},44996:(e,n,t)=>{"use strict";t.d(n,{C:()=>a,Z:()=>i});var r=t(52263),_=t(13919);function a(){const{siteConfig:{baseUrl:e,url:n}}=(0,r.Z)();return{withBaseUrl:(t,r)=>function(e,n,t,r){let{forcePrependBaseUrl:a=!1,absolute:i=!1}=void 0===r?{}:r;if(!t||t.startsWith("#")||(0,_.b)(t))return t;if(a)return n+t.replace(/^\//,"");if(t===n.replace(/\/$/,""))return n;const E=t.startsWith(n)?t:n+t.replace(/^\//,"");return i?e+E:E}(n,e,t,r)}}function i(e,n){void 0===n&&(n={});const{withBaseUrl:t}=a();return t(e,n)}},52263:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var r=t(67294),_=t(58940);function a(){return(0,r.useContext)(_._)}},28084:(e,n,t)=>{"use strict";t.d(n,{OD:()=>a,eZ:()=>i});var r=t(52263),_=t(29935);function a(e,n){void 0===n&&(n={});const t=function(){const{globalData:e}=(0,r.Z)();return e}()[e];if(!t&&n.failfast)throw new Error('Docusaurus plugin global data not found for "'+e+'" plugin.');return t}function i(e,n,t){void 0===n&&(n=_.m),void 0===t&&(t={});const r=a(e),i=null==r?void 0:r[n];if(!i&&t.failfast)throw new Error('Docusaurus plugin global data not found for "'+e+'" plugin with id "'+n+'".');return i}},72389:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var r=t(67294),_=t(98934);function a(){return(0,r.useContext)(_._)}},99670:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});function r(e){const n={};return function e(t,r){Object.entries(t).forEach((t=>{let[_,a]=t;const i=r?r+"."+_:_;var E;"object"==typeof(E=a)&&E&&Object.keys(E).length>0?e(a,i):n[i]=a}))}(e),n}},30226:(e,n,t)=>{"use strict";t.d(n,{_:()=>_,z:()=>a});var r=t(67294);const _=r.createContext(null);function a(e){let{children:n,value:t}=e;const a=r.useContext(_),i=(0,r.useMemo)((()=>function(e){let{parent:n,value:t}=e;if(!n){if(!t)throw new Error("Unexpected: no Docusaurus route context found");if(!("plugin"in t))throw new Error("Unexpected: Docusaurus topmost route context has no `plugin` attribute");return t}const r={...n.data,...null==t?void 0:t.data};return{plugin:n.plugin,data:r}}({parent:a,value:t})),[a,t]);return r.createElement(_.Provider,{value:i},n)}},94104:(e,n,t)=>{"use strict";t.d(n,{Iw:()=>N,gA:()=>o,_r:()=>s,Jo:()=>O,zh:()=>T,yW:()=>I,gB:()=>d});var r=t(76775),_=t(28084);const a=e=>e.versions.find((e=>e.isLast));function i(e,n){const t=function(e,n){const t=a(e);return[...e.versions.filter((e=>e!==t)),t].find((e=>!!(0,r.LX)(n,{path:e.path,exact:!1,strict:!1})))}(e,n),_=null==t?void 0:t.docs.find((e=>!!(0,r.LX)(n,{path:e.path,exact:!0,strict:!1})));return{activeVersion:t,activeDoc:_,alternateDocVersions:_?function(n){const t={};return e.versions.forEach((e=>{e.docs.forEach((r=>{r.id===n&&(t[e.name]=r)}))})),t}(_.id):{}}}const E={},s=()=>{var e;return null!=(e=(0,_.OD)("docusaurus-plugin-content-docs"))?e:E},T=e=>(0,_.eZ)("docusaurus-plugin-content-docs",e,{failfast:!0});function o(e){void 0===e&&(e={});const n=s(),{pathname:t}=(0,r.TH)();return function(e,n,t){void 0===t&&(t={});const _=Object.entries(e).sort(((e,n)=>n[1].path.localeCompare(e[1].path))).find((e=>{let[,t]=e;return!!(0,r.LX)(n,{path:t.path,exact:!1,strict:!1})})),a=_?{pluginId:_[0],pluginData:_[1]}:void 0;if(!a&&t.failfast)throw new Error("Can't find active docs plugin for \""+n+'" pathname, while it was expected to be found. Maybe you tried to use a docs feature that can only be used on a docs-related page? Existing docs plugin paths are: '+Object.values(e).map((e=>e.path)).join(", "));return a}(n,t,e)}function d(e){return T(e).versions}function I(e){const n=T(e);return a(n)}function N(e){const n=T(e),{pathname:t}=(0,r.TH)();return i(n,t)}function O(e){const n=T(e),{pathname:t}=(0,r.TH)();return function(e,n){const t=a(e);return{latestDocSuggestion:i(e,n).alternateDocVersions[t.name],latestVersionSuggestion:t}}(n,t)}},58968:(e,n,t)=>{"use strict";t.r(n);var r=t(10412),_=t(50012);const a=["appInstalled","standalone","queryString"],i=(0,_.W)("docusaurus.pwa.event.appInstalled.fired");function E(e,n){false}async function s(){const e=await navigator.serviceWorker.getRegistrations();E(),await Promise.all(e.map((e=>e.unregister().then((e=>E()))))),E(),window.location.reload()}const T={always:()=>!0,mobile:()=>window.innerWidth<=996,saveData:()=>{var e;return!(null==(e=navigator.connection)||!e.saveData)},appInstalled:()=>"true"===i.get()||async function(){return"getInstalledRelatedApps"in window.navigator&&(await navigator.getInstalledRelatedApps()).some((e=>"webapp"===e.platform))}(),standalone:()=>window.matchMedia("(display-mode: standalone)").matches,queryString:()=>"true"===new URLSearchParams(window.location.search).get("offlineMode")};async function o(){const e=await async function(){return(await Promise.all(a.map((e=>Promise.resolve(T[e]()).then((n=>n?e:void 0)))))).filter(Boolean)}(),n=e.length>0;return E(),n}r.default.canUseDOM&&(E(),"serviceWorker"in navigator&&(E(),window.addEventListener("appinstalled",(e=>{E(),i.set("true"),E(),s()})),window.addEventListener("beforeinstallprompt",(e=>{E();const n=i.get();E(),n&&(i.del(),E(),s())})),E(),async function(){const[{Workbox:e},n]=await Promise.all([t.e(131).then(t.bind(t,75131)),o()]),r=new e(function(e){const n=JSON.stringify(e),t="/infosum-docs/sw.js?params="+encodeURIComponent(n);return E(),t}({offlineMode:n,debug:!1})),_=()=>r.messageSW({type:"SKIP_WAITING"}),a=()=>(E(),n?t.e(283).then(t.bind(t,65283)).then((e=>{let{renderReloadPopup:n}=e;return n({onReload(){r.addEventListener("controlling",(()=>{window.location.reload()})),_()}})})):_());r.addEventListener("waiting",(e=>{E(),a()})),r.addEventListener("externalwaiting",(e=>{E(),a()}));const i=await r.register();i&&(i.active&&E(),i.installing&&E(),i.waiting&&(E(),await a()))}().catch((e=>console.error("registerSW failed",e)))))},18320:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>a});var r=t(74865),_=t.n(r);_().configure({showSpinner:!1});const a={onRouteUpdate(e){let{location:n,previousLocation:t}=e;if(t&&n.pathname!==t.pathname){const e=window.setTimeout((()=>{_().start()}),200);return()=>window.clearTimeout(e)}},onRouteDidUpdate(){_().done()}}},3310:(e,n,t)=>{"use strict";t.r(n);var r=t(87410),_=t(36809);!function(e){const{themeConfig:{prism:n}}=_.default,{additionalLanguages:r}=n;globalThis.Prism=e,r.forEach((e=>{t(6726)("./prism-"+e)})),delete globalThis.Prism}(r.Z)},39471:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var r=t(67294);const _="iconExternalLink_nPIU";function a(e){let{width:n=13.5,height:t=13.5}=e;return r.createElement("svg",{width:n,height:t,"aria-hidden":"true",viewBox:"0 0 24 24",className:_},r.createElement("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"}))}},94669:(e,n,t)=>{"use strict";t.d(n,{Z:()=>nn});var r=t(67294),_=t(86010),a=t(44763),i=t(1944),E=t(35281),s=t(19727),T=t(95999),o=t(76775),d=t(85936);function I(e){e.setAttribute("tabindex","-1"),e.focus(),e.removeAttribute("tabindex")}const N="skipToContent_fXgn";function O(){const{containerRef:e,handleSkip:n}=function(){const e=(0,r.useRef)(null),{action:n}=(0,o.k6)(),t=(0,r.useCallback)((e=>{var n;e.preventDefault();const t=null!=(n=document.querySelector("main:first-of-type"))?n:document.querySelector("."+E.k.wrapper.main);t&&I(t)}),[]);return(0,d.S)((t=>{let{location:r}=t;e.current&&!r.hash&&"PUSH"===n&&I(e.current)})),{containerRef:e,handleSkip:t}}();return r.createElement("div",{ref:e,role:"region"},r.createElement("a",{href:"#",className:N,onClick:n},r.createElement(T.Z,{id:"theme.common.skipToMainContent",description:"The skip to content label used for accessibility, allowing to rapidly navigate to main content with keyboard tab/enter navigation"},"Skip to main content")))}var u=t(86668),R=t(59689),A=t(87462);function D(e){let{width:n=21,height:t=21,color:_="currentColor",strokeWidth:a=1.2,className:i,...E}=e;return r.createElement("svg",(0,A.Z)({viewBox:"0 0 15 15",width:n,height:t},E),r.createElement("g",{stroke:_,strokeWidth:a},r.createElement("path",{d:"M.75.75l13.5 13.5M14.25.75L.75 14.25"})))}const S="announcementBar_mb4j",l="announcementBarPlaceholder_vyr4",h="announcementBarClose_gvF7",C="announcementBarContent_xLdY";function P(){const{isActive:e,close:n}=(0,R.nT)(),{announcementBar:t}=(0,u.L)();if(!e)return null;const{content:a,backgroundColor:i,textColor:E,isCloseable:s}=t;return r.createElement("div",{className:S,style:{backgroundColor:i,color:E},role:"banner"},s&&r.createElement("div",{className:l}),r.createElement("div",{className:C,dangerouslySetInnerHTML:{__html:a}}),s?r.createElement("button",{type:"button",className:(0,_.Z)("clean-btn close",h),onClick:n,"aria-label":(0,T.I)({id:"theme.AnnouncementBar.closeButtonAriaLabel",message:"Close",description:"The ARIA label for close button of announcement bar"})},r.createElement(D,{width:14,height:14,strokeWidth:3.1})):null)}var U=t(72961),c=t(12466);var p=t(902),L=t(13102);const f=r.createContext(null);function F(e){let{children:n}=e;const t=function(){const e=(0,U.e)(),n=(0,L.HY)(),[t,_]=(0,r.useState)(!1),a=null!==n.component,i=(0,p.D9)(a);return(0,r.useEffect)((()=>{a&&!i&&_(!0)}),[a,i]),(0,r.useEffect)((()=>{a?e.shown||_(!0):_(!1)}),[e.shown,a]),(0,r.useMemo)((()=>[t,_]),[t])}();return r.createElement(f.Provider,{value:t},n)}function m(e){if(e.component){const n=e.component;return r.createElement(n,e.props)}}function M(){const e=(0,r.useContext)(f);if(!e)throw new p.i6("NavbarSecondaryMenuDisplayProvider");const[n,t]=e,_=(0,r.useCallback)((()=>t(!1)),[t]),a=(0,L.HY)();return(0,r.useMemo)((()=>({shown:n,hide:_,content:m(a)})),[_,a,n])}function w(e){let{header:n,primaryMenu:t,secondaryMenu:a}=e;const{shown:i}=M();return r.createElement("div",{className:"navbar-sidebar"},n,r.createElement("div",{className:(0,_.Z)("navbar-sidebar__items",{"navbar-sidebar__items--show-secondary":i})},r.createElement("div",{className:"navbar-sidebar__item menu"},t),r.createElement("div",{className:"navbar-sidebar__item menu"},a)))}var b=t(92949),g=t(72389);function X(e){return r.createElement("svg",(0,A.Z)({viewBox:"0 0 24 24",width:24,height:24},e),r.createElement("path",{fill:"currentColor",d:"M12,9c1.65,0,3,1.35,3,3s-1.35,3-3,3s-3-1.35-3-3S10.35,9,12,9 M12,7c-2.76,0-5,2.24-5,5s2.24,5,5,5s5-2.24,5-5 S14.76,7,12,7L12,7z M2,13l2,0c0.55,0,1-0.45,1-1s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S1.45,13,2,13z M20,13l2,0c0.55,0,1-0.45,1-1 s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S19.45,13,20,13z M11,2v2c0,0.55,0.45,1,1,1s1-0.45,1-1V2c0-0.55-0.45-1-1-1S11,1.45,11,2z M11,20v2c0,0.55,0.45,1,1,1s1-0.45,1-1v-2c0-0.55-0.45-1-1-1C11.45,19,11,19.45,11,20z M5.99,4.58c-0.39-0.39-1.03-0.39-1.41,0 c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0s0.39-1.03,0-1.41L5.99,4.58z M18.36,16.95 c-0.39-0.39-1.03-0.39-1.41,0c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0c0.39-0.39,0.39-1.03,0-1.41 L18.36,16.95z M19.42,5.99c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06c-0.39,0.39-0.39,1.03,0,1.41 s1.03,0.39,1.41,0L19.42,5.99z M7.05,18.36c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06 c-0.39,0.39-0.39,1.03,0,1.41s1.03,0.39,1.41,0L7.05,18.36z"}))}function y(e){return r.createElement("svg",(0,A.Z)({viewBox:"0 0 24 24",width:24,height:24},e),r.createElement("path",{fill:"currentColor",d:"M9.37,5.51C9.19,6.15,9.1,6.82,9.1,7.5c0,4.08,3.32,7.4,7.4,7.4c0.68,0,1.35-0.09,1.99-0.27C17.45,17.19,14.93,19,12,19 c-3.86,0-7-3.14-7-7C5,9.07,6.81,6.55,9.37,5.51z M12,3c-4.97,0-9,4.03-9,9s4.03,9,9,9s9-4.03,9-9c0-0.46-0.04-0.92-0.1-1.36 c-0.98,1.37-2.58,2.26-4.4,2.26c-2.98,0-5.4-2.42-5.4-5.4c0-1.81,0.89-3.42,2.26-4.4C12.92,3.04,12.46,3,12,3L12,3z"}))}const v={toggle:"toggle_vylO",toggleButton:"toggleButton_gllP",darkToggleIcon:"darkToggleIcon_wfgR",lightToggleIcon:"lightToggleIcon_pyhR",toggleButtonDisabled:"toggleButtonDisabled_aARS"};function V(e){let{className:n,value:t,onChange:a}=e;const i=(0,g.Z)(),E=(0,T.I)({message:"Switch between dark and light mode (currently {mode})",id:"theme.colorToggle.ariaLabel",description:"The ARIA label for the navbar color mode toggle"},{mode:"dark"===t?(0,T.I)({message:"dark mode",id:"theme.colorToggle.ariaLabel.mode.dark",description:"The name for the dark color mode"}):(0,T.I)({message:"light mode",id:"theme.colorToggle.ariaLabel.mode.light",description:"The name for the light color mode"})});return r.createElement("div",{className:(0,_.Z)(v.toggle,n)},r.createElement("button",{className:(0,_.Z)("clean-btn",v.toggleButton,!i&&v.toggleButtonDisabled),type:"button",onClick:()=>a("dark"===t?"light":"dark"),disabled:!i,title:E,"aria-label":E},r.createElement(X,{className:(0,_.Z)(v.toggleIcon,v.lightToggleIcon)}),r.createElement(y,{className:(0,_.Z)(v.toggleIcon,v.darkToggleIcon)})))}const B=r.memo(V);function K(e){let{className:n}=e;const t=(0,u.L)().colorMode.disableSwitch,{colorMode:_,setColorMode:a}=(0,b.I)();return t?null:r.createElement(B,{className:n,value:_,onChange:a})}var Y=t(21327);function G(){return r.createElement(Y.Z,{className:"navbar__brand",imageClassName:"navbar__logo",titleClassName:"navbar__title text--truncate"})}function q(){const e=(0,U.e)();return r.createElement("button",{type:"button",className:"clean-btn navbar-sidebar__close",onClick:()=>e.toggle()},r.createElement(D,{color:"var(--ifm-color-emphasis-600)"}))}function k(){return r.createElement("div",{className:"navbar-sidebar__brand"},r.createElement(G,null),r.createElement(K,{className:"margin-right--md"}),r.createElement(q,null))}var x=t(39960),H=t(44996),Q=t(13919);function Z(e,n){return void 0!==e&&void 0!==n&&new RegExp(e,"gi").test(n)}var W=t(39471);function j(e){let{activeBasePath:n,activeBaseRegex:t,to:_,href:a,label:i,html:E,isDropdownLink:s,prependBaseUrlToHref:T,...o}=e;const d=(0,H.Z)(_),I=(0,H.Z)(n),N=(0,H.Z)(a,{forcePrependBaseUrl:!0}),O=i&&a&&!(0,Q.Z)(a),u=E?{dangerouslySetInnerHTML:{__html:E}}:{children:r.createElement(r.Fragment,null,i,O&&r.createElement(W.Z,s&&{width:12,height:12}))};return a?r.createElement(x.Z,(0,A.Z)({href:T?N:a},o,u)):r.createElement(x.Z,(0,A.Z)({to:d,isNavLink:!0},(n||t)&&{isActive:(e,n)=>t?Z(t,n.pathname):n.pathname.startsWith(I)},o,u))}function z(e){let{className:n,isDropdownItem:t=!1,...a}=e;const i=r.createElement(j,(0,A.Z)({className:(0,_.Z)(t?"dropdown__link":"navbar__item navbar__link",n),isDropdownLink:t},a));return t?r.createElement("li",null,i):i}function $(e){let{className:n,isDropdownItem:t,...a}=e;return r.createElement("li",{className:"menu__list-item"},r.createElement(j,(0,A.Z)({className:(0,_.Z)("menu__link",n)},a)))}function J(e){var n;let{mobile:t=!1,position:_,...a}=e;const i=t?$:z;return r.createElement(i,(0,A.Z)({},a,{activeClassName:null!=(n=a.activeClassName)?n:t?"menu__link--active":"navbar__link--active"}))}var ee=t(86043),ne=t(48596),te=t(52263);function re(e,n){return e.some((e=>function(e,n){return!!(0,ne.Mg)(e.to,n)||!!Z(e.activeBaseRegex,n)||!(!e.activeBasePath||!n.startsWith(e.activeBasePath))}(e,n)))}function _e(e){var n;let{items:t,position:a,className:i,onClick:E,...s}=e;const T=(0,r.useRef)(null),[o,d]=(0,r.useState)(!1);return(0,r.useEffect)((()=>{const e=e=>{T.current&&!T.current.contains(e.target)&&d(!1)};return document.addEventListener("mousedown",e),document.addEventListener("touchstart",e),()=>{document.removeEventListener("mousedown",e),document.removeEventListener("touchstart",e)}}),[T]),r.createElement("div",{ref:T,className:(0,_.Z)("navbar__item","dropdown","dropdown--hoverable",{"dropdown--right":"right"===a,"dropdown--show":o})},r.createElement(j,(0,A.Z)({"aria-haspopup":"true","aria-expanded":o,role:"button",href:s.to?void 0:"#",className:(0,_.Z)("navbar__link",i)},s,{onClick:s.to?void 0:e=>e.preventDefault(),onKeyDown:e=>{"Enter"===e.key&&(e.preventDefault(),d(!o))}}),null!=(n=s.children)?n:s.label),r.createElement("ul",{className:"dropdown__menu"},t.map(((e,n)=>r.createElement(De,(0,A.Z)({isDropdownItem:!0,onKeyDown:e=>{if(n===t.length-1&&"Tab"===e.key){e.preventDefault(),d(!1);const n=T.current.nextElementSibling;if(n){(n instanceof HTMLAnchorElement?n:n.querySelector("a")).focus()}}},activeClassName:"dropdown__link--active"},e,{key:n}))))))}function ae(e){var n;let{items:t,className:a,position:i,onClick:E,...s}=e;const T=function(){const{siteConfig:{baseUrl:e}}=(0,te.Z)(),{pathname:n}=(0,o.TH)();return n.replace(e,"/")}(),d=re(t,T),{collapsed:I,toggleCollapsed:N,setCollapsed:O}=(0,ee.u)({initialState:()=>!d});return(0,r.useEffect)((()=>{d&&O(!d)}),[T,d,O]),r.createElement("li",{className:(0,_.Z)("menu__list-item",{"menu__list-item--collapsed":I})},r.createElement(j,(0,A.Z)({role:"button",className:(0,_.Z)("menu__link menu__link--sublist menu__link--sublist-caret",a)},s,{onClick:e=>{e.preventDefault(),N()}}),null!=(n=s.children)?n:s.label),r.createElement(ee.z,{lazy:!0,as:"ul",className:"menu__list",collapsed:I},t.map(((e,n)=>r.createElement(De,(0,A.Z)({mobile:!0,isDropdownItem:!0,onClick:E,activeClassName:"menu__link--active"},e,{key:n}))))))}function ie(e){let{mobile:n=!1,...t}=e;const _=n?ae:_e;return r.createElement(_,t)}var Ee=t(94711);function se(e){let{width:n=20,height:t=20,..._}=e;return r.createElement("svg",(0,A.Z)({viewBox:"0 0 24 24",width:n,height:t,"aria-hidden":!0},_),r.createElement("path",{fill:"currentColor",d:"M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z"}))}const Te="iconLanguage_nlXk";const oe=()=>null,de="searchBox_ZlJk";function Ie(e){let{children:n,className:t}=e;return r.createElement("div",{className:(0,_.Z)(t,de)},n)}var Ne=t(94104),Oe=t(53438);var ue=t(60373);const Re=e=>e.docs.find((n=>n.id===e.mainDocId));const Ae={default:J,localeDropdown:function(e){let{mobile:n,dropdownItemsBefore:t,dropdownItemsAfter:_,...a}=e;const{i18n:{currentLocale:i,locales:E,localeConfigs:s}}=(0,te.Z)(),o=(0,Ee.l)(),d=[...t,...E.map((e=>{const t="pathname://"+o.createUrl({locale:e,fullyQualified:!1});return{label:s[e].label,to:t,target:"_self",autoAddBaseUrl:!1,className:e===i?n?"menu__link--active":"dropdown__link--active":""}})),..._],I=n?(0,T.I)({message:"Languages",id:"theme.navbar.mobileLanguageDropdown.label",description:"The label for the mobile language switcher dropdown"}):s[i].label;return r.createElement(ie,(0,A.Z)({},a,{mobile:n,label:r.createElement(r.Fragment,null,r.createElement(se,{className:Te}),I),items:d}))},search:function(e){let{mobile:n,className:t}=e;return n?null:r.createElement(Ie,{className:t},r.createElement(oe,null))},dropdown:ie,html:function(e){let{value:n,className:t,mobile:a=!1,isDropdownItem:i=!1}=e;const E=i?"li":"div";return r.createElement(E,{className:(0,_.Z)({navbar__item:!a&&!i,"menu__list-item":a},t),dangerouslySetInnerHTML:{__html:n}})},doc:function(e){let{docId:n,label:t,docsPluginId:_,...a}=e;const{activeDoc:i}=(0,Ne.Iw)(_),E=(0,Oe.vY)(n,_);return null===E?null:r.createElement(J,(0,A.Z)({exact:!0},a,{isActive:()=>(null==i?void 0:i.path)===E.path||!(null==i||!i.sidebar)&&i.sidebar===E.sidebar,label:null!=t?t:E.id,to:E.path}))},docSidebar:function(e){let{sidebarId:n,label:t,docsPluginId:_,...a}=e;const{activeDoc:i}=(0,Ne.Iw)(_),E=(0,Oe.oz)(n,_).link;if(!E)throw new Error('DocSidebarNavbarItem: Sidebar with ID "'+n+"\" doesn't have anything to be linked to.");return r.createElement(J,(0,A.Z)({exact:!0},a,{isActive:()=>(null==i?void 0:i.sidebar)===n,label:null!=t?t:E.label,to:E.path}))},docsVersion:function(e){let{label:n,to:t,docsPluginId:_,...a}=e;const i=(0,Oe.lO)(_)[0],E=null!=n?n:i.label,s=null!=t?t:(e=>e.docs.find((n=>n.id===e.mainDocId)))(i).path;return r.createElement(J,(0,A.Z)({},a,{label:E,to:s}))},docsVersionDropdown:function(e){let{mobile:n,docsPluginId:t,dropdownActiveClassDisabled:_,dropdownItemsBefore:a,dropdownItemsAfter:i,...E}=e;const s=(0,Ne.Iw)(t),o=(0,Ne.gB)(t),{savePreferredVersionName:d}=(0,ue.J)(t),I=[...a,...o.map((e=>{var n;const t=null!=(n=s.alternateDocVersions[e.name])?n:Re(e);return{label:e.label,to:t.path,isActive:()=>e===s.activeVersion,onClick:()=>d(e.name)}})),...i],N=(0,Oe.lO)(t)[0],O=n&&I.length>1?(0,T.I)({id:"theme.navbar.mobileVersionsDropdown.label",message:"Versions",description:"The label for the navbar versions dropdown on mobile view"}):N.label,u=n&&I.length>1?void 0:Re(N).path;return I.length<=1?r.createElement(J,(0,A.Z)({},E,{mobile:n,label:O,to:u,isActive:_?()=>!1:void 0})):r.createElement(ie,(0,A.Z)({},E,{mobile:n,label:O,to:u,items:I,isActive:_?()=>!1:void 0}))}};function De(e){let{type:n,...t}=e;const _=function(e,n){return e&&"default"!==e?e:"items"in n?"dropdown":"default"}(n,t),a=Ae[_];if(!a)throw new Error('No NavbarItem component found for type "'+n+'".');return r.createElement(a,t)}function Se(){const e=(0,U.e)(),n=(0,u.L)().navbar.items;return r.createElement("ul",{className:"menu__list"},n.map(((n,t)=>r.createElement(De,(0,A.Z)({mobile:!0},n,{onClick:()=>e.toggle(),key:t})))))}function le(e){return r.createElement("button",(0,A.Z)({},e,{type:"button",className:"clean-btn navbar-sidebar__back"}),r.createElement(T.Z,{id:"theme.navbar.mobileSidebarSecondaryMenu.backButtonLabel",description:"The label of the back button to return to main menu, inside the mobile navbar sidebar secondary menu (notably used to display the docs sidebar)"},"\u2190 Back to main menu"))}function he(){const e=0===(0,u.L)().navbar.items.length,n=M();return r.createElement(r.Fragment,null,!e&&r.createElement(le,{onClick:()=>n.hide()}),n.content)}function Ce(){const e=(0,U.e)();var n;return void 0===(n=e.shown)&&(n=!0),(0,r.useEffect)((()=>(document.body.style.overflow=n?"hidden":"visible",()=>{document.body.style.overflow="visible"})),[n]),e.shouldRender?r.createElement(w,{header:r.createElement(k,null),primaryMenu:r.createElement(Se,null),secondaryMenu:r.createElement(he,null)}):null}const Pe="navbarHideable_m1mJ",Ue="navbarHidden_jGov";function ce(e){return r.createElement("div",(0,A.Z)({role:"presentation"},e,{className:(0,_.Z)("navbar-sidebar__backdrop",e.className)}))}function pe(e){let{children:n}=e;const{navbar:{hideOnScroll:t,style:a}}=(0,u.L)(),i=(0,U.e)(),{navbarRef:E,isNavbarVisible:s}=function(e){const[n,t]=(0,r.useState)(e),_=(0,r.useRef)(!1),a=(0,r.useRef)(0),i=(0,r.useCallback)((e=>{null!==e&&(a.current=e.getBoundingClientRect().height)}),[]);return(0,c.RF)(((n,r)=>{let{scrollY:i}=n;if(!e)return;if(i<a.current)return void t(!0);if(_.current)return void(_.current=!1);const E=null==r?void 0:r.scrollY,s=document.documentElement.scrollHeight-a.current,T=window.innerHeight;E&&i>=E?t(!1):i+T<s&&t(!0)})),(0,d.S)((n=>{if(e)return n.location.hash?(_.current=!0,void t(!1)):void t(!0)})),{navbarRef:i,isNavbarVisible:n}}(t);return r.createElement("nav",{ref:E,className:(0,_.Z)("navbar","navbar--fixed-top",t&&[Pe,!s&&Ue],{"navbar--dark":"dark"===a,"navbar--primary":"primary"===a,"navbar-sidebar--show":i.shown})},n,r.createElement(ce,{onClick:i.toggle}),r.createElement(Ce,null))}function Le(e){let{width:n=30,height:t=30,className:_,...a}=e;return r.createElement("svg",(0,A.Z)({className:_,width:n,height:t,viewBox:"0 0 30 30","aria-hidden":"true"},a),r.createElement("path",{stroke:"currentColor",strokeLinecap:"round",strokeMiterlimit:"10",strokeWidth:"2",d:"M4 7h22M4 15h22M4 23h22"}))}function fe(){const e=(0,U.e)();return r.createElement("button",{onClick:e.toggle,onKeyDown:e.toggle,"aria-label":"Navigation bar toggle",className:"navbar__toggle clean-btn",type:"button",tabIndex:0},r.createElement(Le,null))}const Fe="colorModeToggle_DEke";function me(e){let{items:n}=e;return r.createElement(r.Fragment,null,n.map(((e,n)=>r.createElement(De,(0,A.Z)({},e,{key:n})))))}function Me(e){let{left:n,right:t}=e;return r.createElement("div",{className:"navbar__inner"},r.createElement("div",{className:"navbar__items"},n),r.createElement("div",{className:"navbar__items navbar__items--right"},t))}function we(){const e=(0,U.e)(),n=(0,u.L)().navbar.items,[t,_]=function(e){function n(e){var n;return"left"===(null!=(n=e.position)?n:"right")}return[e.filter(n),e.filter((e=>!n(e)))]}(n),a=n.find((e=>"search"===e.type));return r.createElement(Me,{left:r.createElement(r.Fragment,null,!e.disabled&&r.createElement(fe,null),r.createElement(G,null),r.createElement(me,{items:t})),right:r.createElement(r.Fragment,null,r.createElement(me,{items:_}),r.createElement(K,{className:Fe}),!a&&r.createElement(Ie,null,r.createElement(oe,null)))})}function be(){return r.createElement(pe,null,r.createElement(we,null))}function ge(e){let{item:n}=e;const{to:t,href:_,label:a,prependBaseUrlToHref:i,...E}=n,s=(0,H.Z)(t),T=(0,H.Z)(_,{forcePrependBaseUrl:!0});return r.createElement(x.Z,(0,A.Z)({className:"footer__link-item"},_?{href:i?T:_}:{to:s},E),a,_&&!(0,Q.Z)(_)&&r.createElement(W.Z,null))}function Xe(e){var n;let{item:t}=e;return t.html?r.createElement("li",{className:"footer__item",dangerouslySetInnerHTML:{__html:t.html}}):r.createElement("li",{key:null!=(n=t.href)?n:t.to,className:"footer__item"},r.createElement(ge,{item:t}))}function ye(e){let{column:n}=e;return r.createElement("div",{className:"col footer__col"},r.createElement("div",{className:"footer__title"},n.title),r.createElement("ul",{className:"footer__items clean-list"},n.items.map(((e,n)=>r.createElement(Xe,{key:n,item:e})))))}function ve(e){let{columns:n}=e;return r.createElement("div",{className:"row footer__links"},n.map(((e,n)=>r.createElement(ye,{key:n,column:e}))))}function Ve(){return r.createElement("span",{className:"footer__link-separator"},"\xb7")}function Be(e){let{item:n}=e;return n.html?r.createElement("span",{className:"footer__link-item",dangerouslySetInnerHTML:{__html:n.html}}):r.createElement(ge,{item:n})}function Ke(e){let{links:n}=e;return r.createElement("div",{className:"footer__links text--center"},r.createElement("div",{className:"footer__links"},n.map(((e,t)=>r.createElement(r.Fragment,{key:t},r.createElement(Be,{item:e}),n.length!==t+1&&r.createElement(Ve,null))))))}function Ye(e){let{links:n}=e;return function(e){return"title"in e[0]}(n)?r.createElement(ve,{columns:n}):r.createElement(Ke,{links:n})}var Ge=t(50941);const qe="footerLogoLink_BH7S";function ke(e){var n;let{logo:t}=e;const{withBaseUrl:a}=(0,H.C)(),i={light:a(t.src),dark:a(null!=(n=t.srcDark)?n:t.src)};return r.createElement(Ge.Z,{className:(0,_.Z)("footer__logo",t.className),alt:t.alt,sources:i,width:t.width,height:t.height,style:t.style})}function xe(e){let{logo:n}=e;return n.href?r.createElement(x.Z,{href:n.href,className:qe,target:n.target},r.createElement(ke,{logo:n})):r.createElement(ke,{logo:n})}function He(e){let{copyright:n}=e;return r.createElement("div",{className:"footer__copyright",dangerouslySetInnerHTML:{__html:n}})}function Qe(e){let{style:n,links:t,logo:a,copyright:i}=e;return r.createElement("footer",{className:(0,_.Z)("footer",{"footer--dark":"dark"===n})},r.createElement("div",{className:"container container-fluid"},t,(a||i)&&r.createElement("div",{className:"footer__bottom text--center"},a&&r.createElement("div",{className:"margin-bottom--sm"},a),i)))}function Ze(){const{footer:e}=(0,u.L)();if(!e)return null;const{copyright:n,links:t,logo:_,style:a}=e;return r.createElement(Qe,{style:a,links:t&&t.length>0&&r.createElement(Ye,{links:t}),logo:_&&r.createElement(xe,{logo:_}),copyright:n&&r.createElement(He,{copyright:n})})}const We=r.memo(Ze);var je=t(7094);const ze=(0,p.Qc)([b.S,R.pl,je.z,c.OC,ue.L5,i.VC,function(e){let{children:n}=e;return r.createElement(L.n2,null,r.createElement(U.M,null,r.createElement(F,null,n)))}]);function $e(e){let{children:n}=e;return r.createElement(ze,null,n)}function Je(e){let{error:n,tryAgain:t}=e;return r.createElement("main",{className:"container margin-vert--xl"},r.createElement("div",{className:"row"},r.createElement("div",{className:"col col--6 col--offset-3"},r.createElement("h1",{className:"hero__title"},r.createElement(T.Z,{id:"theme.ErrorPageContent.title",description:"The title of the fallback page when the page crashed"},"This page crashed.")),r.createElement("p",null,n.message),r.createElement("div",null,r.createElement("button",{type:"button",onClick:t},r.createElement(T.Z,{id:"theme.ErrorPageContent.tryAgain",description:"The label of the button to try again when the page crashed"},"Try again"))))))}const en="mainWrapper_z2l0";function nn(e){const{children:n,noFooter:t,wrapperClassName:T,title:o,description:d}=e;return(0,s.t)(),r.createElement($e,null,r.createElement(i.d,{title:o,description:d}),r.createElement(O,null),r.createElement(P,null),r.createElement(be,null),r.createElement("div",{className:(0,_.Z)(E.k.wrapper.main,en,T)},r.createElement(a.Z,{fallback:e=>r.createElement(Je,e)},n)),!t&&r.createElement(We,null))}},21327:(e,n,t)=>{"use strict";t.d(n,{Z:()=>d});var r=t(87462),_=t(67294),a=t(39960),i=t(44996),E=t(52263),s=t(86668),T=t(50941);function o(e){let{logo:n,alt:t,imageClassName:r}=e;const a={light:(0,i.Z)(n.src),dark:(0,i.Z)(n.srcDark||n.src)},E=_.createElement(T.Z,{className:n.className,sources:a,height:n.height,width:n.width,alt:t,style:n.style});return r?_.createElement("div",{className:r},E):E}function d(e){var n;const{siteConfig:{title:t}}=(0,E.Z)(),{navbar:{title:T,logo:d}}=(0,s.L)(),{imageClassName:I,titleClassName:N,...O}=e,u=(0,i.Z)((null==d?void 0:d.href)||"/"),R=T?"":t,A=null!=(n=null==d?void 0:d.alt)?n:R;return _.createElement(a.Z,(0,r.Z)({to:u},O,(null==d?void 0:d.target)&&{target:d.target}),d&&_.createElement(o,{logo:d,alt:A,imageClassName:I}),null!=T&&_.createElement("b",{className:N},T))}},90197:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var r=t(67294),_=t(35742);function a(e){let{locale:n,version:t,tag:a}=e;const i=n;return r.createElement(_.Z,null,n&&r.createElement("meta",{name:"docusaurus_locale",content:n}),t&&r.createElement("meta",{name:"docusaurus_version",content:t}),a&&r.createElement("meta",{name:"docusaurus_tag",content:a}),i&&r.createElement("meta",{name:"docsearch:language",content:i}),t&&r.createElement("meta",{name:"docsearch:version",content:t}),a&&r.createElement("meta",{name:"docsearch:docusaurus_tag",content:a}))}},50941:(e,n,t)=>{"use strict";t.d(n,{Z:()=>T});var r=t(87462),_=t(67294),a=t(86010),i=t(72389),E=t(92949);const s={themedImage:"themedImage_ToTc","themedImage--light":"themedImage--light_HNdA","themedImage--dark":"themedImage--dark_i4oU"};function T(e){const n=(0,i.Z)(),{colorMode:t}=(0,E.I)(),{sources:T,className:o,alt:d,...I}=e,N=n?"dark"===t?["dark"]:["light"]:["light","dark"];return _.createElement(_.Fragment,null,N.map((e=>_.createElement("img",(0,r.Z)({key:e,src:T[e],alt:d,className:(0,a.Z)(s.themedImage,s["themedImage--"+e],o)},I)))))}},86043:(e,n,t)=>{"use strict";t.d(n,{u:()=>i,z:()=>O});var r=t(87462),_=t(67294),a=t(10412);function i(e){let{initialState:n}=e;const[t,r]=(0,_.useState)(null!=n&&n),a=(0,_.useCallback)((()=>{r((e=>!e))}),[]);return{collapsed:t,setCollapsed:r,toggleCollapsed:a}}const E={display:"none",overflow:"hidden",height:"0px"},s={display:"block",overflow:"visible",height:"auto"};function T(e,n){const t=n?E:s;e.style.display=t.display,e.style.overflow=t.overflow,e.style.height=t.height}function o(e){let{collapsibleRef:n,collapsed:t,animation:r}=e;const a=(0,_.useRef)(!1);(0,_.useEffect)((()=>{const e=n.current;function _(){var n,t;const _=e.scrollHeight,a=null!=(n=null==r?void 0:r.duration)?n:function(e){const n=e/36;return Math.round(10*(4+15*n**.25+n/5))}(_);return{transition:"height "+a+"ms "+(null!=(t=null==r?void 0:r.easing)?t:"ease-in-out"),height:_+"px"}}function i(){const n=_();e.style.transition=n.transition,e.style.height=n.height}if(!a.current)return T(e,t),void(a.current=!0);return e.style.willChange="height",function(){const n=requestAnimationFrame((()=>{t?(i(),requestAnimationFrame((()=>{e.style.height=E.height,e.style.overflow=E.overflow}))):(e.style.display="block",requestAnimationFrame((()=>{i()})))}));return()=>cancelAnimationFrame(n)}()}),[n,t,r])}function d(e){if(!a.default.canUseDOM)return e?E:s}function I(e){let{as:n="div",collapsed:t,children:r,animation:a,onCollapseTransitionEnd:i,className:E,disableSSRStyle:s}=e;const I=(0,_.useRef)(null);return o({collapsibleRef:I,collapsed:t,animation:a}),_.createElement(n,{ref:I,style:s?void 0:d(t),onTransitionEnd:e=>{"height"===e.propertyName&&(T(I.current,t),null==i||i(t))},className:E},r)}function N(e){let{collapsed:n,...t}=e;const[a,i]=(0,_.useState)(!n),[E,s]=(0,_.useState)(n);return(0,_.useLayoutEffect)((()=>{n||i(!0)}),[n]),(0,_.useLayoutEffect)((()=>{a&&s(n)}),[a,n]),a?_.createElement(I,(0,r.Z)({},t,{collapsed:E})):null}function O(e){let{lazy:n,...t}=e;const r=n?N:I;return _.createElement(r,t)}},59689:(e,n,t)=>{"use strict";t.d(n,{nT:()=>O,pl:()=>N});var r=t(67294),_=t(72389),a=t(50012),i=t(902),E=t(86668);const s=(0,a.W)("docusaurus.announcement.dismiss"),T=(0,a.W)("docusaurus.announcement.id"),o=()=>"true"===s.get(),d=e=>s.set(String(e)),I=r.createContext(null);function N(e){let{children:n}=e;const t=function(){const{announcementBar:e}=(0,E.L)(),n=(0,_.Z)(),[t,a]=(0,r.useState)((()=>!!n&&o()));(0,r.useEffect)((()=>{a(o())}),[]);const i=(0,r.useCallback)((()=>{d(!0),a(!0)}),[]);return(0,r.useEffect)((()=>{if(!e)return;const{id:n}=e;let t=T.get();"annoucement-bar"===t&&(t="announcement-bar");const r=n!==t;T.set(n),r&&d(!1),!r&&o()||a(!1)}),[e]),(0,r.useMemo)((()=>({isActive:!!e&&!t,close:i})),[e,t,i])}();return r.createElement(I.Provider,{value:t},n)}function O(){const e=(0,r.useContext)(I);if(!e)throw new i.i6("AnnouncementBarProvider");return e}},92949:(e,n,t)=>{"use strict";t.d(n,{I:()=>R,S:()=>u});var r=t(67294),_=t(10412),a=t(902),i=t(50012),E=t(86668);const s=r.createContext(void 0),T="theme",o=(0,i.W)(T),d="light",I="dark",N=e=>e===I?I:d;function O(){const{colorMode:{defaultMode:e,disableSwitch:n,respectPrefersColorScheme:t}}=(0,E.L)(),[a,i]=(0,r.useState)((e=>_.default.canUseDOM?N(document.documentElement.getAttribute("data-theme")):N(e))(e));(0,r.useEffect)((()=>{n&&o.del()}),[n]);const s=(0,r.useCallback)((function(n,r){void 0===r&&(r={});const{persist:_=!0}=r;n?(i(n),_&&(e=>{o.set(N(e))})(n)):(i(t?window.matchMedia("(prefers-color-scheme: dark)").matches?I:d:e),o.del())}),[t,e]);(0,r.useEffect)((()=>{document.documentElement.setAttribute("data-theme",N(a))}),[a]),(0,r.useEffect)((()=>{if(n)return;const e=e=>{if(e.key!==T)return;const n=o.get();null!==n&&s(N(n))};return window.addEventListener("storage",e),()=>window.removeEventListener("storage",e)}),[n,s]);const O=(0,r.useRef)(!1);return(0,r.useEffect)((()=>{if(n&&!t)return;const e=window.matchMedia("(prefers-color-scheme: dark)"),r=()=>{window.matchMedia("print").matches||O.current?O.current=window.matchMedia("print").matches:s(null)};return e.addListener(r),()=>e.removeListener(r)}),[s,n,t]),(0,r.useMemo)((()=>({colorMode:a,setColorMode:s,get isDarkTheme(){return a===I},setLightTheme(){s(d)},setDarkTheme(){s(I)}})),[a,s])}function u(e){let{children:n}=e;const t=O();return r.createElement(s.Provider,{value:t},n)}function R(){const e=(0,r.useContext)(s);if(null==e)throw new a.i6("ColorModeProvider","Please see https://docusaurus.io/docs/api/themes/configuration#use-color-mode.");return e}},60373:(e,n,t)=>{"use strict";t.d(n,{J:()=>S,L5:()=>A});var r=t(67294),_=t(94104),a=t(29935),i=t(86668),E=t(53438),s=t(902),T=t(50012);const o=e=>"docs-preferred-version-"+e,d=(e,n,t)=>{(0,T.W)(o(e),{persistence:n}).set(t)},I=(e,n)=>(0,T.W)(o(e),{persistence:n}).get(),N=(e,n)=>{(0,T.W)(o(e),{persistence:n}).del()};const O=r.createContext(null);function u(){const e=(0,_._r)(),n=(0,i.L)().docs.versionPersistence,t=(0,r.useMemo)((()=>Object.keys(e)),[e]),[a,E]=(0,r.useState)((()=>(e=>Object.fromEntries(e.map((e=>[e,{preferredVersionName:null}]))))(t)));(0,r.useEffect)((()=>{E(function(e){let{pluginIds:n,versionPersistence:t,allDocsData:r}=e;function _(e){const n=I(e,t);return r[e].versions.some((e=>e.name===n))?{preferredVersionName:n}:(N(e,t),{preferredVersionName:null})}return Object.fromEntries(n.map((e=>[e,_(e)])))}({allDocsData:e,versionPersistence:n,pluginIds:t}))}),[e,n,t]);return[a,(0,r.useMemo)((()=>({savePreferredVersion:function(e,t){d(e,n,t),E((n=>({...n,[e]:{preferredVersionName:t}})))}})),[n])]}function R(e){let{children:n}=e;const t=u();return r.createElement(O.Provider,{value:t},n)}function A(e){let{children:n}=e;return E.cE?r.createElement(R,null,n):r.createElement(r.Fragment,null,n)}function D(){const e=(0,r.useContext)(O);if(!e)throw new s.i6("DocsPreferredVersionContextProvider");return e}function S(e){var n;void 0===e&&(e=a.m);const t=(0,_.zh)(e),[i,E]=D(),{preferredVersionName:s}=i[e];return{preferredVersion:null!=(n=t.versions.find((e=>e.name===s)))?n:null,savePreferredVersionName:(0,r.useCallback)((n=>{E.savePreferredVersion(e,n)}),[E,e])}}},1116:(e,n,t)=>{"use strict";t.d(n,{V:()=>s,b:()=>E});var r=t(67294),_=t(902);const a=Symbol("EmptyContext"),i=r.createContext(a);function E(e){let{children:n,name:t,items:_}=e;const a=(0,r.useMemo)((()=>t&&_?{name:t,items:_}:null),[t,_]);return r.createElement(i.Provider,{value:a},n)}function s(){const e=(0,r.useContext)(i);if(e===a)throw new _.i6("DocsSidebarProvider");return e}},72961:(e,n,t)=>{"use strict";t.d(n,{M:()=>I,e:()=>N});var r=t(67294),_=t(13102),a=t(87524),i=t(76775),E=t(902);function s(e){!function(e){const n=(0,i.k6)(),t=(0,E.zX)(e);(0,r.useEffect)((()=>n.block(((e,n)=>t(e,n)))),[n,t])}(((n,t)=>{if("POP"===t)return e(n,t)}))}var T=t(86668);const o=r.createContext(void 0);function d(){const e=function(){const e=(0,_.HY)(),{items:n}=(0,T.L)().navbar;return 0===n.length&&!e.component}(),n=(0,a.i)(),t=!e&&"mobile"===n,[i,E]=(0,r.useState)(!1);s((()=>{if(i)return E(!1),!1}));const o=(0,r.useCallback)((()=>{E((e=>!e))}),[]);return(0,r.useEffect)((()=>{"desktop"===n&&E(!1)}),[n]),(0,r.useMemo)((()=>({disabled:e,shouldRender:t,toggle:o,shown:i})),[e,t,o,i])}function I(e){let{children:n}=e;const t=d();return r.createElement(o.Provider,{value:t},n)}function N(){const e=r.useContext(o);if(void 0===e)throw new E.i6("NavbarMobileSidebarProvider");return e}},13102:(e,n,t)=>{"use strict";t.d(n,{HY:()=>E,Zo:()=>s,n2:()=>i});var r=t(67294),_=t(902);const a=r.createContext(null);function i(e){let{children:n}=e;const t=(0,r.useState)({component:null,props:null});return r.createElement(a.Provider,{value:t},n)}function E(){const e=(0,r.useContext)(a);if(!e)throw new _.i6("NavbarSecondaryMenuContentProvider");return e[0]}function s(e){let{component:n,props:t}=e;const i=(0,r.useContext)(a);if(!i)throw new _.i6("NavbarSecondaryMenuContentProvider");const[,E]=i,s=(0,_.Ql)(t);return(0,r.useEffect)((()=>{E({component:n,props:s})}),[E,n,s]),(0,r.useEffect)((()=>()=>E({component:null,props:null})),[E]),null}},7094:(e,n,t)=>{"use strict";t.d(n,{U:()=>T,z:()=>s});var r=t(67294),_=t(50012),a=t(902);const i="docusaurus.tab.",E=r.createContext(void 0);function s(e){let{children:n}=e;const t=function(){const[e,n]=(0,r.useState)({}),t=(0,r.useCallback)(((e,n)=>{(0,_.W)("docusaurus.tab."+e).set(n)}),[]);(0,r.useEffect)((()=>{try{const e={};(0,_._)().forEach((n=>{if(n.startsWith(i)){const t=n.substring(i.length);e[t]=(0,_.W)(n).get()}})),n(e)}catch(e){console.error(e)}}),[]);const a=(0,r.useCallback)(((e,r)=>{n((n=>({...n,[e]:r}))),t(e,r)}),[t]);return(0,r.useMemo)((()=>({tabGroupChoices:e,setTabGroupChoices:a})),[e,a])}();return r.createElement(E.Provider,{value:t},n)}function T(){const e=(0,r.useContext)(E);if(null==e)throw new a.i6("TabGroupChoiceProvider");return e}},19727:(e,n,t)=>{"use strict";t.d(n,{h:()=>_,t:()=>a});var r=t(67294);const _="navigation-with-keyboard";function a(){(0,r.useEffect)((()=>{function e(e){"keydown"===e.type&&"Tab"===e.key&&document.body.classList.add(_),"mousedown"===e.type&&document.body.classList.remove(_)}return document.addEventListener("keydown",e),document.addEventListener("mousedown",e),()=>{document.body.classList.remove(_),document.removeEventListener("keydown",e),document.removeEventListener("mousedown",e)}}),[])}},87524:(e,n,t)=>{"use strict";t.d(n,{i:()=>T});var r=t(67294),_=t(10412);const a="desktop",i="mobile",E="ssr";function s(){return _.default.canUseDOM?window.innerWidth>996?a:i:E}function T(){const[e,n]=(0,r.useState)((()=>s()));return(0,r.useEffect)((()=>{function e(){n(s())}return window.addEventListener("resize",e),()=>{window.removeEventListener("resize",e),clearTimeout(undefined)}}),[]),e}},35281:(e,n,t)=>{"use strict";t.d(n,{k:()=>r});const r={page:{blogListPage:"blog-list-page",blogPostPage:"blog-post-page",blogTagsListPage:"blog-tags-list-page",blogTagPostListPage:"blog-tags-post-list-page",docsDocPage:"docs-doc-page",docsTagsListPage:"docs-tags-list-page",docsTagDocListPage:"docs-tags-doc-list-page",mdxPage:"mdx-page"},wrapper:{main:"main-wrapper",blogPages:"blog-wrapper",docsPages:"docs-wrapper",mdxPages:"mdx-wrapper"},common:{editThisPage:"theme-edit-this-page",lastUpdated:"theme-last-updated",backToTopButton:"theme-back-to-top-button",codeBlock:"theme-code-block",admonition:"theme-admonition",admonitionType:e=>"theme-admonition-"+e},layout:{},docs:{docVersionBanner:"theme-doc-version-banner",docVersionBadge:"theme-doc-version-badge",docBreadcrumbs:"theme-doc-breadcrumbs",docMarkdown:"theme-doc-markdown",docTocMobile:"theme-doc-toc-mobile",docTocDesktop:"theme-doc-toc-desktop",docFooter:"theme-doc-footer",docFooterTagsRow:"theme-doc-footer-tags-row",docFooterEditMetaRow:"theme-doc-footer-edit-meta-row",docSidebarContainer:"theme-doc-sidebar-container",docSidebarMenu:"theme-doc-sidebar-menu",docSidebarItemCategory:"theme-doc-sidebar-item-category",docSidebarItemLink:"theme-doc-sidebar-item-link",docSidebarItemCategoryLevel:e=>"theme-doc-sidebar-item-category-level-"+e,docSidebarItemLinkLevel:e=>"theme-doc-sidebar-item-link-level-"+e},blog:{}}},53438:(e,n,t)=>{"use strict";t.d(n,{Wl:()=>I,_F:()=>O,cE:()=>d,hI:()=>S,lO:()=>R,oz:()=>A,s1:()=>u,vY:()=>D});var r=t(67294),_=t(76775),a=t(18790),i=t(94104),E=t(60373),s=t(1116),T=t(67392),o=t(48596);const d=!!i._r;function I(e){if(e.href)return e.href;for(const n of e.items){if("link"===n.type)return n.href;if("category"===n.type){const e=I(n);if(e)return e}}}const N=(e,n)=>void 0!==e&&(0,o.Mg)(e,n);function O(e,n){return"link"===e.type?N(e.href,n):"category"===e.type&&(N(e.href,n)||((e,n)=>e.some((e=>O(e,n))))(e.items,n))}function u(){var e;const n=(0,s.V)(),{pathname:t}=(0,_.TH)();if(!1===(null==(e=(0,i.gA)())?void 0:e.pluginData.breadcrumbs)||!n)return null;const r=[];return function e(n){for(const _ of n)if("category"===_.type&&((0,o.Mg)(_.href,t)||e(_.items))||"link"===_.type&&(0,o.Mg)(_.href,t))return r.push(_),!0;return!1}(n.items),r.reverse()}function R(e){const{activeVersion:n}=(0,i.Iw)(e),{preferredVersion:t}=(0,E.J)(e),_=(0,i.yW)(e);return(0,r.useMemo)((()=>(0,T.j)([n,t,_].filter(Boolean))),[n,t,_])}function A(e,n){const t=R(n);return(0,r.useMemo)((()=>{const n=t.flatMap((e=>e.sidebars?Object.entries(e.sidebars):[])),r=n.find((n=>n[0]===e));if(!r)throw new Error("Can't find any sidebar with id \""+e+'" in version'+(t.length>1?"s":"")+" "+t.map((e=>e.name)).join(", ")+'".\n  Available sidebar ids are:\n  - '+Object.keys(n).join("\n- "));return r[1]}),[e,t])}function D(e,n){const t=R(n);return(0,r.useMemo)((()=>{const n=t.flatMap((e=>e.docs)),r=n.find((n=>n.id===e));if(!r){if(t.flatMap((e=>e.draftIds)).includes(e))return null;throw new Error("DocNavbarItem: couldn't find any doc with id \""+e+'" in version'+(t.length>1?"s":"")+" "+t.map((e=>e.name)).join(", ")+'".\nAvailable doc ids are:\n- '+(0,T.j)(n.map((e=>e.id))).join("\n- "))}return r}),[e,t])}function S(e){let{route:n,versionMetadata:t}=e;const r=(0,_.TH)(),i=n.routes,E=i.find((e=>(0,_.LX)(r.pathname,e)));if(!E)return null;const s=E.sidebar,T=s?t.docsSidebars[s]:void 0;return{docElement:(0,a.H)(i),sidebarName:s,sidebarItems:T}}},67392:(e,n,t)=>{"use strict";function r(e,n){return void 0===n&&(n=(e,n)=>e===n),e.filter(((t,r)=>e.findIndex((e=>n(e,t)))!==r))}function _(e){return Array.from(new Set(e))}t.d(n,{j:()=>_,l:()=>r})},1944:(e,n,t)=>{"use strict";t.d(n,{FG:()=>I,d:()=>o,VC:()=>N});var r=t(67294),_=t(86010),a=t(35742),i=t(30226);function E(){const e=r.useContext(i._);if(!e)throw new Error("Unexpected: no Docusaurus route context found");return e}var s=t(44996),T=t(52263);function o(e){let{title:n,description:t,keywords:_,image:i,children:E}=e;const o=function(e){const{siteConfig:n}=(0,T.Z)(),{title:t,titleDelimiter:r}=n;return null!=e&&e.trim().length?e.trim()+" "+r+" "+t:t}(n),{withBaseUrl:d}=(0,s.C)(),I=i?d(i,{absolute:!0}):void 0;return r.createElement(a.Z,null,n&&r.createElement("title",null,o),n&&r.createElement("meta",{property:"og:title",content:o}),t&&r.createElement("meta",{name:"description",content:t}),t&&r.createElement("meta",{property:"og:description",content:t}),_&&r.createElement("meta",{name:"keywords",content:Array.isArray(_)?_.join(","):_}),I&&r.createElement("meta",{property:"og:image",content:I}),I&&r.createElement("meta",{name:"twitter:image",content:I}),E)}const d=r.createContext(void 0);function I(e){let{className:n,children:t}=e;const i=r.useContext(d),E=(0,_.Z)(i,n);return r.createElement(d.Provider,{value:E},r.createElement(a.Z,null,r.createElement("html",{className:E})),t)}function N(e){let{children:n}=e;const t=E(),a="plugin-"+t.plugin.name.replace(/docusaurus-(?:plugin|theme)-(?:content-)?/gi,"");const i="plugin-id-"+t.plugin.id;return r.createElement(I,{className:(0,_.Z)(a,i)},n)}},902:(e,n,t)=>{"use strict";t.d(n,{D9:()=>i,Qc:()=>T,Ql:()=>s,i6:()=>E,zX:()=>a});var r=t(67294);const _=t(10412).default.canUseDOM?r.useLayoutEffect:r.useEffect;function a(e){const n=(0,r.useRef)(e);return _((()=>{n.current=e}),[e]),(0,r.useCallback)((function(){return n.current(...arguments)}),[])}function i(e){const n=(0,r.useRef)();return _((()=>{n.current=e})),n.current}class E extends Error{constructor(e,n){var t,r,_,a;super(),this.name="ReactContextError",this.message="Hook "+(null!=(t=null==(r=this.stack)||null==(_=r.split("\n")[1])||null==(a=_.match(/at (?:\w+\.)?(?<name>\w+)/))?void 0:a.groups.name)?t:"")+" is called outside the <"+e+">. "+(null!=n?n:"")}}function s(e){const n=Object.entries(e);return n.sort(((e,n)=>e[0].localeCompare(n[0]))),(0,r.useMemo)((()=>e),n.flat())}function T(e){return n=>{let{children:t}=n;return r.createElement(r.Fragment,null,e.reduceRight(((e,n)=>r.createElement(n,null,e)),t))}}},48596:(e,n,t)=>{"use strict";t.d(n,{Mg:()=>i,Ns:()=>E});var r=t(67294),_=t(723),a=t(52263);function i(e,n){const t=e=>{var n;return null==(n=!e||e.endsWith("/")?e:e+"/")?void 0:n.toLowerCase()};return t(e)===t(n)}function E(){const{baseUrl:e}=(0,a.Z)().siteConfig;return(0,r.useMemo)((()=>function(e){let{baseUrl:n,routes:t}=e;function r(e){return e.path===n&&!0===e.exact}function _(e){return e.path===n&&!e.exact}return function e(n){if(0===n.length)return;return n.find(r)||e(n.filter(_).flatMap((e=>{var n;return null!=(n=e.routes)?n:[]})))}(t)}({routes:_.Z,baseUrl:e})),[e])}},12466:(e,n,t)=>{"use strict";t.d(n,{Ct:()=>N,OC:()=>s,RF:()=>d,o5:()=>I});var r=t(67294),_=t(10412),a=t(72389),i=t(902);const E=r.createContext(void 0);function s(e){let{children:n}=e;const t=function(){const e=(0,r.useRef)(!0);return(0,r.useMemo)((()=>({scrollEventsEnabledRef:e,enableScrollEvents:()=>{e.current=!0},disableScrollEvents:()=>{e.current=!1}})),[])}();return r.createElement(E.Provider,{value:t},n)}function T(){const e=(0,r.useContext)(E);if(null==e)throw new i.i6("ScrollControllerProvider");return e}const o=()=>_.default.canUseDOM?{scrollX:window.pageXOffset,scrollY:window.pageYOffset}:null;function d(e,n){void 0===n&&(n=[]);const{scrollEventsEnabledRef:t}=T(),_=(0,r.useRef)(o()),a=(0,i.zX)(e);(0,r.useEffect)((()=>{const e=()=>{if(!t.current)return;const e=o();a(e,_.current),_.current=e},n={passive:!0};return e(),window.addEventListener("scroll",e,n),()=>window.removeEventListener("scroll",e,n)}),[a,t,...n])}function I(){const e=T(),n=function(){const e=(0,r.useRef)({elem:null,top:0}),n=(0,r.useCallback)((n=>{e.current={elem:n,top:n.getBoundingClientRect().top}}),[]),t=(0,r.useCallback)((()=>{const{current:{elem:n,top:t}}=e;if(!n)return{restored:!1};const r=n.getBoundingClientRect().top-t;return r&&window.scrollBy({left:0,top:r}),e.current={elem:null,top:0},{restored:0!==r}}),[]);return(0,r.useMemo)((()=>({save:n,restore:t})),[t,n])}(),t=(0,r.useRef)(void 0),_=(0,r.useCallback)((r=>{n.save(r),e.disableScrollEvents(),t.current=()=>{const{restored:r}=n.restore();if(t.current=void 0,r){const n=()=>{e.enableScrollEvents(),window.removeEventListener("scroll",n)};window.addEventListener("scroll",n)}else e.enableScrollEvents()}}),[e,n]);return(0,r.useLayoutEffect)((()=>{null==t.current||t.current()})),{blockElementScrollPositionUntilNextRender:_}}function N(){const e=(0,r.useRef)(null),n=(0,a.Z)()&&"smooth"===getComputedStyle(document.documentElement).scrollBehavior;return{startScroll:t=>{e.current=n?function(e){return window.scrollTo({top:e,behavior:"smooth"}),()=>{}}(t):function(e){let n=null;const t=document.documentElement.scrollTop>e;return function r(){const _=document.documentElement.scrollTop;(t&&_>e||!t&&_<e)&&(n=requestAnimationFrame(r),window.scrollTo(0,Math.floor(.85*(_-e))+e))}(),()=>n&&cancelAnimationFrame(n)}(t)},cancelScroll:()=>null==e.current?void 0:e.current()}}},43320:(e,n,t)=>{"use strict";t.d(n,{HX:()=>r,os:()=>_});t(52263);const r="default";function _(e,n){return"docs-"+e+"-"+n}},50012:(e,n,t)=>{"use strict";t.d(n,{W:()=>E,_:()=>s});const r="localStorage";function _(e){if(void 0===e&&(e=r),"undefined"==typeof window)throw new Error("Browser storage is not available on Node.js/Docusaurus SSR process.");if("none"===e)return null;try{return window[e]}catch(t){return n=t,a||(console.warn("Docusaurus browser storage is not available.\nPossible reasons: running Docusaurus in an iframe, in an incognito browser session, or using too strict browser privacy settings.",n),a=!0),null}var n}let a=!1;const i={get:()=>null,set:()=>{},del:()=>{}};function E(e,n){if("undefined"==typeof window)return function(e){function n(){throw new Error('Illegal storage API usage for storage key "'+e+'".\nDocusaurus storage APIs are not supposed to be called on the server-rendering process.\nPlease only call storage APIs in effects and event handlers.')}return{get:n,set:n,del:n}}(e);const t=_(null==n?void 0:n.persistence);return null===t?i:{get:()=>{try{return t.getItem(e)}catch(n){return console.error("Docusaurus storage error, can't get key="+e,n),null}},set:n=>{try{t.setItem(e,n)}catch(r){console.error("Docusaurus storage error, can't set "+e+"="+n,r)}},del:()=>{try{t.removeItem(e)}catch(n){console.error("Docusaurus storage error, can't delete key="+e,n)}}}}function s(e){void 0===e&&(e=r);const n=_(e);if(!n)return[];const t=[];for(let r=0;r<n.length;r+=1){const e=n.key(r);null!==e&&t.push(e)}return t}},94711:(e,n,t)=>{"use strict";t.d(n,{l:()=>a});var r=t(52263),_=t(76775);function a(){const{siteConfig:{baseUrl:e,url:n},i18n:{defaultLocale:t,currentLocale:a}}=(0,r.Z)(),{pathname:i}=(0,_.TH)(),E=a===t?e:e.replace("/"+a+"/","/"),s=i.replace(e,"");return{createUrl:function(e){let{locale:r,fullyQualified:_}=e;return""+(_?n:"")+function(e){return e===t?""+E:""+E+e+"/"}(r)+s}}}},85936:(e,n,t)=>{"use strict";t.d(n,{S:()=>i});var r=t(67294),_=t(76775),a=t(902);function i(e){const n=(0,_.TH)(),t=(0,a.D9)(n),i=(0,a.zX)(e);(0,r.useEffect)((()=>{t&&n!==t&&i({location:n,previousLocation:t})}),[i,n,t])}},86668:(e,n,t)=>{"use strict";t.d(n,{L:()=>_});var r=t(52263);function _(){return(0,r.Z)().siteConfig.themeConfig}},8802:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n){const{trailingSlash:t,baseUrl:r}=n;if(e.startsWith("#"))return e;if(void 0===t)return e;const[_]=e.split(/[#?]/),a="/"===_||_===r?_:(i=_,t?function(e){return e.endsWith("/")?e:e+"/"}(i):function(e){return e.endsWith("/")?e.slice(0,-1):e}(i));var i;return e.replace(_,a)}},18780:function(e,n,t){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.applyTrailingSlash=n.blogPostContainerID=void 0,n.blogPostContainerID="post-content";var _=t(8802);Object.defineProperty(n,"applyTrailingSlash",{enumerable:!0,get:function(){return r(_).default}})},4750:function(e,n,t){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});r(t(10412)).default.canUseDOM&&(window.Prism=window.Prism||{},window.Prism.manual=!0)},86010:(e,n,t)=>{"use strict";function r(e){var n,t,_="";if("string"==typeof e||"number"==typeof e)_+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=r(e[n]))&&(_&&(_+=" "),_+=t);else for(n in e)e[n]&&(_&&(_+=" "),_+=n);return _}t.d(n,{Z:()=>_});const _=function(){for(var e,n,t=0,_="";t<arguments.length;)(e=arguments[t++])&&(n=r(e))&&(_&&(_+=" "),_+=n);return _}},99318:(e,n,t)=>{"use strict";t.d(n,{lX:()=>l,q_:()=>p,ob:()=>N,PP:()=>f,Ep:()=>I});var r=t(87462);function _(e){return"/"===e.charAt(0)}function a(e,n){for(var t=n,r=t+1,_=e.length;r<_;t+=1,r+=1)e[t]=e[r];e.pop()}const i=function(e,n){void 0===n&&(n="");var t,r=e&&e.split("/")||[],i=n&&n.split("/")||[],E=e&&_(e),s=n&&_(n),T=E||s;if(e&&_(e)?i=r:r.length&&(i.pop(),i=i.concat(r)),!i.length)return"/";if(i.length){var o=i[i.length-1];t="."===o||".."===o||""===o}else t=!1;for(var d=0,I=i.length;I>=0;I--){var N=i[I];"."===N?a(i,I):".."===N?(a(i,I),d++):d&&(a(i,I),d--)}if(!T)for(;d--;d)i.unshift("..");!T||""===i[0]||i[0]&&_(i[0])||i.unshift("");var O=i.join("/");return t&&"/"!==O.substr(-1)&&(O+="/"),O};var E=t(2177);function s(e){return"/"===e.charAt(0)?e:"/"+e}function T(e){return"/"===e.charAt(0)?e.substr(1):e}function o(e,n){return function(e,n){return 0===e.toLowerCase().indexOf(n.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(n.length))}(e,n)?e.substr(n.length):e}function d(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function I(e){var n=e.pathname,t=e.search,r=e.hash,_=n||"/";return t&&"?"!==t&&(_+="?"===t.charAt(0)?t:"?"+t),r&&"#"!==r&&(_+="#"===r.charAt(0)?r:"#"+r),_}function N(e,n,t,_){var a;"string"==typeof e?(a=function(e){var n=e||"/",t="",r="",_=n.indexOf("#");-1!==_&&(r=n.substr(_),n=n.substr(0,_));var a=n.indexOf("?");return-1!==a&&(t=n.substr(a),n=n.substr(0,a)),{pathname:n,search:"?"===t?"":t,hash:"#"===r?"":r}}(e),a.state=n):(void 0===(a=(0,r.Z)({},e)).pathname&&(a.pathname=""),a.search?"?"!==a.search.charAt(0)&&(a.search="?"+a.search):a.search="",a.hash?"#"!==a.hash.charAt(0)&&(a.hash="#"+a.hash):a.hash="",void 0!==n&&void 0===a.state&&(a.state=n));try{a.pathname=decodeURI(a.pathname)}catch(E){throw E instanceof URIError?new URIError('Pathname "'+a.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):E}return t&&(a.key=t),_?a.pathname?"/"!==a.pathname.charAt(0)&&(a.pathname=i(a.pathname,_.pathname)):a.pathname=_.pathname:a.pathname||(a.pathname="/"),a}function O(){var e=null;var n=[];return{setPrompt:function(n){return e=n,function(){e===n&&(e=null)}},confirmTransitionTo:function(n,t,r,_){if(null!=e){var a="function"==typeof e?e(n,t):e;"string"==typeof a?"function"==typeof r?r(a,_):_(!0):_(!1!==a)}else _(!0)},appendListener:function(e){var t=!0;function r(){t&&e.apply(void 0,arguments)}return n.push(r),function(){t=!1,n=n.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.forEach((function(e){return e.apply(void 0,t)}))}}}var u=!("undefined"==typeof window||!window.document||!window.document.createElement);function R(e,n){n(window.confirm(e))}var A="popstate",D="hashchange";function S(){try{return window.history.state||{}}catch(e){return{}}}function l(e){void 0===e&&(e={}),u||(0,E.Z)(!1);var n,t=window.history,_=(-1===(n=window.navigator.userAgent).indexOf("Android 2.")&&-1===n.indexOf("Android 4.0")||-1===n.indexOf("Mobile Safari")||-1!==n.indexOf("Chrome")||-1!==n.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,a=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e,T=i.forceRefresh,l=void 0!==T&&T,h=i.getUserConfirmation,C=void 0===h?R:h,P=i.keyLength,U=void 0===P?6:P,c=e.basename?d(s(e.basename)):"";function p(e){var n=e||{},t=n.key,r=n.state,_=window.location,a=_.pathname+_.search+_.hash;return c&&(a=o(a,c)),N(a,r,t)}function L(){return Math.random().toString(36).substr(2,U)}var f=O();function F(e){(0,r.Z)(Y,e),Y.length=t.length,f.notifyListeners(Y.location,Y.action)}function m(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||b(p(e.state))}function M(){b(p(S()))}var w=!1;function b(e){if(w)w=!1,F();else{f.confirmTransitionTo(e,"POP",C,(function(n){n?F({action:"POP",location:e}):function(e){var n=Y.location,t=X.indexOf(n.key);-1===t&&(t=0);var r=X.indexOf(e.key);-1===r&&(r=0);var _=t-r;_&&(w=!0,v(_))}(e)}))}}var g=p(S()),X=[g.key];function y(e){return c+I(e)}function v(e){t.go(e)}var V=0;function B(e){1===(V+=e)&&1===e?(window.addEventListener(A,m),a&&window.addEventListener(D,M)):0===V&&(window.removeEventListener(A,m),a&&window.removeEventListener(D,M))}var K=!1;var Y={length:t.length,action:"POP",location:g,createHref:y,push:function(e,n){var r="PUSH",a=N(e,n,L(),Y.location);f.confirmTransitionTo(a,r,C,(function(e){if(e){var n=y(a),i=a.key,E=a.state;if(_)if(t.pushState({key:i,state:E},null,n),l)window.location.href=n;else{var s=X.indexOf(Y.location.key),T=X.slice(0,s+1);T.push(a.key),X=T,F({action:r,location:a})}else window.location.href=n}}))},replace:function(e,n){var r="REPLACE",a=N(e,n,L(),Y.location);f.confirmTransitionTo(a,r,C,(function(e){if(e){var n=y(a),i=a.key,E=a.state;if(_)if(t.replaceState({key:i,state:E},null,n),l)window.location.replace(n);else{var s=X.indexOf(Y.location.key);-1!==s&&(X[s]=a.key),F({action:r,location:a})}else window.location.replace(n)}}))},go:v,goBack:function(){v(-1)},goForward:function(){v(1)},block:function(e){void 0===e&&(e=!1);var n=f.setPrompt(e);return K||(B(1),K=!0),function(){return K&&(K=!1,B(-1)),n()}},listen:function(e){var n=f.appendListener(e);return B(1),function(){B(-1),n()}}};return Y}var h="hashchange",C={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+T(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:T,decodePath:s},slash:{encodePath:s,decodePath:s}};function P(e){var n=e.indexOf("#");return-1===n?e:e.slice(0,n)}function U(){var e=window.location.href,n=e.indexOf("#");return-1===n?"":e.substring(n+1)}function c(e){window.location.replace(P(window.location.href)+"#"+e)}function p(e){void 0===e&&(e={}),u||(0,E.Z)(!1);var n=window.history,t=(window.navigator.userAgent.indexOf("Firefox"),e),_=t.getUserConfirmation,a=void 0===_?R:_,i=t.hashType,T=void 0===i?"slash":i,A=e.basename?d(s(e.basename)):"",D=C[T],S=D.encodePath,l=D.decodePath;function p(){var e=l(U());return A&&(e=o(e,A)),N(e)}var L=O();function f(e){(0,r.Z)(K,e),K.length=n.length,L.notifyListeners(K.location,K.action)}var F=!1,m=null;function M(){var e,n,t=U(),r=S(t);if(t!==r)c(r);else{var _=p(),i=K.location;if(!F&&(n=_,(e=i).pathname===n.pathname&&e.search===n.search&&e.hash===n.hash))return;if(m===I(_))return;m=null,function(e){if(F)F=!1,f();else{var n="POP";L.confirmTransitionTo(e,n,a,(function(t){t?f({action:n,location:e}):function(e){var n=K.location,t=X.lastIndexOf(I(n));-1===t&&(t=0);var r=X.lastIndexOf(I(e));-1===r&&(r=0);var _=t-r;_&&(F=!0,y(_))}(e)}))}}(_)}}var w=U(),b=S(w);w!==b&&c(b);var g=p(),X=[I(g)];function y(e){n.go(e)}var v=0;function V(e){1===(v+=e)&&1===e?window.addEventListener(h,M):0===v&&window.removeEventListener(h,M)}var B=!1;var K={length:n.length,action:"POP",location:g,createHref:function(e){var n=document.querySelector("base"),t="";return n&&n.getAttribute("href")&&(t=P(window.location.href)),t+"#"+S(A+I(e))},push:function(e,n){var t="PUSH",r=N(e,void 0,void 0,K.location);L.confirmTransitionTo(r,t,a,(function(e){if(e){var n=I(r),_=S(A+n);if(U()!==_){m=n,function(e){window.location.hash=e}(_);var a=X.lastIndexOf(I(K.location)),i=X.slice(0,a+1);i.push(n),X=i,f({action:t,location:r})}else f()}}))},replace:function(e,n){var t="REPLACE",r=N(e,void 0,void 0,K.location);L.confirmTransitionTo(r,t,a,(function(e){if(e){var n=I(r),_=S(A+n);U()!==_&&(m=n,c(_));var a=X.indexOf(I(K.location));-1!==a&&(X[a]=n),f({action:t,location:r})}}))},go:y,goBack:function(){y(-1)},goForward:function(){y(1)},block:function(e){void 0===e&&(e=!1);var n=L.setPrompt(e);return B||(V(1),B=!0),function(){return B&&(B=!1,V(-1)),n()}},listen:function(e){var n=L.appendListener(e);return V(1),function(){V(-1),n()}}};return K}function L(e,n,t){return Math.min(Math.max(e,n),t)}function f(e){void 0===e&&(e={});var n=e,t=n.getUserConfirmation,_=n.initialEntries,a=void 0===_?["/"]:_,i=n.initialIndex,E=void 0===i?0:i,s=n.keyLength,T=void 0===s?6:s,o=O();function d(e){(0,r.Z)(l,e),l.length=l.entries.length,o.notifyListeners(l.location,l.action)}function u(){return Math.random().toString(36).substr(2,T)}var R=L(E,0,a.length-1),A=a.map((function(e){return N(e,void 0,"string"==typeof e?u():e.key||u())})),D=I;function S(e){var n=L(l.index+e,0,l.entries.length-1),r=l.entries[n];o.confirmTransitionTo(r,"POP",t,(function(e){e?d({action:"POP",location:r,index:n}):d()}))}var l={length:A.length,action:"POP",location:A[R],index:R,entries:A,createHref:D,push:function(e,n){var r="PUSH",_=N(e,n,u(),l.location);o.confirmTransitionTo(_,r,t,(function(e){if(e){var n=l.index+1,t=l.entries.slice(0);t.length>n?t.splice(n,t.length-n,_):t.push(_),d({action:r,location:_,index:n,entries:t})}}))},replace:function(e,n){var r="REPLACE",_=N(e,n,u(),l.location);o.confirmTransitionTo(_,r,t,(function(e){e&&(l.entries[l.index]=_,d({action:r,location:_}))}))},go:S,goBack:function(){S(-1)},goForward:function(){S(1)},canGo:function(e){var n=l.index+e;return n>=0&&n<l.entries.length},block:function(e){return void 0===e&&(e=!1),o.setPrompt(e)},listen:function(e){return o.appendListener(e)}};return l}},8679:(e,n,t)=>{"use strict";var r=t(59864),_={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},a={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},E={};function s(e){return r.isMemo(e)?i:E[e.$$typeof]||_}E[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},E[r.Memo]=i;var T=Object.defineProperty,o=Object.getOwnPropertyNames,d=Object.getOwnPropertySymbols,I=Object.getOwnPropertyDescriptor,N=Object.getPrototypeOf,O=Object.prototype;e.exports=function e(n,t,r){if("string"!=typeof t){if(O){var _=N(t);_&&_!==O&&e(n,_,r)}var i=o(t);d&&(i=i.concat(d(t)));for(var E=s(n),u=s(t),R=0;R<i.length;++R){var A=i[R];if(!(a[A]||r&&r[A]||u&&u[A]||E&&E[A])){var D=I(t,A);try{T(n,A,D)}catch(S){}}}}return n}},41143:e=>{"use strict";e.exports=function(e,n,t,r,_,a,i,E){if(!e){var s;if(void 0===n)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var T=[t,r,_,a,i,E],o=0;(s=new Error(n.replace(/%s/g,(function(){return T[o++]})))).name="Invariant Violation"}throw s.framesToPop=1,s}}},5826:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},41304:(e,n,t)=>{"use strict";t.r(n)},32497:(e,n,t)=>{"use strict";t.r(n)},52295:(e,n,t)=>{"use strict";t.r(n)},74865:function(e,n,t){var r,_;r=function(){var e,n,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function _(e,n,t){return e<n?n:e>t?t:e}function a(e){return 100*(-1+e)}function i(e,n,t){var _;return(_="translate3d"===r.positionUsing?{transform:"translate3d("+a(e)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+a(e)+"%,0)"}:{"margin-left":a(e)+"%"}).transition="all "+n+"ms "+t,_}t.configure=function(e){var n,t;for(n in e)void 0!==(t=e[n])&&e.hasOwnProperty(n)&&(r[n]=t);return this},t.status=null,t.set=function(e){var n=t.isStarted();e=_(e,r.minimum,1),t.status=1===e?null:e;var a=t.render(!n),T=a.querySelector(r.barSelector),o=r.speed,d=r.easing;return a.offsetWidth,E((function(n){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),s(T,i(e,o,d)),1===e?(s(a,{transition:"none",opacity:1}),a.offsetWidth,setTimeout((function(){s(a,{transition:"all "+o+"ms linear",opacity:0}),setTimeout((function(){t.remove(),n()}),o)}),o)):setTimeout(n,o)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var e=function(){setTimeout((function(){t.status&&(t.trickle(),e())}),r.trickleSpeed)};return r.trickle&&e(),this},t.done=function(e){return e||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(e){var n=t.status;return n?("number"!=typeof e&&(e=(1-n)*_(Math.random()*n,.1,.95)),n=_(n+e,0,.994),t.set(n)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},e=0,n=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===n&&t.start(),e++,n++,r.always((function(){0==--n?(e=0,t.done()):t.set((e-n)/e)})),this):this},t.render=function(e){if(t.isRendered())return document.getElementById("nprogress");o(document.documentElement,"nprogress-busy");var n=document.createElement("div");n.id="nprogress",n.innerHTML=r.template;var _,i=n.querySelector(r.barSelector),E=e?"-100":a(t.status||0),T=document.querySelector(r.parent);return s(i,{transition:"all 0 linear",transform:"translate3d("+E+"%,0,0)"}),r.showSpinner||(_=n.querySelector(r.spinnerSelector))&&N(_),T!=document.body&&o(T,"nprogress-custom-parent"),T.appendChild(n),n},t.remove=function(){d(document.documentElement,"nprogress-busy"),d(document.querySelector(r.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&N(e)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var e=document.body.style,n="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return n+"Perspective"in e?"translate3d":n+"Transform"in e?"translate":"margin"};var E=function(){var e=[];function n(){var t=e.shift();t&&t(n)}return function(t){e.push(t),1==e.length&&n()}}(),s=function(){var e=["Webkit","O","Moz","ms"],n={};function t(e){return e.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,n){return n.toUpperCase()}))}function r(n){var t=document.body.style;if(n in t)return n;for(var r,_=e.length,a=n.charAt(0).toUpperCase()+n.slice(1);_--;)if((r=e[_]+a)in t)return r;return n}function _(e){return e=t(e),n[e]||(n[e]=r(e))}function a(e,n,t){n=_(n),e.style[n]=t}return function(e,n){var t,r,_=arguments;if(2==_.length)for(t in n)void 0!==(r=n[t])&&n.hasOwnProperty(t)&&a(e,t,r);else a(e,_[1],_[2])}}();function T(e,n){return("string"==typeof e?e:I(e)).indexOf(" "+n+" ")>=0}function o(e,n){var t=I(e),r=t+n;T(t,n)||(e.className=r.substring(1))}function d(e,n){var t,r=I(e);T(e,n)&&(t=r.replace(" "+n+" "," "),e.className=t.substring(1,t.length-1))}function I(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function N(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return t},void 0===(_="function"==typeof r?r.call(n,t,n,e):r)||(e.exports=_)},27418:e=>{"use strict";var n=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function _(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var n={},t=0;t<10;t++)n["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(n).map((function(e){return n[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(_){return!1}}()?Object.assign:function(e,a){for(var i,E,s=_(e),T=1;T<arguments.length;T++){for(var o in i=Object(arguments[T]))t.call(i,o)&&(s[o]=i[o]);if(n){E=n(i);for(var d=0;d<E.length;d++)r.call(i,E[d])&&(s[E[d]]=i[E[d]])}}return s}},14779:(e,n,t)=>{var r=t(5826);e.exports=N,e.exports.parse=a,e.exports.compile=function(e,n){return E(a(e,n),n)},e.exports.tokensToFunction=E,e.exports.tokensToRegExp=I;var _=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(e,n){for(var t,r=[],a=0,i=0,E="",o=n&&n.delimiter||"/";null!=(t=_.exec(e));){var d=t[0],I=t[1],N=t.index;if(E+=e.slice(i,N),i=N+d.length,I)E+=I[1];else{var O=e[i],u=t[2],R=t[3],A=t[4],D=t[5],S=t[6],l=t[7];E&&(r.push(E),E="");var h=null!=u&&null!=O&&O!==u,C="+"===S||"*"===S,P="?"===S||"*"===S,U=t[2]||o,c=A||D;r.push({name:R||a++,prefix:u||"",delimiter:U,optional:P,repeat:C,partial:h,asterisk:!!l,pattern:c?T(c):l?".*":"[^"+s(U)+"]+?"})}}return i<e.length&&(E+=e.substr(i)),E&&r.push(E),r}function i(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function E(e,n){for(var t=new Array(e.length),_=0;_<e.length;_++)"object"==typeof e[_]&&(t[_]=new RegExp("^(?:"+e[_].pattern+")$",d(n)));return function(n,_){for(var a="",E=n||{},s=(_||{}).pretty?i:encodeURIComponent,T=0;T<e.length;T++){var o=e[T];if("string"!=typeof o){var d,I=E[o.name];if(null==I){if(o.optional){o.partial&&(a+=o.prefix);continue}throw new TypeError('Expected "'+o.name+'" to be defined')}if(r(I)){if(!o.repeat)throw new TypeError('Expected "'+o.name+'" to not repeat, but received `'+JSON.stringify(I)+"`");if(0===I.length){if(o.optional)continue;throw new TypeError('Expected "'+o.name+'" to not be empty')}for(var N=0;N<I.length;N++){if(d=s(I[N]),!t[T].test(d))throw new TypeError('Expected all "'+o.name+'" to match "'+o.pattern+'", but received `'+JSON.stringify(d)+"`");a+=(0===N?o.prefix:o.delimiter)+d}}else{if(d=o.asterisk?encodeURI(I).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):s(I),!t[T].test(d))throw new TypeError('Expected "'+o.name+'" to match "'+o.pattern+'", but received "'+d+'"');a+=o.prefix+d}}else a+=o}return a}}function s(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function T(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function o(e,n){return e.keys=n,e}function d(e){return e&&e.sensitive?"":"i"}function I(e,n,t){r(n)||(t=n||t,n=[]);for(var _=(t=t||{}).strict,a=!1!==t.end,i="",E=0;E<e.length;E++){var T=e[E];if("string"==typeof T)i+=s(T);else{var I=s(T.prefix),N="(?:"+T.pattern+")";n.push(T),T.repeat&&(N+="(?:"+I+N+")*"),i+=N=T.optional?T.partial?I+"("+N+")?":"(?:"+I+"("+N+"))?":I+"("+N+")"}}var O=s(t.delimiter||"/"),u=i.slice(-O.length)===O;return _||(i=(u?i.slice(0,-O.length):i)+"(?:"+O+"(?=$))?"),i+=a?"$":_&&u?"":"(?="+O+"|$)",o(new RegExp("^"+i,d(t)),n)}function N(e,n,t){return r(n)||(t=n||t,n=[]),t=t||{},e instanceof RegExp?function(e,n){var t=e.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)n.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return o(e,n)}(e,n):r(e)?function(e,n,t){for(var r=[],_=0;_<e.length;_++)r.push(N(e[_],n,t).source);return o(new RegExp("(?:"+r.join("|")+")",d(t)),n)}(e,n,t):function(e,n,t){return I(a(e,t),n,t)}(e,n,t)}},87410:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var r=function(){var e=/(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i,n=0,t={},r={util:{encode:function e(n){return n instanceof _?new _(n.type,e(n.content),n.alias):Array.isArray(n)?n.map(e):n.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++n}),e.__id},clone:function e(n,t){var _,a;switch(t=t||{},r.util.type(n)){case"Object":if(a=r.util.objId(n),t[a])return t[a];for(var i in _={},t[a]=_,n)n.hasOwnProperty(i)&&(_[i]=e(n[i],t));return _;case"Array":return a=r.util.objId(n),t[a]?t[a]:(_=[],t[a]=_,n.forEach((function(n,r){_[r]=e(n,t)})),_);default:return n}},getLanguage:function(n){for(;n;){var t=e.exec(n.className);if(t)return t[1].toLowerCase();n=n.parentElement}return"none"},setLanguage:function(n,t){n.className=n.className.replace(RegExp(e,"gi"),""),n.classList.add("language-"+t)},isActive:function(e,n,t){for(var r="no-"+n;e;){var _=e.classList;if(_.contains(n))return!0;if(_.contains(r))return!1;e=e.parentElement}return!!t}},languages:{plain:t,plaintext:t,text:t,txt:t,extend:function(e,n){var t=r.util.clone(r.languages[e]);for(var _ in n)t[_]=n[_];return t},insertBefore:function(e,n,t,_){var a=(_=_||r.languages)[e],i={};for(var E in a)if(a.hasOwnProperty(E)){if(E==n)for(var s in t)t.hasOwnProperty(s)&&(i[s]=t[s]);t.hasOwnProperty(E)||(i[E]=a[E])}var T=_[e];return _[e]=i,r.languages.DFS(r.languages,(function(n,t){t===T&&n!=e&&(this[n]=i)})),i},DFS:function e(n,t,_,a){a=a||{};var i=r.util.objId;for(var E in n)if(n.hasOwnProperty(E)){t.call(n,E,n[E],_||E);var s=n[E],T=r.util.type(s);"Object"!==T||a[i(s)]?"Array"!==T||a[i(s)]||(a[i(s)]=!0,e(s,t,E,a)):(a[i(s)]=!0,e(s,t,null,a))}}},plugins:{},highlight:function(e,n,t){var a={code:e,grammar:n,language:t};return r.hooks.run("before-tokenize",a),a.tokens=r.tokenize(a.code,a.grammar),r.hooks.run("after-tokenize",a),_.stringify(r.util.encode(a.tokens),a.language)},tokenize:function(e,n){var t=n.rest;if(t){for(var r in t)n[r]=t[r];delete n.rest}var _=new E;return s(_,_.head,e),i(e,_,n,_.head,0),function(e){var n=[],t=e.head.next;for(;t!==e.tail;)n.push(t.value),t=t.next;return n}(_)},hooks:{all:{},add:function(e,n){var t=r.hooks.all;t[e]=t[e]||[],t[e].push(n)},run:function(e,n){var t=r.hooks.all[e];if(t&&t.length)for(var _,a=0;_=t[a++];)_(n)}},Token:_};function _(e,n,t,r){this.type=e,this.content=n,this.alias=t,this.length=0|(r||"").length}function a(e,n,t,r){e.lastIndex=n;var _=e.exec(t);if(_&&r&&_[1]){var a=_[1].length;_.index+=a,_[0]=_[0].slice(a)}return _}function i(e,n,t,E,o,d){for(var I in t)if(t.hasOwnProperty(I)&&t[I]){var N=t[I];N=Array.isArray(N)?N:[N];for(var O=0;O<N.length;++O){if(d&&d.cause==I+","+O)return;var u=N[O],R=u.inside,A=!!u.lookbehind,D=!!u.greedy,S=u.alias;if(D&&!u.pattern.global){var l=u.pattern.toString().match(/[imsuy]*$/)[0];u.pattern=RegExp(u.pattern.source,l+"g")}for(var h=u.pattern||u,C=E.next,P=o;C!==n.tail&&!(d&&P>=d.reach);P+=C.value.length,C=C.next){var U=C.value;if(n.length>e.length)return;if(!(U instanceof _)){var c,p=1;if(D){if(!(c=a(h,P,e,A))||c.index>=e.length)break;var L=c.index,f=c.index+c[0].length,F=P;for(F+=C.value.length;L>=F;)F+=(C=C.next).value.length;if(P=F-=C.value.length,C.value instanceof _)continue;for(var m=C;m!==n.tail&&(F<f||"string"==typeof m.value);m=m.next)p++,F+=m.value.length;p--,U=e.slice(P,F),c.index-=P}else if(!(c=a(h,0,U,A)))continue;L=c.index;var M=c[0],w=U.slice(0,L),b=U.slice(L+M.length),g=P+U.length;d&&g>d.reach&&(d.reach=g);var X=C.prev;if(w&&(X=s(n,X,w),P+=w.length),T(n,X,p),C=s(n,X,new _(I,R?r.tokenize(M,R):M,S,M)),b&&s(n,C,b),p>1){var y={cause:I+","+O,reach:g};i(e,n,t,C.prev,P,y),d&&y.reach>d.reach&&(d.reach=y.reach)}}}}}}function E(){var e={value:null,prev:null,next:null},n={value:null,prev:e,next:null};e.next=n,this.head=e,this.tail=n,this.length=0}function s(e,n,t){var r=n.next,_={value:t,prev:n,next:r};return n.next=_,r.prev=_,e.length++,_}function T(e,n,t){for(var r=n.next,_=0;_<t&&r!==e.tail;_++)r=r.next;n.next=r,r.prev=n,e.length-=_}return _.stringify=function e(n,t){if("string"==typeof n)return n;if(Array.isArray(n)){var _="";return n.forEach((function(n){_+=e(n,t)})),_}var a={type:n.type,content:e(n.content,t),tag:"span",classes:["token",n.type],attributes:{},language:t},i=n.alias;i&&(Array.isArray(i)?Array.prototype.push.apply(a.classes,i):a.classes.push(i)),r.hooks.run("wrap",a);var E="";for(var s in a.attributes)E+=" "+s+'="'+(a.attributes[s]||"").replace(/"/g,"&quot;")+'"';return"<"+a.tag+' class="'+a.classes.join(" ")+'"'+E+">"+a.content+"</"+a.tag+">"},r}(),_=r;r.default=r,_.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},_.languages.markup.tag.inside["attr-value"].inside.entity=_.languages.markup.entity,_.languages.markup.doctype.inside["internal-subset"].inside=_.languages.markup,_.hooks.add("wrap",(function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"))})),Object.defineProperty(_.languages.markup.tag,"addInlined",{value:function(e,n){var t={};t["language-"+n]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:_.languages[n]},t.cdata=/^<!\[CDATA\[|\]\]>$/i;var r={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:t}};r["language-"+n]={pattern:/[\s\S]+/,inside:_.languages[n]};var a={};a[e]={pattern:RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g,(function(){return e})),"i"),lookbehind:!0,greedy:!0,inside:r},_.languages.insertBefore("markup","cdata",a)}}),Object.defineProperty(_.languages.markup.tag,"addAttribute",{value:function(e,n){_.languages.markup.tag.inside["special-attr"].push({pattern:RegExp(/(^|["'\s])/.source+"(?:"+e+")"+/\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,"i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[n,"language-"+n],inside:_.languages[n]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),_.languages.html=_.languages.markup,_.languages.mathml=_.languages.markup,_.languages.svg=_.languages.markup,_.languages.xml=_.languages.extend("markup",{}),_.languages.ssml=_.languages.xml,_.languages.atom=_.languages.xml,_.languages.rss=_.languages.xml,function(e){var n="\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b",t={pattern:/(^(["']?)\w+\2)[ \t]+\S.*/,lookbehind:!0,alias:"punctuation",inside:null},r={bash:t,environment:{pattern:RegExp("\\$"+n),alias:"constant"},variable:[{pattern:/\$?\(\([\s\S]+?\)\)/,greedy:!0,inside:{variable:[{pattern:/(^\$\(\([\s\S]+)\)\)/,lookbehind:!0},/^\$\(\(/],number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,operator:/--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,punctuation:/\(\(?|\)\)?|,|;/}},{pattern:/\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,greedy:!0,inside:{variable:/^\$\(|^`|\)$|`$/}},{pattern:/\$\{[^}]+\}/,greedy:!0,inside:{operator:/:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,punctuation:/[\[\]]/,environment:{pattern:RegExp("(\\{)"+n),lookbehind:!0,alias:"constant"}}},/\$(?:\w+|[#?*!@$])/],entity:/\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/};e.languages.bash={shebang:{pattern:/^#!\s*\/.*/,alias:"important"},comment:{pattern:/(^|[^"{\\$])#.*/,lookbehind:!0},"function-name":[{pattern:/(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,lookbehind:!0,alias:"function"},{pattern:/\b[\w-]+(?=\s*\(\s*\)\s*\{)/,alias:"function"}],"for-or-select":{pattern:/(\b(?:for|select)\s+)\w+(?=\s+in\s)/,alias:"variable",lookbehind:!0},"assign-left":{pattern:/(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,inside:{environment:{pattern:RegExp("(^|[\\s;|&]|[<>]\\()"+n),lookbehind:!0,alias:"constant"}},alias:"variable",lookbehind:!0},string:[{pattern:/((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,lookbehind:!0,greedy:!0,inside:r},{pattern:/((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,lookbehind:!0,greedy:!0,inside:{bash:t}},{pattern:/(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,lookbehind:!0,greedy:!0,inside:r},{pattern:/(^|[^$\\])'[^']*'/,lookbehind:!0,greedy:!0},{pattern:/\$'(?:[^'\\]|\\[\s\S])*'/,greedy:!0,inside:{entity:r.entity}}],environment:{pattern:RegExp("\\$?"+n),alias:"constant"},variable:r.variable,function:{pattern:/(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])/,lookbehind:!0},builtin:{pattern:/(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])/,lookbehind:!0,alias:"class-name"},boolean:{pattern:/(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])/,lookbehind:!0},"file-descriptor":{pattern:/\B&\d\b/,alias:"important"},operator:{pattern:/\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,inside:{"file-descriptor":{pattern:/^\d/,alias:"important"}}},punctuation:/\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,number:{pattern:/(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,lookbehind:!0}},t.inside=e.languages.bash;for(var _=["comment","function-name","for-or-select","assign-left","string","environment","function","keyword","builtin","boolean","file-descriptor","operator","punctuation","number"],a=r.variable[1].inside,i=0;i<_.length;i++)a[_[i]]=e.languages.bash[_[i]];e.languages.shell=e.languages.bash}(_),_.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},_.languages.c=_.languages.extend("clike",{comment:{pattern:/\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0},"class-name":{pattern:/(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,lookbehind:!0},keyword:/\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\b/,function:/\b[a-z_]\w*(?=\s*\()/i,number:/(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/}),_.languages.insertBefore("c","string",{char:{pattern:/'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n]){0,32}'/,greedy:!0}}),_.languages.insertBefore("c","string",{macro:{pattern:/(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,lookbehind:!0,greedy:!0,alias:"property",inside:{string:[{pattern:/^(#\s*include\s*)<[^>]+>/,lookbehind:!0},_.languages.c.string],char:_.languages.c.char,comment:_.languages.c.comment,"macro-name":[{pattern:/(^#\s*define\s+)\w+\b(?!\()/i,lookbehind:!0},{pattern:/(^#\s*define\s+)\w+\b(?=\()/i,lookbehind:!0,alias:"function"}],directive:{pattern:/^(#\s*)[a-z]+/,lookbehind:!0,alias:"keyword"},"directive-hash":/^#/,punctuation:/##|\\(?=[\r\n])/,expression:{pattern:/\S[\s\S]*/,inside:_.languages.c}}}}),_.languages.insertBefore("c","function",{constant:/\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\b/}),delete _.languages.c.boolean,function(e){var n=/\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,t=/\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(/<keyword>/g,(function(){return n.source}));e.languages.cpp=e.languages.extend("c",{"class-name":[{pattern:RegExp(/(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(/<keyword>/g,(function(){return n.source}))),lookbehind:!0},/\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/,/\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i,/\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/],keyword:n,number:{pattern:/(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,greedy:!0},operator:/>>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,boolean:/\b(?:false|true)\b/}),e.languages.insertBefore("cpp","string",{module:{pattern:RegExp(/(\b(?:import|module)\s+)/.source+"(?:"+/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source+"|"+/<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(/<mod-name>/g,(function(){return t}))+")"),lookbehind:!0,greedy:!0,inside:{string:/^[<"][\s\S]+/,operator:/:/,punctuation:/\./}},"raw-string":{pattern:/R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,alias:"string",greedy:!0}}),e.languages.insertBefore("cpp","keyword",{"generic-function":{pattern:/\b(?!operator\b)[a-z_]\w*\s*<(?:[^<>]|<[^<>]*>)*>(?=\s*\()/i,inside:{function:/^\w+/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:e.languages.cpp}}}}),e.languages.insertBefore("cpp","operator",{"double-colon":{pattern:/::/,alias:"punctuation"}}),e.languages.insertBefore("cpp","class-name",{"base-clause":{pattern:/(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,lookbehind:!0,greedy:!0,inside:e.languages.extend("cpp",{})}}),e.languages.insertBefore("inside","double-colon",{"class-name":/\b[a-z_]\w*\b(?!\s*::)/i},e.languages.cpp["base-clause"])}(_),function(e){var n=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;e.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:/@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+n.source+"|"+/(?:[^\\\r\n()"']|\\[\s\S])*/.source+")\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+n.source+"$"),alias:"url"}}},selector:{pattern:RegExp("(^|[{}\\s])[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|"+n.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:n,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css;var t=e.languages.markup;t&&(t.tag.addInlined("style","css"),t.tag.addAttribute("style","css"))}(_),function(e){var n,t=/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;e.languages.css.selector={pattern:e.languages.css.selector.pattern,lookbehind:!0,inside:n={"pseudo-element":/:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,"pseudo-class":/:[-\w]+/,class:/\.[-\w]+/,id:/#[-\w]+/,attribute:{pattern:RegExp("\\[(?:[^[\\]\"']|"+t.source+")*\\]"),greedy:!0,inside:{punctuation:/^\[|\]$/,"case-sensitivity":{pattern:/(\s)[si]$/i,lookbehind:!0,alias:"keyword"},namespace:{pattern:/^(\s*)(?:(?!\s)[-*\w\xA0-\uFFFF])*\|(?!=)/,lookbehind:!0,inside:{punctuation:/\|$/}},"attr-name":{pattern:/^(\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+/,lookbehind:!0},"attr-value":[t,{pattern:/(=\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+(?=\s*$)/,lookbehind:!0}],operator:/[|~*^$]?=/}},"n-th":[{pattern:/(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,lookbehind:!0,inside:{number:/[\dn]+/,operator:/[+-]/}},{pattern:/(\(\s*)(?:even|odd)(?=\s*\))/i,lookbehind:!0}],combinator:/>|\+|~|\|\|/,punctuation:/[(),]/}},e.languages.css.atrule.inside["selector-function-argument"].inside=n,e.languages.insertBefore("css","property",{variable:{pattern:/(^|[^-\w\xA0-\uFFFF])--(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*/i,lookbehind:!0}});var r={pattern:/(\b\d+)(?:%|[a-z]+(?![\w-]))/,lookbehind:!0},_={pattern:/(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,lookbehind:!0};e.languages.insertBefore("css","function",{operator:{pattern:/(\s)[+\-*\/](?=\s)/,lookbehind:!0},hexcode:{pattern:/\B#[\da-f]{3,8}\b/i,alias:"color"},color:[{pattern:/(^|[^\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\w-])/i,lookbehind:!0},{pattern:/\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,inside:{unit:r,number:_,function:/[\w-]+(?=\()/,punctuation:/[(),]/}}],entity:/\\[\da-f]{1,8}/i,unit:r,number:_})}(_),_.languages.javascript=_.languages.extend("clike",{"class-name":[_.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp(/(^|[^\w$])/.source+"(?:"+/NaN|Infinity/.source+"|"+/0[bB][01]+(?:_[01]+)*n?/.source+"|"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+"|"+/0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source+"|"+/\d+(?:_\d+)*n/.source+"|"+/(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source+")"+/(?![\w$])/.source),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),_.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/,_.languages.insertBefore("javascript","keyword",{regex:{pattern:/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:_.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:_.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:_.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:_.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:_.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),_.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:_.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}}),_.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}}),_.languages.markup&&(_.languages.markup.tag.addInlined("script","javascript"),_.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,"javascript")),_.languages.js=_.languages.javascript,function(e){var n=/#(?!\{).+/,t={pattern:/#\{[^}]+\}/,alias:"variable"};e.languages.coffeescript=e.languages.extend("javascript",{comment:n,string:[{pattern:/'(?:\\[\s\S]|[^\\'])*'/,greedy:!0},{pattern:/"(?:\\[\s\S]|[^\\"])*"/,greedy:!0,inside:{interpolation:t}}],keyword:/\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,"class-member":{pattern:/@(?!\d)\w+/,alias:"variable"}}),e.languages.insertBefore("coffeescript","comment",{"multiline-comment":{pattern:/###[\s\S]+?###/,alias:"comment"},"block-regex":{pattern:/\/{3}[\s\S]*?\/{3}/,alias:"regex",inside:{comment:n,interpolation:t}}}),e.languages.insertBefore("coffeescript","string",{"inline-javascript":{pattern:/`(?:\\[\s\S]|[^\\`])*`/,inside:{delimiter:{pattern:/^`|`$/,alias:"punctuation"},script:{pattern:/[\s\S]+/,alias:"language-javascript",inside:e.languages.javascript}}},"multiline-string":[{pattern:/'''[\s\S]*?'''/,greedy:!0,alias:"string"},{pattern:/"""[\s\S]*?"""/,greedy:!0,alias:"string",inside:{interpolation:t}}]}),e.languages.insertBefore("coffeescript","keyword",{property:/(?!\d)\w+(?=\s*:(?!:))/}),delete e.languages.coffeescript["template-string"],e.languages.coffee=e.languages.coffeescript}(_),function(e){var n=/[*&][^\s[\]{},]+/,t=/!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/,r="(?:"+t.source+"(?:[ \t]+"+n.source+")?|"+n.source+"(?:[ \t]+"+t.source+")?)",_=/(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g,(function(){return/[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source})),a=/"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;function i(e,n){n=(n||"").replace(/m/g,"")+"m";var t=/([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g,(function(){return r})).replace(/<<value>>/g,(function(){return e}));return RegExp(t,n)}e.languages.yaml={scalar:{pattern:RegExp(/([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(/<<prop>>/g,(function(){return r}))),lookbehind:!0,alias:"string"},comment:/#.*/,key:{pattern:RegExp(/((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g,(function(){return r})).replace(/<<key>>/g,(function(){return"(?:"+_+"|"+a+")"}))),lookbehind:!0,greedy:!0,alias:"atrule"},directive:{pattern:/(^[ \t]*)%.+/m,lookbehind:!0,alias:"important"},datetime:{pattern:i(/\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source),lookbehind:!0,alias:"number"},boolean:{pattern:i(/false|true/.source,"i"),lookbehind:!0,alias:"important"},null:{pattern:i(/null|~/.source,"i"),lookbehind:!0,alias:"important"},string:{pattern:i(a),lookbehind:!0,greedy:!0},number:{pattern:i(/[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source,"i"),lookbehind:!0},tag:t,important:n,punctuation:/---|[:[\]{}\-,|>?]|\.\.\./},e.languages.yml=e.languages.yaml}(_),function(e){var n=/(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;function t(e){return e=e.replace(/<inner>/g,(function(){return n})),RegExp(/((?:^|[^\\])(?:\\{2})*)/.source+"(?:"+e+")")}var r=/(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source,_=/\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(/__/g,(function(){return r})),a=/\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;e.languages.markdown=e.languages.extend("markup",{}),e.languages.insertBefore("markdown","prolog",{"front-matter-block":{pattern:/(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,lookbehind:!0,greedy:!0,inside:{punctuation:/^---|---$/,"front-matter":{pattern:/\S+(?:\s+\S+)*/,alias:["yaml","language-yaml"],inside:e.languages.yaml}}},blockquote:{pattern:/^>(?:[\t ]*>)*/m,alias:"punctuation"},table:{pattern:RegExp("^"+_+a+"(?:"+_+")*","m"),inside:{"table-data-rows":{pattern:RegExp("^("+_+a+")(?:"+_+")*$"),lookbehind:!0,inside:{"table-data":{pattern:RegExp(r),inside:e.languages.markdown},punctuation:/\|/}},"table-line":{pattern:RegExp("^("+_+")"+a+"$"),lookbehind:!0,inside:{punctuation:/\||:?-{3,}:?/}},"table-header-row":{pattern:RegExp("^"+_+"$"),inside:{"table-header":{pattern:RegExp(r),alias:"important",inside:e.languages.markdown},punctuation:/\|/}}}},code:[{pattern:/((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,lookbehind:!0,alias:"keyword"},{pattern:/^```[\s\S]*?^```$/m,greedy:!0,inside:{"code-block":{pattern:/^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,lookbehind:!0},"code-language":{pattern:/^(```).+/,lookbehind:!0},punctuation:/```/}}],title:[{pattern:/\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,alias:"important",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\s*)#.+/m,lookbehind:!0,alias:"important",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,lookbehind:!0,alias:"punctuation"},list:{pattern:/(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,lookbehind:!0,alias:"punctuation"},"url-reference":{pattern:/!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,inside:{variable:{pattern:/^(!?\[)[^\]]+/,lookbehind:!0},string:/(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,punctuation:/^[\[\]!:]|[<>]/},alias:"url"},bold:{pattern:t(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^..)[\s\S]+(?=..$)/,lookbehind:!0,inside:{}},punctuation:/\*\*|__/}},italic:{pattern:t(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^.)[\s\S]+(?=.$)/,lookbehind:!0,inside:{}},punctuation:/[*_]/}},strike:{pattern:t(/(~~?)(?:(?!~)<inner>)+\2/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^~~?)[\s\S]+(?=\1$)/,lookbehind:!0,inside:{}},punctuation:/~~?/}},"code-snippet":{pattern:/(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,lookbehind:!0,greedy:!0,alias:["code","keyword"]},url:{pattern:t(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source),lookbehind:!0,greedy:!0,inside:{operator:/^!/,content:{pattern:/(^\[)[^\]]+(?=\])/,lookbehind:!0,inside:{}},variable:{pattern:/(^\][ \t]?\[)[^\]]+(?=\]$)/,lookbehind:!0},url:{pattern:/(^\]\()[^\s)]+/,lookbehind:!0},string:{pattern:/(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,lookbehind:!0}}}}),["url","bold","italic","strike"].forEach((function(n){["url","bold","italic","strike","code-snippet"].forEach((function(t){n!==t&&(e.languages.markdown[n].inside.content.inside[t]=e.languages.markdown[t])}))})),e.hooks.add("after-tokenize",(function(e){"markdown"!==e.language&&"md"!==e.language||function e(n){if(n&&"string"!=typeof n)for(var t=0,r=n.length;t<r;t++){var _=n[t];if("code"===_.type){var a=_.content[1],i=_.content[3];if(a&&i&&"code-language"===a.type&&"code-block"===i.type&&"string"==typeof a.content){var E=a.content.replace(/\b#/g,"sharp").replace(/\b\+\+/g,"pp"),s="language-"+(E=(/[a-z][\w-]*/i.exec(E)||[""])[0].toLowerCase());i.alias?"string"==typeof i.alias?i.alias=[i.alias,s]:i.alias.push(s):i.alias=[s]}}else e(_.content)}}(e.tokens)})),e.hooks.add("wrap",(function(n){if("code-block"===n.type){for(var t="",r=0,_=n.classes.length;r<_;r++){var a=n.classes[r],T=/language-(.+)/.exec(a);if(T){t=T[1];break}}var o,d=e.languages[t];if(d)n.content=e.highlight((o=n.content,o.replace(i,"").replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi,(function(e,n){var t;if("#"===(n=n.toLowerCase())[0])return t="x"===n[1]?parseInt(n.slice(2),16):Number(n.slice(1)),s(t);var r=E[n];return r||e}))),d,t);else if(t&&"none"!==t&&e.plugins.autoloader){var I="md-"+(new Date).valueOf()+"-"+Math.floor(1e16*Math.random());n.attributes.id=I,e.plugins.autoloader.loadLanguages(t,(function(){var n=document.getElementById(I);n&&(n.innerHTML=e.highlight(n.textContent,e.languages[t],t))}))}}}));var i=RegExp(e.languages.markup.tag.pattern.source,"gi"),E={amp:"&",lt:"<",gt:">",quot:'"'},s=String.fromCodePoint||String.fromCharCode;e.languages.md=e.languages.markdown}(_),_.languages.graphql={comment:/#.*/,description:{pattern:/(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i,greedy:!0,alias:"string",inside:{"language-markdown":{pattern:/(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/,lookbehind:!0,inside:_.languages.markdown}}},string:{pattern:/"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/,greedy:!0},number:/(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,boolean:/\b(?:false|true)\b/,variable:/\$[a-z_]\w*/i,directive:{pattern:/@[a-z_]\w*/i,alias:"function"},"attr-name":{pattern:/\b[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,greedy:!0},"atom-input":{pattern:/\b[A-Z]\w*Input\b/,alias:"class-name"},scalar:/\b(?:Boolean|Float|ID|Int|String)\b/,constant:/\b[A-Z][A-Z_\d]*\b/,"class-name":{pattern:/(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*|:\s*|\[)[A-Z_]\w*/,lookbehind:!0},fragment:{pattern:/(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},"definition-mutation":{pattern:/(\bmutation\s+)[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},"definition-query":{pattern:/(\bquery\s+)[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},keyword:/\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/,operator:/[!=|&]|\.{3}/,"property-query":/\w+(?=\s*\()/,object:/\w+(?=\s*\{)/,punctuation:/[!(){}\[\]:=,]/,property:/\w+/},_.hooks.add("after-tokenize",(function(e){if("graphql"===e.language)for(var n=e.tokens.filter((function(e){return"string"!=typeof e&&"comment"!==e.type&&"scalar"!==e.type})),t=0;t<n.length;){var r=n[t++];if("keyword"===r.type&&"mutation"===r.content){var _=[];if(d(["definition-mutation","punctuation"])&&"("===o(1).content){t+=2;var a=I(/^\($/,/^\)$/);if(-1===a)continue;for(;t<a;t++){var i=o(0);"variable"===i.type&&(N(i,"variable-input"),_.push(i.content))}t=a+1}if(d(["punctuation","property-query"])&&"{"===o(0).content&&(t++,N(o(0),"property-mutation"),_.length>0)){var E=I(/^\{$/,/^\}$/);if(-1===E)continue;for(var s=t;s<E;s++){var T=n[s];"variable"===T.type&&_.indexOf(T.content)>=0&&N(T,"variable-input")}}}}function o(e){return n[t+e]}function d(e,n){n=n||0;for(var t=0;t<e.length;t++){var r=o(t+n);if(!r||r.type!==e[t])return!1}return!0}function I(e,r){for(var _=1,a=t;a<n.length;a++){var i=n[a],E=i.content;if("punctuation"===i.type&&"string"==typeof E)if(e.test(E))_++;else if(r.test(E)&&0===--_)return a}return-1}function N(e,n){var t=e.alias;t?Array.isArray(t)||(e.alias=t=[t]):e.alias=t=[],t.push(n)}})),_.languages.sql={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,lookbehind:!0},variable:[{pattern:/@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,greedy:!0},/@[\w.$]+/],string:{pattern:/(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,greedy:!0,lookbehind:!0},identifier:{pattern:/(^|[^@\\])`(?:\\[\s\S]|[^`\\]|``)*`/,greedy:!0,lookbehind:!0,inside:{punctuation:/^`|`$/}},function:/\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,keyword:/\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,boolean:/\b(?:FALSE|NULL|TRUE)\b/i,number:/\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,operator:/[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,punctuation:/[;[\]()`,.]/},function(e){var n=e.languages.javascript["template-string"],t=n.pattern.source,r=n.inside.interpolation,_=r.inside["interpolation-punctuation"],a=r.pattern.source;function i(n,r){if(e.languages[n])return{pattern:RegExp("((?:"+r+")\\s*)"+t),lookbehind:!0,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},"embedded-code":{pattern:/[\s\S]+/,alias:n}}}}function E(e,n){return"___"+n.toUpperCase()+"_"+e+"___"}function s(n,t,r){var _={code:n,grammar:t,language:r};return e.hooks.run("before-tokenize",_),_.tokens=e.tokenize(_.code,_.grammar),e.hooks.run("after-tokenize",_),_.tokens}function T(n){var t={};t["interpolation-punctuation"]=_;var a=e.tokenize(n,t);if(3===a.length){var i=[1,1];i.push.apply(i,s(a[1],e.languages.javascript,"javascript")),a.splice.apply(a,i)}return new e.Token("interpolation",a,r.alias,n)}function o(n,t,r){var _=e.tokenize(n,{interpolation:{pattern:RegExp(a),lookbehind:!0}}),i=0,o={},d=s(_.map((function(e){if("string"==typeof e)return e;for(var t,_=e.content;-1!==n.indexOf(t=E(i++,r)););return o[t]=_,t})).join(""),t,r),I=Object.keys(o);return i=0,function e(n){for(var t=0;t<n.length;t++){if(i>=I.length)return;var r=n[t];if("string"==typeof r||"string"==typeof r.content){var _=I[i],a="string"==typeof r?r:r.content,E=a.indexOf(_);if(-1!==E){++i;var s=a.substring(0,E),d=T(o[_]),N=a.substring(E+_.length),O=[];if(s&&O.push(s),O.push(d),N){var u=[N];e(u),O.push.apply(O,u)}"string"==typeof r?(n.splice.apply(n,[t,1].concat(O)),t+=O.length-1):r.content=O}}else{var R=r.content;Array.isArray(R)?e(R):e([R])}}}(d),new e.Token(r,d,"language-"+r,n)}e.languages.javascript["template-string"]=[i("css",/\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),i("html",/\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=/.source),i("svg",/\bsvg/.source),i("markdown",/\b(?:markdown|md)/.source),i("graphql",/\b(?:gql|graphql(?:\s*\.\s*experimental)?)/.source),i("sql",/\bsql/.source),n].filter(Boolean);var d={javascript:!0,js:!0,typescript:!0,ts:!0,jsx:!0,tsx:!0};function I(e){return"string"==typeof e?e:Array.isArray(e)?e.map(I).join(""):I(e.content)}e.hooks.add("after-tokenize",(function(n){n.language in d&&function n(t){for(var r=0,_=t.length;r<_;r++){var a=t[r];if("string"!=typeof a){var i=a.content;if(Array.isArray(i))if("template-string"===a.type){var E=i[1];if(3===i.length&&"string"!=typeof E&&"embedded-code"===E.type){var s=I(E),T=E.alias,d=Array.isArray(T)?T[0]:T,N=e.languages[d];if(!N)continue;i[1]=o(s,N,d)}}else n(i);else"string"!=typeof i&&n([i])}}}(n.tokens)}))}(_),function(e){e.languages.typescript=e.languages.extend("javascript",{"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,lookbehind:!0,greedy:!0,inside:null},builtin:/\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/}),e.languages.typescript.keyword.push(/\b(?:abstract|declare|is|keyof|readonly|require)\b/,/\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/,/\btype\b(?=\s*(?:[\{*]|$))/),delete e.languages.typescript.parameter,delete e.languages.typescript["literal-property"];var n=e.languages.extend("typescript",{});delete n["class-name"],e.languages.typescript["class-name"].inside=n,e.languages.insertBefore("typescript","function",{decorator:{pattern:/@[$\w\xA0-\uFFFF]+/,inside:{at:{pattern:/^@/,alias:"operator"},function:/^[\s\S]+/}},"generic-function":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,greedy:!0,inside:{function:/^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:n}}}}),e.languages.ts=e.languages.typescript}(_),function(e){function n(e,n){return RegExp(e.replace(/<ID>/g,(function(){return/(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/.source})),n)}e.languages.insertBefore("javascript","function-variable",{"method-variable":{pattern:RegExp("(\\.\\s*)"+e.languages.javascript["function-variable"].pattern.source),lookbehind:!0,alias:["function-variable","method","function","property-access"]}}),e.languages.insertBefore("javascript","function",{method:{pattern:RegExp("(\\.\\s*)"+e.languages.javascript.function.source),lookbehind:!0,alias:["function","property-access"]}}),e.languages.insertBefore("javascript","constant",{"known-class-name":[{pattern:/\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\b/,alias:"class-name"},{pattern:/\b(?:[A-Z]\w*)Error\b/,alias:"class-name"}]}),e.languages.insertBefore("javascript","keyword",{imports:{pattern:n(/(\bimport\b\s*)(?:<ID>(?:\s*,\s*(?:\*\s*as\s+<ID>|\{[^{}]*\}))?|\*\s*as\s+<ID>|\{[^{}]*\})(?=\s*\bfrom\b)/.source),lookbehind:!0,inside:e.languages.javascript},exports:{pattern:n(/(\bexport\b\s*)(?:\*(?:\s*as\s+<ID>)?(?=\s*\bfrom\b)|\{[^{}]*\})/.source),lookbehind:!0,inside:e.languages.javascript}}),e.languages.javascript.keyword.unshift({pattern:/\b(?:as|default|export|from|import)\b/,alias:"module"},{pattern:/\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\b/,alias:"control-flow"},{pattern:/\bnull\b/,alias:["null","nil"]},{pattern:/\bundefined\b/,alias:"nil"}),e.languages.insertBefore("javascript","operator",{spread:{pattern:/\.{3}/,alias:"operator"},arrow:{pattern:/=>/,alias:"operator"}}),e.languages.insertBefore("javascript","punctuation",{"property-access":{pattern:n(/(\.\s*)#?<ID>/.source),lookbehind:!0},"maybe-class-name":{pattern:/(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,lookbehind:!0},dom:{pattern:/\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\b/,alias:"variable"},console:{pattern:/\bconsole(?=\s*\.)/,alias:"class-name"}});for(var t=["function","function-variable","method","method-variable","property-access"],r=0;r<t.length;r++){var _=t[r],a=e.languages.javascript[_];"RegExp"===e.util.type(a)&&(a=e.languages.javascript[_]={pattern:a});var i=a.inside||{};a.inside=i,i["maybe-class-name"]=/^[A-Z][\s\S]*/}}(_),function(e){var n=e.util.clone(e.languages.javascript),t=/(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source,r=/(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source,_=/(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;function a(e,n){return e=e.replace(/<S>/g,(function(){return t})).replace(/<BRACES>/g,(function(){return r})).replace(/<SPREAD>/g,(function(){return _})),RegExp(e,n)}_=a(_).source,e.languages.jsx=e.languages.extend("markup",n),e.languages.jsx.tag.pattern=a(/<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source),e.languages.jsx.tag.inside.tag.pattern=/^<\/?[^\s>\/]*/,e.languages.jsx.tag.inside["attr-value"].pattern=/=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/,e.languages.jsx.tag.inside.tag.inside["class-name"]=/^[A-Z]\w*(?:\.[A-Z]\w*)*$/,e.languages.jsx.tag.inside.comment=n.comment,e.languages.insertBefore("inside","attr-name",{spread:{pattern:a(/<SPREAD>/.source),inside:e.languages.jsx}},e.languages.jsx.tag),e.languages.insertBefore("inside","special-attr",{script:{pattern:a(/=<BRACES>/.source),alias:"language-javascript",inside:{"script-punctuation":{pattern:/^=(?=\{)/,alias:"punctuation"},rest:e.languages.jsx}}},e.languages.jsx.tag);var i=function(e){return e?"string"==typeof e?e:"string"==typeof e.content?e.content:e.content.map(i).join(""):""},E=function(n){for(var t=[],r=0;r<n.length;r++){var _=n[r],a=!1;if("string"!=typeof _&&("tag"===_.type&&_.content[0]&&"tag"===_.content[0].type?"</"===_.content[0].content[0].content?t.length>0&&t[t.length-1].tagName===i(_.content[0].content[1])&&t.pop():"/>"===_.content[_.content.length-1].content||t.push({tagName:i(_.content[0].content[1]),openedBraces:0}):t.length>0&&"punctuation"===_.type&&"{"===_.content?t[t.length-1].openedBraces++:t.length>0&&t[t.length-1].openedBraces>0&&"punctuation"===_.type&&"}"===_.content?t[t.length-1].openedBraces--:a=!0),(a||"string"==typeof _)&&t.length>0&&0===t[t.length-1].openedBraces){var s=i(_);r<n.length-1&&("string"==typeof n[r+1]||"plain-text"===n[r+1].type)&&(s+=i(n[r+1]),n.splice(r+1,1)),r>0&&("string"==typeof n[r-1]||"plain-text"===n[r-1].type)&&(s=i(n[r-1])+s,n.splice(r-1,1),r--),n[r]=new e.Token("plain-text",s,null,s)}_.content&&"string"!=typeof _.content&&E(_.content)}};e.hooks.add("after-tokenize",(function(e){"jsx"!==e.language&&"tsx"!==e.language||E(e.tokens)}))}(_),function(e){e.languages.diff={coord:[/^(?:\*{3}|-{3}|\+{3}).*$/m,/^@@.*@@$/m,/^\d.*$/m]};var n={"deleted-sign":"-","deleted-arrow":"<","inserted-sign":"+","inserted-arrow":">",unchanged:" ",diff:"!"};Object.keys(n).forEach((function(t){var r=n[t],_=[];/^\w+$/.test(t)||_.push(/\w+/.exec(t)[0]),"diff"===t&&_.push("bold"),e.languages.diff[t]={pattern:RegExp("^(?:["+r+"].*(?:\r\n?|\n|(?![\\s\\S])))+","m"),alias:_,inside:{line:{pattern:/(.)(?=[\s\S]).*(?:\r\n?|\n)?/,lookbehind:!0},prefix:{pattern:/[\s\S]/,alias:/\w+/.exec(t)[0]}}}})),Object.defineProperty(e.languages.diff,"PREFIXES",{value:n})}(_),_.languages.git={comment:/^#.*/m,deleted:/^[-\u2013].*/m,inserted:/^\+.*/m,string:/("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,command:{pattern:/^.*\$ git .*$/m,inside:{parameter:/\s--?\w+/}},coord:/^@@.*@@$/m,"commit-sha1":/^commit \w{40}$/m},_.languages.go=_.languages.extend("clike",{string:{pattern:/(^|[^\\])"(?:\\.|[^"\\\r\n])*"|`[^`]*`/,lookbehind:!0,greedy:!0},keyword:/\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,boolean:/\b(?:_|false|iota|nil|true)\b/,number:[/\b0(?:b[01_]+|o[0-7_]+)i?\b/i,/\b0x(?:[a-f\d_]+(?:\.[a-f\d_]*)?|\.[a-f\d_]+)(?:p[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,/(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?[\d_]+)?i?(?!\w)/i],operator:/[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,builtin:/\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\b/}),_.languages.insertBefore("go","string",{char:{pattern:/'(?:\\.|[^'\\\r\n]){0,10}'/,greedy:!0}}),delete _.languages.go["class-name"],function(e){function n(e,n){return"___"+e.toUpperCase()+n+"___"}Object.defineProperties(e.languages["markup-templating"]={},{buildPlaceholders:{value:function(t,r,_,a){if(t.language===r){var i=t.tokenStack=[];t.code=t.code.replace(_,(function(e){if("function"==typeof a&&!a(e))return e;for(var _,E=i.length;-1!==t.code.indexOf(_=n(r,E));)++E;return i[E]=e,_})),t.grammar=e.languages.markup}}},tokenizePlaceholders:{value:function(t,r){if(t.language===r&&t.tokenStack){t.grammar=e.languages[r];var _=0,a=Object.keys(t.tokenStack);!function i(E){for(var s=0;s<E.length&&!(_>=a.length);s++){var T=E[s];if("string"==typeof T||T.content&&"string"==typeof T.content){var o=a[_],d=t.tokenStack[o],I="string"==typeof T?T:T.content,N=n(r,o),O=I.indexOf(N);if(O>-1){++_;var u=I.substring(0,O),R=new e.Token(r,e.tokenize(d,t.grammar),"language-"+r,d),A=I.substring(O+N.length),D=[];u&&D.push.apply(D,i([u])),D.push(R),A&&D.push.apply(D,i([A])),"string"==typeof T?E.splice.apply(E,[s,1].concat(D)):T.content=D}}else T.content&&i(T.content)}return E}(t.tokens)}}}})}(_),function(e){e.languages.handlebars={comment:/\{\{![\s\S]*?\}\}/,delimiter:{pattern:/^\{\{\{?|\}\}\}?$/,alias:"punctuation"},string:/(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][+-]?\d+)?/,boolean:/\b(?:false|true)\b/,block:{pattern:/^(\s*(?:~\s*)?)[#\/]\S+?(?=\s*(?:~\s*)?$|\s)/,lookbehind:!0,alias:"keyword"},brackets:{pattern:/\[[^\]]+\]/,inside:{punctuation:/\[|\]/,variable:/[\s\S]+/}},punctuation:/[!"#%&':()*+,.\/;<=>@\[\\\]^`{|}~]/,variable:/[^!"#%&'()*+,\/;<=>@\[\\\]^`{|}~\s]+/},e.hooks.add("before-tokenize",(function(n){e.languages["markup-templating"].buildPlaceholders(n,"handlebars",/\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g)})),e.hooks.add("after-tokenize",(function(n){e.languages["markup-templating"].tokenizePlaceholders(n,"handlebars")})),e.languages.hbs=e.languages.handlebars}(_),_.languages.json={property:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,lookbehind:!0,greedy:!0},string:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,lookbehind:!0,greedy:!0},comment:{pattern:/\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},number:/-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,punctuation:/[{}[\],]/,operator:/:/,boolean:/\b(?:false|true)\b/,null:{pattern:/\bnull\b/,alias:"keyword"}},_.languages.webmanifest=_.languages.json,_.languages.less=_.languages.extend("css",{comment:[/\/\*[\s\S]*?\*\//,{pattern:/(^|[^\\])\/\/.*/,lookbehind:!0}],atrule:{pattern:/@[\w-](?:\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};\s]|\s+(?!\s))*?(?=\s*\{)/,inside:{punctuation:/[:()]/}},selector:{pattern:/(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};@\s]|\s+(?!\s))*?(?=\s*\{)/,inside:{variable:/@+[\w-]+/}},property:/(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/,operator:/[+\-*\/]/}),_.languages.insertBefore("less","property",{variable:[{pattern:/@[\w-]+\s*:/,inside:{punctuation:/:/}},/@@?[\w-]+/],"mixin-usage":{pattern:/([{;]\s*)[.#](?!\d)[\w-].*?(?=[(;])/,lookbehind:!0,alias:"function"}}),_.languages.makefile={comment:{pattern:/(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,lookbehind:!0},string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"builtin-target":{pattern:/\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,alias:"builtin"},target:{pattern:/^(?:[^:=\s]|[ \t]+(?![\s:]))+(?=\s*:(?!=))/m,alias:"symbol",inside:{variable:/\$+(?:(?!\$)[^(){}:#=\s]+|(?=[({]))/}},variable:/\$+(?:(?!\$)[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,keyword:/-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,function:{pattern:/(\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \t])/,lookbehind:!0},operator:/(?:::|[?:+!])?=|[|@]/,punctuation:/[:;(){}]/},_.languages.objectivec=_.languages.extend("c",{string:{pattern:/@?"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0},keyword:/\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,operator:/-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/}),delete _.languages.objectivec["class-name"],_.languages.objc=_.languages.objectivec,_.languages.ocaml={comment:{pattern:/\(\*[\s\S]*?\*\)/,greedy:!0},char:{pattern:/'(?:[^\\\r\n']|\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,greedy:!0},string:[{pattern:/"(?:\\(?:[\s\S]|\r\n)|[^\\\r\n"])*"/,greedy:!0},{pattern:/\{([a-z_]*)\|[\s\S]*?\|\1\}/,greedy:!0}],number:[/\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\b/i,/\b0x[a-f0-9][a-f0-9_]*(?:\.[a-f0-9_]*)?(?:p[+-]?\d[\d_]*)?(?!\w)/i,/\b\d[\d_]*(?:\.[\d_]*)?(?:e[+-]?\d[\d_]*)?(?!\w)/i],directive:{pattern:/\B#\w+/,alias:"property"},label:{pattern:/\B~\w+/,alias:"property"},"type-variable":{pattern:/\B'\w+/,alias:"function"},variant:{pattern:/`\w+/,alias:"symbol"},keyword:/\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\b/,boolean:/\b(?:false|true)\b/,"operator-like-punctuation":{pattern:/\[[<>|]|[>|]\]|\{<|>\}/,alias:"punctuation"},operator:/\.[.~]|:[=>]|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\b/,punctuation:/;;|::|[(){}\[\].,:;#]|\b_\b/},_.languages.python={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0,greedy:!0},"string-interpolation":{pattern:/(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,lookbehind:!0,inside:{"format-spec":{pattern:/(:)[^:(){}]+(?=\}$)/,lookbehind:!0},"conversion-option":{pattern:/![sra](?=[:}]$)/,alias:"punctuation"},rest:null}},string:/[\s\S]+/}},"triple-quoted-string":{pattern:/(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,greedy:!0,alias:"string"},string:{pattern:/(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,greedy:!0},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bclass\s+)\w+/i,lookbehind:!0},decorator:{pattern:/(^[\t ]*)@\w+(?:\.\w+)*/m,lookbehind:!0,alias:["annotation","punctuation"],inside:{punctuation:/\./}},keyword:/\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,boolean:/\b(?:False|None|True)\b/,number:/\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,operator:/[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\];(),.:]/},_.languages.python["string-interpolation"].inside.interpolation.inside.rest=_.languages.python,_.languages.py=_.languages.python,_.languages.reason=_.languages.extend("clike",{string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,greedy:!0},"class-name":/\b[A-Z]\w*/,keyword:/\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,operator:/\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:asr|land|lor|lsl|lsr|lxor|mod)\b/}),_.languages.insertBefore("reason","class-name",{char:{pattern:/'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,greedy:!0},constructor:/\b[A-Z]\w*\b(?!\s*\.)/,label:{pattern:/\b[a-z]\w*(?=::)/,alias:"symbol"}}),delete _.languages.reason.function,function(e){e.languages.sass=e.languages.extend("css",{comment:{pattern:/^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t].+)*/m,lookbehind:!0,greedy:!0}}),e.languages.insertBefore("sass","atrule",{"atrule-line":{pattern:/^(?:[ \t]*)[@+=].+/m,greedy:!0,inside:{atrule:/(?:@[\w-]+|[+=])/}}}),delete e.languages.sass.atrule;var n=/\$[-\w]+|#\{\$[-\w]+\}/,t=[/[+*\/%]|[=!]=|<=?|>=?|\b(?:and|not|or)\b/,{pattern:/(\s)-(?=\s)/,lookbehind:!0}];e.languages.insertBefore("sass","property",{"variable-line":{pattern:/^[ \t]*\$.+/m,greedy:!0,inside:{punctuation:/:/,variable:n,operator:t}},"property-line":{pattern:/^[ \t]*(?:[^:\s]+ *:.*|:[^:\s].*)/m,greedy:!0,inside:{property:[/[^:\s]+(?=\s*:)/,{pattern:/(:)[^:\s]+/,lookbehind:!0}],punctuation:/:/,variable:n,operator:t,important:e.languages.sass.important}}}),delete e.languages.sass.property,delete e.languages.sass.important,e.languages.insertBefore("sass","punctuation",{selector:{pattern:/^([ \t]*)\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*)*/m,lookbehind:!0,greedy:!0}})}(_),_.languages.scss=_.languages.extend("css",{comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},atrule:{pattern:/@[\w-](?:\([^()]+\)|[^()\s]|\s+(?!\s))*?(?=\s+[{;])/,inside:{rule:/@[\w-]+/}},url:/(?:[-a-z]+-)?url(?=\()/i,selector:{pattern:/(?=\S)[^@;{}()]?(?:[^@;{}()\s]|\s+(?!\s)|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}][^:{}]*[:{][^}]))/,inside:{parent:{pattern:/&/,alias:"important"},placeholder:/%[-\w]+/,variable:/\$[-\w]+|#\{\$[-\w]+\}/}},property:{pattern:/(?:[-\w]|\$[-\w]|#\{\$[-\w]+\})+(?=\s*:)/,inside:{variable:/\$[-\w]+|#\{\$[-\w]+\}/}}}),_.languages.insertBefore("scss","atrule",{keyword:[/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\b/i,{pattern:/( )(?:from|through)(?= )/,lookbehind:!0}]}),_.languages.insertBefore("scss","important",{variable:/\$[-\w]+|#\{\$[-\w]+\}/}),_.languages.insertBefore("scss","function",{"module-modifier":{pattern:/\b(?:as|hide|show|with)\b/i,alias:"keyword"},placeholder:{pattern:/%[-\w]+/,alias:"selector"},statement:{pattern:/\B!(?:default|optional)\b/i,alias:"keyword"},boolean:/\b(?:false|true)\b/,null:{pattern:/\bnull\b/,alias:"keyword"},operator:{pattern:/(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|not|or)(?=\s)/,lookbehind:!0}}),_.languages.scss.atrule.inside.rest=_.languages.scss,function(e){var n={pattern:/(\b\d+)(?:%|[a-z]+)/,lookbehind:!0},t={pattern:/(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,lookbehind:!0},r={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},url:{pattern:/\burl\((["']?).*?\1\)/i,greedy:!0},string:{pattern:/("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,greedy:!0},interpolation:null,func:null,important:/\B!(?:important|optional)\b/i,keyword:{pattern:/(^|\s+)(?:(?:else|for|if|return|unless)(?=\s|$)|@[\w-]+)/,lookbehind:!0},hexcode:/#[\da-f]{3,6}/i,color:[/\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\b/i,{pattern:/\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,inside:{unit:n,number:t,function:/[\w-]+(?=\()/,punctuation:/[(),]/}}],entity:/\\[\da-f]{1,8}/i,unit:n,boolean:/\b(?:false|true)\b/,operator:[/~|[+!\/%<>?=]=?|[-:]=|\*[*=]?|\.{2,3}|&&|\|\||\B-\B|\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\b/],number:t,punctuation:/[{}()\[\];:,]/};r.interpolation={pattern:/\{[^\r\n}:]+\}/,alias:"variable",inside:{delimiter:{pattern:/^\{|\}$/,alias:"punctuation"},rest:r}},r.func={pattern:/[\w-]+\([^)]*\).*/,inside:{function:/^[^(]+/,rest:r}},e.languages.stylus={"atrule-declaration":{pattern:/(^[ \t]*)@.+/m,lookbehind:!0,inside:{atrule:/^@[\w-]+/,rest:r}},"variable-declaration":{pattern:/(^[ \t]*)[\w$-]+\s*.?=[ \t]*(?:\{[^{}]*\}|\S.*|$)/m,lookbehind:!0,inside:{variable:/^\S+/,rest:r}},statement:{pattern:/(^[ \t]*)(?:else|for|if|return|unless)[ \t].+/m,lookbehind:!0,inside:{keyword:/^\S+/,rest:r}},"property-declaration":{pattern:/((?:^|\{)([ \t]*))(?:[\w-]|\{[^}\r\n]+\})+(?:\s*:\s*|[ \t]+)(?!\s)[^{\r\n]*(?:;|[^{\r\n,]$(?!(?:\r?\n|\r)(?:\{|\2[ \t])))/m,lookbehind:!0,inside:{property:{pattern:/^[^\s:]+/,inside:{interpolation:r.interpolation}},rest:r}},selector:{pattern:/(^[ \t]*)(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)(?:(?:\r?\n|\r)(?:\1(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)))*(?:,$|\{|(?=(?:\r?\n|\r)(?:\{|\1[ \t])))/m,lookbehind:!0,inside:{interpolation:r.interpolation,comment:r.comment,punctuation:/[{},]/}},func:r.func,string:r.string,comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0,greedy:!0},interpolation:r.interpolation,punctuation:/[{}()\[\];:.]/}}(_),function(e){var n=e.util.clone(e.languages.typescript);e.languages.tsx=e.languages.extend("jsx",n),delete e.languages.tsx.parameter,delete e.languages.tsx["literal-property"];var t=e.languages.tsx.tag;t.pattern=RegExp(/(^|[^\w$]|(?=<\/))/.source+"(?:"+t.pattern.source+")",t.pattern.flags),t.lookbehind=!0}(_),_.languages.wasm={comment:[/\(;[\s\S]*?;\)/,{pattern:/;;.*/,greedy:!0}],string:{pattern:/"(?:\\[\s\S]|[^"\\])*"/,greedy:!0},keyword:[{pattern:/\b(?:align|offset)=/,inside:{operator:/=/}},{pattern:/\b(?:(?:f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))?|memory\.(?:grow|size))\b/,inside:{punctuation:/\./}},/\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\b/],variable:/\$[\w!#$%&'*+\-./:<=>?@\\^`|~]+/,number:/[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/,punctuation:/[()]/};const a=_},29901:e=>{e.exports&&(e.exports={core:{meta:{path:"components/prism-core.js",option:"mandatory"},core:"Core"},themes:{meta:{path:"themes/{id}.css",link:"index.html?theme={id}",exclusive:!0},prism:{title:"Default",option:"default"},"prism-dark":"Dark","prism-funky":"Funky","prism-okaidia":{title:"Okaidia",owner:"ocodia"},"prism-twilight":{title:"Twilight",owner:"remybach"},"prism-coy":{title:"Coy",owner:"tshedor"},"prism-solarizedlight":{title:"Solarized Light",owner:"hectormatos2011 "},"prism-tomorrow":{title:"Tomorrow Night",owner:"Rosey"}},languages:{meta:{path:"components/prism-{id}",noCSS:!0,examplesPath:"examples/prism-{id}",addCheckAll:!0},markup:{title:"Markup",alias:["html","xml","svg","mathml","ssml","atom","rss"],aliasTitles:{html:"HTML",xml:"XML",svg:"SVG",mathml:"MathML",ssml:"SSML",atom:"Atom",rss:"RSS"},option:"default"},css:{title:"CSS",option:"default",modify:"markup"},clike:{title:"C-like",option:"default"},javascript:{title:"JavaScript",require:"clike",modify:"markup",optional:"regex",alias:"js",option:"default"},abap:{title:"ABAP",owner:"dellagustin"},abnf:{title:"ABNF",owner:"RunDevelopment"},actionscript:{title:"ActionScript",require:"javascript",modify:"markup",owner:"Golmote"},ada:{title:"Ada",owner:"Lucretia"},agda:{title:"Agda",owner:"xy-ren"},al:{title:"AL",owner:"RunDevelopment"},antlr4:{title:"ANTLR4",alias:"g4",owner:"RunDevelopment"},apacheconf:{title:"Apache Configuration",owner:"GuiTeK"},apex:{title:"Apex",require:["clike","sql"],owner:"RunDevelopment"},apl:{title:"APL",owner:"ngn"},applescript:{title:"AppleScript",owner:"Golmote"},aql:{title:"AQL",owner:"RunDevelopment"},arduino:{title:"Arduino",require:"cpp",alias:"ino",owner:"dkern"},arff:{title:"ARFF",owner:"Golmote"},armasm:{title:"ARM Assembly",alias:"arm-asm",owner:"RunDevelopment"},arturo:{title:"Arturo",alias:"art",optional:["bash","css","javascript","markup","markdown","sql"],owner:"drkameleon"},asciidoc:{alias:"adoc",title:"AsciiDoc",owner:"Golmote"},aspnet:{title:"ASP.NET (C#)",require:["markup","csharp"],owner:"nauzilus"},asm6502:{title:"6502 Assembly",owner:"kzurawel"},asmatmel:{title:"Atmel AVR Assembly",owner:"cerkit"},autohotkey:{title:"AutoHotkey",owner:"aviaryan"},autoit:{title:"AutoIt",owner:"Golmote"},avisynth:{title:"AviSynth",alias:"avs",owner:"Zinfidel"},"avro-idl":{title:"Avro IDL",alias:"avdl",owner:"RunDevelopment"},awk:{title:"AWK",alias:"gawk",aliasTitles:{gawk:"GAWK"},owner:"RunDevelopment"},bash:{title:"Bash",alias:"shell",aliasTitles:{shell:"Shell"},owner:"zeitgeist87"},basic:{title:"BASIC",owner:"Golmote"},batch:{title:"Batch",owner:"Golmote"},bbcode:{title:"BBcode",alias:"shortcode",aliasTitles:{shortcode:"Shortcode"},owner:"RunDevelopment"},bicep:{title:"Bicep",owner:"johnnyreilly"},birb:{title:"Birb",require:"clike",owner:"Calamity210"},bison:{title:"Bison",require:"c",owner:"Golmote"},bnf:{title:"BNF",alias:"rbnf",aliasTitles:{rbnf:"RBNF"},owner:"RunDevelopment"},brainfuck:{title:"Brainfuck",owner:"Golmote"},brightscript:{title:"BrightScript",owner:"RunDevelopment"},bro:{title:"Bro",owner:"wayward710"},bsl:{title:"BSL (1C:Enterprise)",alias:"oscript",aliasTitles:{oscript:"OneScript"},owner:"Diversus23"},c:{title:"C",require:"clike",owner:"zeitgeist87"},csharp:{title:"C#",require:"clike",alias:["cs","dotnet"],owner:"mvalipour"},cpp:{title:"C++",require:"c",owner:"zeitgeist87"},cfscript:{title:"CFScript",require:"clike",alias:"cfc",owner:"mjclemente"},chaiscript:{title:"ChaiScript",require:["clike","cpp"],owner:"RunDevelopment"},cil:{title:"CIL",owner:"sbrl"},clojure:{title:"Clojure",owner:"troglotit"},cmake:{title:"CMake",owner:"mjrogozinski"},cobol:{title:"COBOL",owner:"RunDevelopment"},coffeescript:{title:"CoffeeScript",require:"javascript",alias:"coffee",owner:"R-osey"},concurnas:{title:"Concurnas",alias:"conc",owner:"jasontatton"},csp:{title:"Content-Security-Policy",owner:"ScottHelme"},cooklang:{title:"Cooklang",owner:"ahue"},coq:{title:"Coq",owner:"RunDevelopment"},crystal:{title:"Crystal",require:"ruby",owner:"MakeNowJust"},"css-extras":{title:"CSS Extras",require:"css",modify:"css",owner:"milesj"},csv:{title:"CSV",owner:"RunDevelopment"},cue:{title:"CUE",owner:"RunDevelopment"},cypher:{title:"Cypher",owner:"RunDevelopment"},d:{title:"D",require:"clike",owner:"Golmote"},dart:{title:"Dart",require:"clike",owner:"Golmote"},dataweave:{title:"DataWeave",owner:"machaval"},dax:{title:"DAX",owner:"peterbud"},dhall:{title:"Dhall",owner:"RunDevelopment"},diff:{title:"Diff",owner:"uranusjr"},django:{title:"Django/Jinja2",require:"markup-templating",alias:"jinja2",owner:"romanvm"},"dns-zone-file":{title:"DNS zone file",owner:"RunDevelopment",alias:"dns-zone"},docker:{title:"Docker",alias:"dockerfile",owner:"JustinBeckwith"},dot:{title:"DOT (Graphviz)",alias:"gv",optional:"markup",owner:"RunDevelopment"},ebnf:{title:"EBNF",owner:"RunDevelopment"},editorconfig:{title:"EditorConfig",owner:"osipxd"},eiffel:{title:"Eiffel",owner:"Conaclos"},ejs:{title:"EJS",require:["javascript","markup-templating"],owner:"RunDevelopment",alias:"eta",aliasTitles:{eta:"Eta"}},elixir:{title:"Elixir",owner:"Golmote"},elm:{title:"Elm",owner:"zwilias"},etlua:{title:"Embedded Lua templating",require:["lua","markup-templating"],owner:"RunDevelopment"},erb:{title:"ERB",require:["ruby","markup-templating"],owner:"Golmote"},erlang:{title:"Erlang",owner:"Golmote"},"excel-formula":{title:"Excel Formula",alias:["xlsx","xls"],owner:"RunDevelopment"},fsharp:{title:"F#",require:"clike",owner:"simonreynolds7"},factor:{title:"Factor",owner:"catb0t"},false:{title:"False",owner:"edukisto"},"firestore-security-rules":{title:"Firestore security rules",require:"clike",owner:"RunDevelopment"},flow:{title:"Flow",require:"javascript",owner:"Golmote"},fortran:{title:"Fortran",owner:"Golmote"},ftl:{title:"FreeMarker Template Language",require:"markup-templating",owner:"RunDevelopment"},gml:{title:"GameMaker Language",alias:"gamemakerlanguage",require:"clike",owner:"LiarOnce"},gap:{title:"GAP (CAS)",owner:"RunDevelopment"},gcode:{title:"G-code",owner:"RunDevelopment"},gdscript:{title:"GDScript",owner:"RunDevelopment"},gedcom:{title:"GEDCOM",owner:"Golmote"},gettext:{title:"gettext",alias:"po",owner:"RunDevelopment"},gherkin:{title:"Gherkin",owner:"hason"},git:{title:"Git",owner:"lgiraudel"},glsl:{title:"GLSL",require:"c",owner:"Golmote"},gn:{title:"GN",alias:"gni",owner:"RunDevelopment"},"linker-script":{title:"GNU Linker Script",alias:"ld",owner:"RunDevelopment"},go:{title:"Go",require:"clike",owner:"arnehormann"},"go-module":{title:"Go module",alias:"go-mod",owner:"RunDevelopment"},graphql:{title:"GraphQL",optional:"markdown",owner:"Golmote"},groovy:{title:"Groovy",require:"clike",owner:"robfletcher"},haml:{title:"Haml",require:"ruby",optional:["css","css-extras","coffeescript","erb","javascript","less","markdown","scss","textile"],owner:"Golmote"},handlebars:{title:"Handlebars",require:"markup-templating",alias:["hbs","mustache"],aliasTitles:{mustache:"Mustache"},owner:"Golmote"},haskell:{title:"Haskell",alias:"hs",owner:"bholst"},haxe:{title:"Haxe",require:"clike",optional:"regex",owner:"Golmote"},hcl:{title:"HCL",owner:"outsideris"},hlsl:{title:"HLSL",require:"c",owner:"RunDevelopment"},hoon:{title:"Hoon",owner:"matildepark"},http:{title:"HTTP",optional:["csp","css","hpkp","hsts","javascript","json","markup","uri"],owner:"danielgtaylor"},hpkp:{title:"HTTP Public-Key-Pins",owner:"ScottHelme"},hsts:{title:"HTTP Strict-Transport-Security",owner:"ScottHelme"},ichigojam:{title:"IchigoJam",owner:"BlueCocoa"},icon:{title:"Icon",owner:"Golmote"},"icu-message-format":{title:"ICU Message Format",owner:"RunDevelopment"},idris:{title:"Idris",alias:"idr",owner:"KeenS",require:"haskell"},ignore:{title:".ignore",owner:"osipxd",alias:["gitignore","hgignore","npmignore"],aliasTitles:{gitignore:".gitignore",hgignore:".hgignore",npmignore:".npmignore"}},inform7:{title:"Inform 7",owner:"Golmote"},ini:{title:"Ini",owner:"aviaryan"},io:{title:"Io",owner:"AlesTsurko"},j:{title:"J",owner:"Golmote"},java:{title:"Java",require:"clike",owner:"sherblot"},javadoc:{title:"JavaDoc",require:["markup","java","javadoclike"],modify:"java",optional:"scala",owner:"RunDevelopment"},javadoclike:{title:"JavaDoc-like",modify:["java","javascript","php"],owner:"RunDevelopment"},javastacktrace:{title:"Java stack trace",owner:"RunDevelopment"},jexl:{title:"Jexl",owner:"czosel"},jolie:{title:"Jolie",require:"clike",owner:"thesave"},jq:{title:"JQ",owner:"RunDevelopment"},jsdoc:{title:"JSDoc",require:["javascript","javadoclike","typescript"],modify:"javascript",optional:["actionscript","coffeescript"],owner:"RunDevelopment"},"js-extras":{title:"JS Extras",require:"javascript",modify:"javascript",optional:["actionscript","coffeescript","flow","n4js","typescript"],owner:"RunDevelopment"},json:{title:"JSON",alias:"webmanifest",aliasTitles:{webmanifest:"Web App Manifest"},owner:"CupOfTea696"},json5:{title:"JSON5",require:"json",owner:"RunDevelopment"},jsonp:{title:"JSONP",require:"json",owner:"RunDevelopment"},jsstacktrace:{title:"JS stack trace",owner:"sbrl"},"js-templates":{title:"JS Templates",require:"javascript",modify:"javascript",optional:["css","css-extras","graphql","markdown","markup","sql"],owner:"RunDevelopment"},julia:{title:"Julia",owner:"cdagnino"},keepalived:{title:"Keepalived Configure",owner:"dev-itsheng"},keyman:{title:"Keyman",owner:"mcdurdin"},kotlin:{title:"Kotlin",alias:["kt","kts"],aliasTitles:{kts:"Kotlin Script"},require:"clike",owner:"Golmote"},kumir:{title:"KuMir (\u041a\u0443\u041c\u0438\u0440)",alias:"kum",owner:"edukisto"},kusto:{title:"Kusto",owner:"RunDevelopment"},latex:{title:"LaTeX",alias:["tex","context"],aliasTitles:{tex:"TeX",context:"ConTeXt"},owner:"japborst"},latte:{title:"Latte",require:["clike","markup-templating","php"],owner:"nette"},less:{title:"Less",require:"css",optional:"css-extras",owner:"Golmote"},lilypond:{title:"LilyPond",require:"scheme",alias:"ly",owner:"RunDevelopment"},liquid:{title:"Liquid",require:"markup-templating",owner:"cinhtau"},lisp:{title:"Lisp",alias:["emacs","elisp","emacs-lisp"],owner:"JuanCaicedo"},livescript:{title:"LiveScript",owner:"Golmote"},llvm:{title:"LLVM IR",owner:"porglezomp"},log:{title:"Log file",optional:"javastacktrace",owner:"RunDevelopment"},lolcode:{title:"LOLCODE",owner:"Golmote"},lua:{title:"Lua",owner:"Golmote"},magma:{title:"Magma (CAS)",owner:"RunDevelopment"},makefile:{title:"Makefile",owner:"Golmote"},markdown:{title:"Markdown",require:"markup",optional:"yaml",alias:"md",owner:"Golmote"},"markup-templating":{title:"Markup templating",require:"markup",owner:"Golmote"},mata:{title:"Mata",owner:"RunDevelopment"},matlab:{title:"MATLAB",owner:"Golmote"},maxscript:{title:"MAXScript",owner:"RunDevelopment"},mel:{title:"MEL",owner:"Golmote"},mermaid:{title:"Mermaid",owner:"RunDevelopment"},mizar:{title:"Mizar",owner:"Golmote"},mongodb:{title:"MongoDB",owner:"airs0urce",require:"javascript"},monkey:{title:"Monkey",owner:"Golmote"},moonscript:{title:"MoonScript",alias:"moon",owner:"RunDevelopment"},n1ql:{title:"N1QL",owner:"TMWilds"},n4js:{title:"N4JS",require:"javascript",optional:"jsdoc",alias:"n4jsd",owner:"bsmith-n4"},"nand2tetris-hdl":{title:"Nand To Tetris HDL",owner:"stephanmax"},naniscript:{title:"Naninovel Script",owner:"Elringus",alias:"nani"},nasm:{title:"NASM",owner:"rbmj"},neon:{title:"NEON",owner:"nette"},nevod:{title:"Nevod",owner:"nezaboodka"},nginx:{title:"nginx",owner:"volado"},nim:{title:"Nim",owner:"Golmote"},nix:{title:"Nix",owner:"Golmote"},nsis:{title:"NSIS",owner:"idleberg"},objectivec:{title:"Objective-C",require:"c",alias:"objc",owner:"uranusjr"},ocaml:{title:"OCaml",owner:"Golmote"},odin:{title:"Odin",owner:"edukisto"},opencl:{title:"OpenCL",require:"c",modify:["c","cpp"],owner:"Milania1"},openqasm:{title:"OpenQasm",alias:"qasm",owner:"RunDevelopment"},oz:{title:"Oz",owner:"Golmote"},parigp:{title:"PARI/GP",owner:"Golmote"},parser:{title:"Parser",require:"markup",owner:"Golmote"},pascal:{title:"Pascal",alias:"objectpascal",aliasTitles:{objectpascal:"Object Pascal"},owner:"Golmote"},pascaligo:{title:"Pascaligo",owner:"DefinitelyNotAGoat"},psl:{title:"PATROL Scripting Language",owner:"bertysentry"},pcaxis:{title:"PC-Axis",alias:"px",owner:"RunDevelopment"},peoplecode:{title:"PeopleCode",alias:"pcode",owner:"RunDevelopment"},perl:{title:"Perl",owner:"Golmote"},php:{title:"PHP",require:"markup-templating",owner:"milesj"},phpdoc:{title:"PHPDoc",require:["php","javadoclike"],modify:"php",owner:"RunDevelopment"},"php-extras":{title:"PHP Extras",require:"php",modify:"php",owner:"milesj"},"plant-uml":{title:"PlantUML",alias:"plantuml",owner:"RunDevelopment"},plsql:{title:"PL/SQL",require:"sql",owner:"Golmote"},powerquery:{title:"PowerQuery",alias:["pq","mscript"],owner:"peterbud"},powershell:{title:"PowerShell",owner:"nauzilus"},processing:{title:"Processing",require:"clike",owner:"Golmote"},prolog:{title:"Prolog",owner:"Golmote"},promql:{title:"PromQL",owner:"arendjr"},properties:{title:".properties",owner:"Golmote"},protobuf:{title:"Protocol Buffers",require:"clike",owner:"just-boris"},pug:{title:"Pug",require:["markup","javascript"],optional:["coffeescript","ejs","handlebars","less","livescript","markdown","scss","stylus","twig"],owner:"Golmote"},puppet:{title:"Puppet",owner:"Golmote"},pure:{title:"Pure",optional:["c","cpp","fortran"],owner:"Golmote"},purebasic:{title:"PureBasic",require:"clike",alias:"pbfasm",owner:"HeX0R101"},purescript:{title:"PureScript",require:"haskell",alias:"purs",owner:"sriharshachilakapati"},python:{title:"Python",alias:"py",owner:"multipetros"},qsharp:{title:"Q#",require:"clike",alias:"qs",owner:"fedonman"},q:{title:"Q (kdb+ database)",owner:"Golmote"},qml:{title:"QML",require:"javascript",owner:"RunDevelopment"},qore:{title:"Qore",require:"clike",owner:"temnroegg"},r:{title:"R",owner:"Golmote"},racket:{title:"Racket",require:"scheme",alias:"rkt",owner:"RunDevelopment"},cshtml:{title:"Razor C#",alias:"razor",require:["markup","csharp"],optional:["css","css-extras","javascript","js-extras"],owner:"RunDevelopment"},jsx:{title:"React JSX",require:["markup","javascript"],optional:["jsdoc","js-extras","js-templates"],owner:"vkbansal"},tsx:{title:"React TSX",require:["jsx","typescript"]},reason:{title:"Reason",require:"clike",owner:"Golmote"},regex:{title:"Regex",owner:"RunDevelopment"},rego:{title:"Rego",owner:"JordanSh"},renpy:{title:"Ren'py",alias:"rpy",owner:"HyuchiaDiego"},rescript:{title:"ReScript",alias:"res",owner:"vmarcosp"},rest:{title:"reST (reStructuredText)",owner:"Golmote"},rip:{title:"Rip",owner:"ravinggenius"},roboconf:{title:"Roboconf",owner:"Golmote"},robotframework:{title:"Robot Framework",alias:"robot",owner:"RunDevelopment"},ruby:{title:"Ruby",require:"clike",alias:"rb",owner:"samflores"},rust:{title:"Rust",owner:"Golmote"},sas:{title:"SAS",optional:["groovy","lua","sql"],owner:"Golmote"},sass:{title:"Sass (Sass)",require:"css",optional:"css-extras",owner:"Golmote"},scss:{title:"Sass (Scss)",require:"css",optional:"css-extras",owner:"MoOx"},scala:{title:"Scala",require:"java",owner:"jozic"},scheme:{title:"Scheme",owner:"bacchus123"},"shell-session":{title:"Shell session",require:"bash",alias:["sh-session","shellsession"],owner:"RunDevelopment"},smali:{title:"Smali",owner:"RunDevelopment"},smalltalk:{title:"Smalltalk",owner:"Golmote"},smarty:{title:"Smarty",require:"markup-templating",optional:"php",owner:"Golmote"},sml:{title:"SML",alias:"smlnj",aliasTitles:{smlnj:"SML/NJ"},owner:"RunDevelopment"},solidity:{title:"Solidity (Ethereum)",alias:"sol",require:"clike",owner:"glachaud"},"solution-file":{title:"Solution file",alias:"sln",owner:"RunDevelopment"},soy:{title:"Soy (Closure Template)",require:"markup-templating",owner:"Golmote"},sparql:{title:"SPARQL",require:"turtle",owner:"Triply-Dev",alias:"rq"},"splunk-spl":{title:"Splunk SPL",owner:"RunDevelopment"},sqf:{title:"SQF: Status Quo Function (Arma 3)",require:"clike",owner:"RunDevelopment"},sql:{title:"SQL",owner:"multipetros"},squirrel:{title:"Squirrel",require:"clike",owner:"RunDevelopment"},stan:{title:"Stan",owner:"RunDevelopment"},stata:{title:"Stata Ado",require:["mata","java","python"],owner:"RunDevelopment"},iecst:{title:"Structured Text (IEC 61131-3)",owner:"serhioromano"},stylus:{title:"Stylus",owner:"vkbansal"},supercollider:{title:"SuperCollider",alias:"sclang",owner:"RunDevelopment"},swift:{title:"Swift",owner:"chrischares"},systemd:{title:"Systemd configuration file",owner:"RunDevelopment"},"t4-templating":{title:"T4 templating",owner:"RunDevelopment"},"t4-cs":{title:"T4 Text Templates (C#)",require:["t4-templating","csharp"],alias:"t4",owner:"RunDevelopment"},"t4-vb":{title:"T4 Text Templates (VB)",require:["t4-templating","vbnet"],owner:"RunDevelopment"},tap:{title:"TAP",owner:"isaacs",require:"yaml"},tcl:{title:"Tcl",owner:"PeterChaplin"},tt2:{title:"Template Toolkit 2",require:["clike","markup-templating"],owner:"gflohr"},textile:{title:"Textile",require:"markup",optional:"css",owner:"Golmote"},toml:{title:"TOML",owner:"RunDevelopment"},tremor:{title:"Tremor",alias:["trickle","troy"],owner:"darach",aliasTitles:{trickle:"trickle",troy:"troy"}},turtle:{title:"Turtle",alias:"trig",aliasTitles:{trig:"TriG"},owner:"jakubklimek"},twig:{title:"Twig",require:"markup-templating",owner:"brandonkelly"},typescript:{title:"TypeScript",require:"javascript",optional:"js-templates",alias:"ts",owner:"vkbansal"},typoscript:{title:"TypoScript",alias:"tsconfig",aliasTitles:{tsconfig:"TSConfig"},owner:"dkern"},unrealscript:{title:"UnrealScript",alias:["uscript","uc"],owner:"RunDevelopment"},uorazor:{title:"UO Razor Script",owner:"jaseowns"},uri:{title:"URI",alias:"url",aliasTitles:{url:"URL"},owner:"RunDevelopment"},v:{title:"V",require:"clike",owner:"taggon"},vala:{title:"Vala",require:"clike",optional:"regex",owner:"TemplarVolk"},vbnet:{title:"VB.Net",require:"basic",owner:"Bigsby"},velocity:{title:"Velocity",require:"markup",owner:"Golmote"},verilog:{title:"Verilog",owner:"a-rey"},vhdl:{title:"VHDL",owner:"a-rey"},vim:{title:"vim",owner:"westonganger"},"visual-basic":{title:"Visual Basic",alias:["vb","vba"],aliasTitles:{vba:"VBA"},owner:"Golmote"},warpscript:{title:"WarpScript",owner:"RunDevelopment"},wasm:{title:"WebAssembly",owner:"Golmote"},"web-idl":{title:"Web IDL",alias:"webidl",owner:"RunDevelopment"},wiki:{title:"Wiki markup",require:"markup",owner:"Golmote"},wolfram:{title:"Wolfram language",alias:["mathematica","nb","wl"],aliasTitles:{mathematica:"Mathematica",nb:"Mathematica Notebook"},owner:"msollami"},wren:{title:"Wren",owner:"clsource"},xeora:{title:"Xeora",require:"markup",alias:"xeoracube",aliasTitles:{xeoracube:"XeoraCube"},owner:"freakmaxi"},"xml-doc":{title:"XML doc (.net)",require:"markup",modify:["csharp","fsharp","vbnet"],owner:"RunDevelopment"},xojo:{title:"Xojo (REALbasic)",owner:"Golmote"},xquery:{title:"XQuery",require:"markup",owner:"Golmote"},yaml:{title:"YAML",alias:"yml",owner:"hason"},yang:{title:"YANG",owner:"RunDevelopment"},zig:{title:"Zig",owner:"RunDevelopment"}},plugins:{meta:{path:"plugins/{id}/prism-{id}",link:"plugins/{id}/"},"line-highlight":{title:"Line Highlight",description:"Highlights specific lines and/or line ranges."},"line-numbers":{title:"Line Numbers",description:"Line number at the beginning of code lines.",owner:"kuba-kubula"},"show-invisibles":{title:"Show Invisibles",description:"Show hidden characters such as tabs and line breaks.",optional:["autolinker","data-uri-highlight"]},autolinker:{title:"Autolinker",description:"Converts URLs and emails in code to clickable links. Parses Markdown links in comments."},wpd:{title:"WebPlatform Docs",description:'Makes tokens link to <a href="https://webplatform.github.io/docs/">WebPlatform.org documentation</a>. The links open in a new tab.'},"custom-class":{title:"Custom Class",description:"This plugin allows you to prefix Prism's default classes (<code>.comment</code> can become <code>.namespace--comment</code>) or replace them with your defined ones (like <code>.editor__comment</code>). You can even add new classes.",owner:"dvkndn",noCSS:!0},"file-highlight":{title:"File Highlight",description:"Fetch external files and highlight them with Prism. Used on the Prism website itself.",noCSS:!0},"show-language":{title:"Show Language",description:"Display the highlighted language in code blocks (inline code does not show the label).",owner:"nauzilus",noCSS:!0,require:"toolbar"},"jsonp-highlight":{title:"JSONP Highlight",description:"Fetch content with JSONP and highlight some interesting content (e.g. GitHub/Gists or Bitbucket API).",noCSS:!0,owner:"nauzilus"},"highlight-keywords":{title:"Highlight Keywords",description:"Adds special CSS classes for each keyword for fine-grained highlighting.",owner:"vkbansal",noCSS:!0},"remove-initial-line-feed":{title:"Remove initial line feed",description:"Removes the initial line feed in code blocks.",owner:"Golmote",noCSS:!0},"inline-color":{title:"Inline color",description:"Adds a small inline preview for colors in style sheets.",require:"css-extras",owner:"RunDevelopment"},previewers:{title:"Previewers",description:"Previewers for angles, colors, gradients, easing and time.",require:"css-extras",owner:"Golmote"},autoloader:{title:"Autoloader",description:"Automatically loads the needed languages to highlight the code blocks.",owner:"Golmote",noCSS:!0},"keep-markup":{title:"Keep Markup",description:"Prevents custom markup from being dropped out during highlighting.",owner:"Golmote",optional:"normalize-whitespace",noCSS:!0},"command-line":{title:"Command Line",description:"Display a command line with a prompt and, optionally, the output/response from the commands.",owner:"chriswells0"},"unescaped-markup":{title:"Unescaped Markup",description:"Write markup without having to escape anything."},"normalize-whitespace":{title:"Normalize Whitespace",description:"Supports multiple operations to normalize whitespace in code blocks.",owner:"zeitgeist87",optional:"unescaped-markup",noCSS:!0},"data-uri-highlight":{title:"Data-URI Highlight",description:"Highlights data-URI contents.",owner:"Golmote",noCSS:!0},toolbar:{title:"Toolbar",description:"Attach a toolbar for plugins to easily register buttons on the top of a code block.",owner:"mAAdhaTTah"},"copy-to-clipboard":{title:"Copy to Clipboard Button",description:"Add a button that copies the code block to the clipboard when clicked.",owner:"mAAdhaTTah",require:"toolbar",noCSS:!0},"download-button":{title:"Download Button",description:"A button in the toolbar of a code block adding a convenient way to download a code file.",owner:"Golmote",require:"toolbar",noCSS:!0},"match-braces":{title:"Match braces",description:"Highlights matching braces.",owner:"RunDevelopment"},"diff-highlight":{title:"Diff Highlight",description:"Highlights the code inside diff blocks.",owner:"RunDevelopment",require:"diff"},"filter-highlight-all":{title:"Filter highlightAll",description:"Filters the elements the <code>highlightAll</code> and <code>highlightAllUnder</code> methods actually highlight.",owner:"RunDevelopment",noCSS:!0},treeview:{title:"Treeview",description:"A language with special styles to highlight file system tree structures.",owner:"Golmote"}}})},2885:(e,n,t)=>{const r=t(29901),_=t(39642),a=new Set;function i(e){void 0===e?e=Object.keys(r.languages).filter((e=>"meta"!=e)):Array.isArray(e)||(e=[e]);const n=[...a,...Object.keys(Prism.languages)];_(r,e,n).load((e=>{if(!(e in r.languages))return void(i.silent||console.warn("Language does not exist: "+e));const n="./prism-"+e;delete t.c[t(16500).resolve(n)],delete Prism.languages[e],t(16500)(n),a.add(e)}))}i.silent=!1,e.exports=i},6726:(e,n,t)=>{var r={"./":2885};function _(e){var n=a(e);return t(n)}function a(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}_.keys=function(){return Object.keys(r)},_.resolve=a,e.exports=_,_.id=6726},16500:(e,n,t)=>{var r={"./":2885};function _(e){var n=a(e);return t(n)}function a(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}_.keys=function(){return Object.keys(r)},_.resolve=a,e.exports=_,_.id=16500},39642:e=>{"use strict";var n=function(){var e=function(){};function n(e,n){Array.isArray(e)?e.forEach(n):null!=e&&n(e,0)}function t(e){for(var n={},t=0,r=e.length;t<r;t++)n[e[t]]=!0;return n}function r(e){var t={},r=[];function _(r,a){if(!(r in t)){a.push(r);var i=a.indexOf(r);if(i<a.length-1)throw new Error("Circular dependency: "+a.slice(i).join(" -> "));var E={},s=e[r];if(s){function T(n){if(!(n in e))throw new Error(r+" depends on an unknown component "+n);if(!(n in E))for(var i in _(n,a),E[n]=!0,t[n])E[i]=!0}n(s.require,T),n(s.optional,T),n(s.modify,T)}t[r]=E,a.pop()}}return function(e){var n=t[e];return n||(_(e,r),n=t[e]),n}}function _(e){for(var n in e)return!0;return!1}return function(a,i,E){var s=function(e){var n={};for(var t in e){var r=e[t];for(var _ in r)if("meta"!=_){var a=r[_];n[_]="string"==typeof a?{title:a}:a}}return n}(a),T=function(e){var t;return function(r){if(r in e)return r;if(!t)for(var _ in t={},e){var a=e[_];n(a&&a.alias,(function(n){if(n in t)throw new Error(n+" cannot be alias for both "+_+" and "+t[n]);if(n in e)throw new Error(n+" cannot be alias of "+_+" because it is a component.");t[n]=_}))}return t[r]||r}}(s);i=i.map(T),E=(E||[]).map(T);var o=t(i),d=t(E);i.forEach((function e(t){var r=s[t];n(r&&r.require,(function(n){n in d||(o[n]=!0,e(n))}))}));for(var I,N=r(s),O=o;_(O);){for(var u in I={},O){var R=s[u];n(R&&R.modify,(function(e){e in d&&(I[e]=!0)}))}for(var A in d)if(!(A in o))for(var D in N(A))if(D in o){I[A]=!0;break}for(var S in O=I)o[S]=!0}var l={getIds:function(){var e=[];return l.load((function(n){e.push(n)})),e},load:function(n,t){return function(n,t,r,_){var a=_?_.series:void 0,i=_?_.parallel:e,E={},s={};function T(e){if(e in E)return E[e];s[e]=!0;var _,o=[];for(var d in n(e))d in t&&o.push(d);if(0===o.length)_=r(e);else{var I=i(o.map((function(e){var n=T(e);return delete s[e],n})));a?_=a(I,(function(){return r(e)})):r(e)}return E[e]=_}for(var o in t)T(o);var d=[];for(var I in s)d.push(E[I]);return i(d)}(N,o,n,t)}};return l}}();e.exports=n},92703:(e,n,t)=>{"use strict";var r=t(50414);function _(){}function a(){}a.resetWarningCache=_,e.exports=function(){function e(e,n,t,_,a,i){if(i!==r){var E=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw E.name="Invariant Violation",E}}function n(){return e}e.isRequired=e;var t={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:n,element:e,elementType:e,instanceOf:n,node:e,objectOf:n,oneOf:n,oneOfType:n,shape:n,exact:n,checkPropTypes:a,resetWarningCache:_};return t.PropTypes=t,t}},45697:(e,n,t)=>{e.exports=t(92703)()},50414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},64448:(e,n,t)=>{"use strict";var r=t(67294),_=t(27418),a=t(63840);function i(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));var E=new Set,s={};function T(e,n){o(e,n),o(e+"Capture",n)}function o(e,n){for(s[e]=n,e=0;e<n.length;e++)E.add(n[e])}var d=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),I=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,N=Object.prototype.hasOwnProperty,O={},u={};function R(e,n,t,r,_,a,i){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=_,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=a,this.removeEmptyString=i}var A={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){A[e]=new R(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var n=e[0];A[n]=new R(n,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){A[e]=new R(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){A[e]=new R(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){A[e]=new R(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){A[e]=new R(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){A[e]=new R(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){A[e]=new R(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){A[e]=new R(e,5,!1,e.toLowerCase(),null,!1,!1)}));var D=/[\-:]([a-z])/g;function S(e){return e[1].toUpperCase()}function l(e,n,t,r){var _=A.hasOwnProperty(n)?A[n]:null;(null!==_?0===_.type:!r&&(2<n.length&&("o"===n[0]||"O"===n[0])&&("n"===n[1]||"N"===n[1])))||(function(e,n,t,r){if(null==n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,_,r)&&(t=null),r||null===_?function(e){return!!N.call(u,e)||!N.call(O,e)&&(I.test(e)?u[e]=!0:(O[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):_.mustUseProperty?e[_.propertyName]=null===t?3!==_.type&&"":t:(n=_.attributeName,r=_.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(_=_.type)||4===_&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var n=e.replace(D,S);A[n]=new R(n,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var n=e.replace(D,S);A[n]=new R(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var n=e.replace(D,S);A[n]=new R(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){A[e]=new R(e,1,!1,e.toLowerCase(),null,!1,!1)})),A.xlinkHref=new R("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){A[e]=new R(e,1,!1,e.toLowerCase(),null,!0,!0)}));var h=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,C=60103,P=60106,U=60107,c=60108,p=60114,L=60109,f=60110,F=60112,m=60113,M=60120,w=60115,b=60116,g=60121,X=60128,y=60129,v=60130,V=60131;if("function"==typeof Symbol&&Symbol.for){var B=Symbol.for;C=B("react.element"),P=B("react.portal"),U=B("react.fragment"),c=B("react.strict_mode"),p=B("react.profiler"),L=B("react.provider"),f=B("react.context"),F=B("react.forward_ref"),m=B("react.suspense"),M=B("react.suspense_list"),w=B("react.memo"),b=B("react.lazy"),g=B("react.block"),B("react.scope"),X=B("react.opaque.id"),y=B("react.debug_trace_mode"),v=B("react.offscreen"),V=B("react.legacy_hidden")}var K,Y="function"==typeof Symbol&&Symbol.iterator;function G(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=Y&&e[Y]||e["@@iterator"])?e:null}function q(e){if(void 0===K)try{throw Error()}catch(t){var n=t.stack.trim().match(/\n( *(at )?)/);K=n&&n[1]||""}return"\n"+K+e}var k=!1;function x(e,n){if(!e||k)return"";k=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(s){var r=s}Reflect.construct(e,[],n)}else{try{n.call()}catch(s){r=s}e.call(n.prototype)}else{try{throw Error()}catch(s){r=s}e()}}catch(s){if(s&&r&&"string"==typeof s.stack){for(var _=s.stack.split("\n"),a=r.stack.split("\n"),i=_.length-1,E=a.length-1;1<=i&&0<=E&&_[i]!==a[E];)E--;for(;1<=i&&0<=E;i--,E--)if(_[i]!==a[E]){if(1!==i||1!==E)do{if(i--,0>--E||_[i]!==a[E])return"\n"+_[i].replace(" at new "," at ")}while(1<=i&&0<=E);break}}}finally{k=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?q(e):""}function H(e){switch(e.tag){case 5:return q(e.type);case 16:return q("Lazy");case 13:return q("Suspense");case 19:return q("SuspenseList");case 0:case 2:case 15:return e=x(e.type,!1);case 11:return e=x(e.type.render,!1);case 22:return e=x(e.type._render,!1);case 1:return e=x(e.type,!0);default:return""}}function Q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case U:return"Fragment";case P:return"Portal";case p:return"Profiler";case c:return"StrictMode";case m:return"Suspense";case M:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case f:return(e.displayName||"Context")+".Consumer";case L:return(e._context.displayName||"Context")+".Provider";case F:var n=e.render;return n=n.displayName||n.name||"",e.displayName||(""!==n?"ForwardRef("+n+")":"ForwardRef");case w:return Q(e.type);case g:return Q(e._render);case b:n=e._payload,e=e._init;try{return Q(e(n))}catch(t){}}return null}function Z(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function W(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function j(e){e._valueTracker||(e._valueTracker=function(e){var n=W(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var _=t.get,a=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return _.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function z(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=W(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function $(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function J(e,n){var t=n.checked;return _({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function ee(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=Z(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function ne(e,n){null!=(n=n.checked)&&l(e,"checked",n,!1)}function te(e,n){ne(e,n);var t=Z(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?_e(e,n.type,t):n.hasOwnProperty("defaultValue")&&_e(e,n.type,Z(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function re(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function _e(e,n,t){"number"===n&&$(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}function ae(e,n){return e=_({children:void 0},n),(n=function(e){var n="";return r.Children.forEach(e,(function(e){null!=e&&(n+=e)})),n}(n.children))&&(e.children=n),e}function ie(e,n,t,r){if(e=e.options,n){n={};for(var _=0;_<t.length;_++)n["$"+t[_]]=!0;for(t=0;t<e.length;t++)_=n.hasOwnProperty("$"+e[t].value),e[t].selected!==_&&(e[t].selected=_),_&&r&&(e[t].defaultSelected=!0)}else{for(t=""+Z(t),n=null,_=0;_<e.length;_++){if(e[_].value===t)return e[_].selected=!0,void(r&&(e[_].defaultSelected=!0));null!==n||e[_].disabled||(n=e[_])}null!==n&&(n.selected=!0)}}function Ee(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(i(91));return _({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function se(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(i(92));if(Array.isArray(t)){if(!(1>=t.length))throw Error(i(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:Z(t)}}function Te(e,n){var t=Z(n.value),r=Z(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function oe(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}var de="http://www.w3.org/1999/xhtml",Ie="http://www.w3.org/2000/svg";function Ne(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Oe(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?Ne(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var ue,Re,Ae=(Re=function(e,n){if(e.namespaceURI!==Ie||"innerHTML"in e)e.innerHTML=n;else{for((ue=ue||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=ue.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,r){MSApp.execUnsafeLocalFunction((function(){return Re(e,n)}))}:Re);function De(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var Se={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},le=["Webkit","ms","Moz","O"];function he(e,n,t){return null==n||"boolean"==typeof n||""===n?"":t||"number"!=typeof n||0===n||Se.hasOwnProperty(e)&&Se[e]?(""+n).trim():n+"px"}function Ce(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),_=he(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,_):e[t]=_}}Object.keys(Se).forEach((function(e){le.forEach((function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),Se[n]=Se[e]}))}));var Pe=_({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Ue(e,n){if(n){if(Pe[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(i(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(i(62))}}function ce(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function pe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Le=null,fe=null,Fe=null;function me(e){if(e=r_(e)){if("function"!=typeof Le)throw Error(i(280));var n=e.stateNode;n&&(n=a_(n),Le(e.stateNode,e.type,n))}}function Me(e){fe?Fe?Fe.push(e):Fe=[e]:fe=e}function we(){if(fe){var e=fe,n=Fe;if(Fe=fe=null,me(e),n)for(e=0;e<n.length;e++)me(n[e])}}function be(e,n){return e(n)}function ge(e,n,t,r,_){return e(n,t,r,_)}function Xe(){}var ye=be,ve=!1,Ve=!1;function Be(){null===fe&&null===Fe||(Xe(),we())}function Ke(e,n){var t=e.stateNode;if(null===t)return null;var r=a_(t);if(null===r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(i(231,n,typeof t));return t}var Ye=!1;if(d)try{var Ge={};Object.defineProperty(Ge,"passive",{get:function(){Ye=!0}}),window.addEventListener("test",Ge,Ge),window.removeEventListener("test",Ge,Ge)}catch(Re){Ye=!1}function qe(e,n,t,r,_,a,i,E,s){var T=Array.prototype.slice.call(arguments,3);try{n.apply(t,T)}catch(o){this.onError(o)}}var ke=!1,xe=null,He=!1,Qe=null,Ze={onError:function(e){ke=!0,xe=e}};function We(e,n,t,r,_,a,i,E,s){ke=!1,xe=null,qe.apply(Ze,arguments)}function je(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!=(1026&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function ze(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&(null!==(e=e.alternate)&&(n=e.memoizedState)),null!==n)return n.dehydrated}return null}function $e(e){if(je(e)!==e)throw Error(i(188))}function Je(e){if(e=function(e){var n=e.alternate;if(!n){if(null===(n=je(e)))throw Error(i(188));return n!==e?null:e}for(var t=e,r=n;;){var _=t.return;if(null===_)break;var a=_.alternate;if(null===a){if(null!==(r=_.return)){t=r;continue}break}if(_.child===a.child){for(a=_.child;a;){if(a===t)return $e(_),e;if(a===r)return $e(_),n;a=a.sibling}throw Error(i(188))}if(t.return!==r.return)t=_,r=a;else{for(var E=!1,s=_.child;s;){if(s===t){E=!0,t=_,r=a;break}if(s===r){E=!0,r=_,t=a;break}s=s.sibling}if(!E){for(s=a.child;s;){if(s===t){E=!0,t=a,r=_;break}if(s===r){E=!0,r=a,t=_;break}s=s.sibling}if(!E)throw Error(i(189))}}if(t.alternate!==r)throw Error(i(190))}if(3!==t.tag)throw Error(i(188));return t.stateNode.current===t?e:n}(e),!e)return null;for(var n=e;;){if(5===n.tag||6===n.tag)return n;if(n.child)n.child.return=n,n=n.child;else{if(n===e)break;for(;!n.sibling;){if(!n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}}return null}function en(e,n){for(var t=e.alternate;null!==n;){if(n===e||n===t)return!0;n=n.return}return!1}var nn,tn,rn,_n,an=!1,En=[],sn=null,Tn=null,on=null,dn=new Map,In=new Map,Nn=[],On="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function un(e,n,t,r,_){return{blockedOn:e,domEventName:n,eventSystemFlags:16|t,nativeEvent:_,targetContainers:[r]}}function Rn(e,n){switch(e){case"focusin":case"focusout":sn=null;break;case"dragenter":case"dragleave":Tn=null;break;case"mouseover":case"mouseout":on=null;break;case"pointerover":case"pointerout":dn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":In.delete(n.pointerId)}}function An(e,n,t,r,_,a){return null===e||e.nativeEvent!==a?(e=un(n,t,r,_,a),null!==n&&(null!==(n=r_(n))&&tn(n)),e):(e.eventSystemFlags|=r,n=e.targetContainers,null!==_&&-1===n.indexOf(_)&&n.push(_),e)}function Dn(e){var n=t_(e.target);if(null!==n){var t=je(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=ze(t)))return e.blockedOn=n,void _n(e.lanePriority,(function(){a.unstable_runWithPriority(e.priority,(function(){rn(t)}))}))}else if(3===n&&t.stateNode.hydrate)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function Sn(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=et(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t)return null!==(n=r_(t))&&tn(n),e.blockedOn=t,!1;n.shift()}return!0}function ln(e,n,t){Sn(e)&&t.delete(n)}function hn(){for(an=!1;0<En.length;){var e=En[0];if(null!==e.blockedOn){null!==(e=r_(e.blockedOn))&&nn(e);break}for(var n=e.targetContainers;0<n.length;){var t=et(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t){e.blockedOn=t;break}n.shift()}null===e.blockedOn&&En.shift()}null!==sn&&Sn(sn)&&(sn=null),null!==Tn&&Sn(Tn)&&(Tn=null),null!==on&&Sn(on)&&(on=null),dn.forEach(ln),In.forEach(ln)}function Cn(e,n){e.blockedOn===n&&(e.blockedOn=null,an||(an=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,hn)))}function Pn(e){function n(n){return Cn(n,e)}if(0<En.length){Cn(En[0],e);for(var t=1;t<En.length;t++){var r=En[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==sn&&Cn(sn,e),null!==Tn&&Cn(Tn,e),null!==on&&Cn(on,e),dn.forEach(n),In.forEach(n),t=0;t<Nn.length;t++)(r=Nn[t]).blockedOn===e&&(r.blockedOn=null);for(;0<Nn.length&&null===(t=Nn[0]).blockedOn;)Dn(t),null===t.blockedOn&&Nn.shift()}function Un(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var cn={animationend:Un("Animation","AnimationEnd"),animationiteration:Un("Animation","AnimationIteration"),animationstart:Un("Animation","AnimationStart"),transitionend:Un("Transition","TransitionEnd")},pn={},Ln={};function fn(e){if(pn[e])return pn[e];if(!cn[e])return e;var n,t=cn[e];for(n in t)if(t.hasOwnProperty(n)&&n in Ln)return pn[e]=t[n];return e}d&&(Ln=document.createElement("div").style,"AnimationEvent"in window||(delete cn.animationend.animation,delete cn.animationiteration.animation,delete cn.animationstart.animation),"TransitionEvent"in window||delete cn.transitionend.transition);var Fn=fn("animationend"),mn=fn("animationiteration"),Mn=fn("animationstart"),wn=fn("transitionend"),bn=new Map,gn=new Map,Xn=["abort","abort",Fn,"animationEnd",mn,"animationIteration",Mn,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",wn,"transitionEnd","waiting","waiting"];function yn(e,n){for(var t=0;t<e.length;t+=2){var r=e[t],_=e[t+1];_="on"+(_[0].toUpperCase()+_.slice(1)),gn.set(r,n),bn.set(r,_),T(_,[r])}}(0,a.unstable_now)();var vn=8;function Vn(e){if(0!=(1&e))return vn=15,1;if(0!=(2&e))return vn=14,2;if(0!=(4&e))return vn=13,4;var n=24&e;return 0!==n?(vn=12,n):0!=(32&e)?(vn=11,32):0!==(n=192&e)?(vn=10,n):0!=(256&e)?(vn=9,256):0!==(n=3584&e)?(vn=8,n):0!=(4096&e)?(vn=7,4096):0!==(n=4186112&e)?(vn=6,n):0!==(n=62914560&e)?(vn=5,n):67108864&e?(vn=4,67108864):0!=(134217728&e)?(vn=3,134217728):0!==(n=805306368&e)?(vn=2,n):0!=(1073741824&e)?(vn=1,1073741824):(vn=8,e)}function Bn(e,n){var t=e.pendingLanes;if(0===t)return vn=0;var r=0,_=0,a=e.expiredLanes,i=e.suspendedLanes,E=e.pingedLanes;if(0!==a)r=a,_=vn=15;else if(0!==(a=134217727&t)){var s=a&~i;0!==s?(r=Vn(s),_=vn):0!==(E&=a)&&(r=Vn(E),_=vn)}else 0!==(a=t&~i)?(r=Vn(a),_=vn):0!==E&&(r=Vn(E),_=vn);if(0===r)return 0;if(r=t&((0>(r=31-xn(r))?0:1<<r)<<1)-1,0!==n&&n!==r&&0==(n&i)){if(Vn(n),_<=vn)return n;vn=_}if(0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)_=1<<(t=31-xn(n)),r|=e[t],n&=~_;return r}function Kn(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Yn(e,n){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Gn(24&~n))?Yn(10,n):e;case 10:return 0===(e=Gn(192&~n))?Yn(8,n):e;case 8:return 0===(e=Gn(3584&~n))&&(0===(e=Gn(4186112&~n))&&(e=512)),e;case 2:return 0===(n=Gn(805306368&~n))&&(n=268435456),n}throw Error(i(358,e))}function Gn(e){return e&-e}function qn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function kn(e,n,t){e.pendingLanes|=n;var r=n-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[n=31-xn(n)]=t}var xn=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Hn(e)/Qn|0)|0},Hn=Math.log,Qn=Math.LN2;var Zn=a.unstable_UserBlockingPriority,Wn=a.unstable_runWithPriority,jn=!0;function zn(e,n,t,r){ve||Xe();var _=Jn,a=ve;ve=!0;try{ge(_,e,n,t,r)}finally{(ve=a)||Be()}}function $n(e,n,t,r){Wn(Zn,Jn.bind(null,e,n,t,r))}function Jn(e,n,t,r){var _;if(jn)if((_=0==(4&n))&&0<En.length&&-1<On.indexOf(e))e=un(null,e,n,t,r),En.push(e);else{var a=et(e,n,t,r);if(null===a)_&&Rn(e,r);else{if(_){if(-1<On.indexOf(e))return e=un(a,e,n,t,r),void En.push(e);if(function(e,n,t,r,_){switch(n){case"focusin":return sn=An(sn,e,n,t,r,_),!0;case"dragenter":return Tn=An(Tn,e,n,t,r,_),!0;case"mouseover":return on=An(on,e,n,t,r,_),!0;case"pointerover":var a=_.pointerId;return dn.set(a,An(dn.get(a)||null,e,n,t,r,_)),!0;case"gotpointercapture":return a=_.pointerId,In.set(a,An(In.get(a)||null,e,n,t,r,_)),!0}return!1}(a,e,n,t,r))return;Rn(e,r)}Xr(e,n,r,null,t)}}}function et(e,n,t,r){var _=pe(r);if(null!==(_=t_(_))){var a=je(_);if(null===a)_=null;else{var i=a.tag;if(13===i){if(null!==(_=ze(a)))return _;_=null}else if(3===i){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;_=null}else a!==_&&(_=null)}}return Xr(e,n,r,_,t),null}var nt=null,tt=null,rt=null;function _t(){if(rt)return rt;var e,n,t=tt,r=t.length,_="value"in nt?nt.value:nt.textContent,a=_.length;for(e=0;e<r&&t[e]===_[e];e++);var i=r-e;for(n=1;n<=i&&t[r-n]===_[a-n];n++);return rt=_.slice(e,1<n?1-n:void 0)}function at(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function it(){return!0}function Et(){return!1}function st(e){function n(n,t,r,_,a){for(var i in this._reactName=n,this._targetInst=r,this.type=t,this.nativeEvent=_,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(n=e[i],this[i]=n?n(_):_[i]);return this.isDefaultPrevented=(null!=_.defaultPrevented?_.defaultPrevented:!1===_.returnValue)?it:Et,this.isPropagationStopped=Et,this}return _(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=it)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=it)},persist:function(){},isPersistent:it}),n}var Tt,ot,dt,It={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Nt=st(It),Ot=_({},It,{view:0,detail:0}),ut=st(Ot),Rt=_({},Ot,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:ft,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==dt&&(dt&&"mousemove"===e.type?(Tt=e.screenX-dt.screenX,ot=e.screenY-dt.screenY):ot=Tt=0,dt=e),Tt)},movementY:function(e){return"movementY"in e?e.movementY:ot}}),At=st(Rt),Dt=st(_({},Rt,{dataTransfer:0})),St=st(_({},Ot,{relatedTarget:0})),lt=st(_({},It,{animationName:0,elapsedTime:0,pseudoElement:0})),ht=_({},It,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Ct=st(ht),Pt=st(_({},It,{data:0})),Ut={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},ct={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},pt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Lt(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=pt[e])&&!!n[e]}function ft(){return Lt}var Ft=_({},Ot,{key:function(e){if(e.key){var n=Ut[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=at(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?ct[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:ft,charCode:function(e){return"keypress"===e.type?at(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?at(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),mt=st(Ft),Mt=st(_({},Rt,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),wt=st(_({},Ot,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:ft})),bt=st(_({},It,{propertyName:0,elapsedTime:0,pseudoElement:0})),gt=_({},Rt,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Xt=st(gt),yt=[9,13,27,32],vt=d&&"CompositionEvent"in window,Vt=null;d&&"documentMode"in document&&(Vt=document.documentMode);var Bt=d&&"TextEvent"in window&&!Vt,Kt=d&&(!vt||Vt&&8<Vt&&11>=Vt),Yt=String.fromCharCode(32),Gt=!1;function qt(e,n){switch(e){case"keyup":return-1!==yt.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function kt(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var xt=!1;var Ht={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Qt(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!Ht[e.type]:"textarea"===n}function Zt(e,n,t,r){Me(r),0<(n=vr(n,"onChange")).length&&(t=new Nt("onChange","change",null,t,r),e.push({event:t,listeners:n}))}var Wt=null,jt=null;function zt(e){Fr(e,0)}function $t(e){if(z(__(e)))return e}function Jt(e,n){if("change"===e)return n}var er=!1;if(d){var nr;if(d){var tr="oninput"in document;if(!tr){var rr=document.createElement("div");rr.setAttribute("oninput","return;"),tr="function"==typeof rr.oninput}nr=tr}else nr=!1;er=nr&&(!document.documentMode||9<document.documentMode)}function _r(){Wt&&(Wt.detachEvent("onpropertychange",ar),jt=Wt=null)}function ar(e){if("value"===e.propertyName&&$t(jt)){var n=[];if(Zt(n,jt,e,pe(e)),e=zt,ve)e(n);else{ve=!0;try{be(e,n)}finally{ve=!1,Be()}}}}function ir(e,n,t){"focusin"===e?(_r(),jt=t,(Wt=n).attachEvent("onpropertychange",ar)):"focusout"===e&&_r()}function Er(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return $t(jt)}function sr(e,n){if("click"===e)return $t(n)}function Tr(e,n){if("input"===e||"change"===e)return $t(n)}var or="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n},dr=Object.prototype.hasOwnProperty;function Ir(e,n){if(or(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++)if(!dr.call(n,t[r])||!or(e[t[r]],n[t[r]]))return!1;return!0}function Nr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Or(e,n){var t,r=Nr(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Nr(r)}}function ur(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?ur(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function Rr(){for(var e=window,n=$();n instanceof e.HTMLIFrameElement;){try{var t="string"==typeof n.contentWindow.location.href}catch(r){t=!1}if(!t)break;n=$((e=n.contentWindow).document)}return n}function Ar(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}var Dr=d&&"documentMode"in document&&11>=document.documentMode,Sr=null,lr=null,hr=null,Cr=!1;function Pr(e,n,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;Cr||null==Sr||Sr!==$(r)||("selectionStart"in(r=Sr)&&Ar(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},hr&&Ir(hr,r)||(hr=r,0<(r=vr(lr,"onSelect")).length&&(n=new Nt("onSelect","select",null,n,t),e.push({event:n,listeners:r}),n.target=Sr)))}yn("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),yn("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),yn(Xn,2);for(var Ur="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),cr=0;cr<Ur.length;cr++)gn.set(Ur[cr],0);o("onMouseEnter",["mouseout","mouseover"]),o("onMouseLeave",["mouseout","mouseover"]),o("onPointerEnter",["pointerout","pointerover"]),o("onPointerLeave",["pointerout","pointerover"]),T("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),T("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),T("onBeforeInput",["compositionend","keypress","textInput","paste"]),T("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),T("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),T("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var pr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Lr=new Set("cancel close invalid load scroll toggle".split(" ").concat(pr));function fr(e,n,t){var r=e.type||"unknown-event";e.currentTarget=t,function(e,n,t,r,_,a,E,s,T){if(We.apply(this,arguments),ke){if(!ke)throw Error(i(198));var o=xe;ke=!1,xe=null,He||(He=!0,Qe=o)}}(r,n,void 0,e),e.currentTarget=null}function Fr(e,n){n=0!=(4&n);for(var t=0;t<e.length;t++){var r=e[t],_=r.event;r=r.listeners;e:{var a=void 0;if(n)for(var i=r.length-1;0<=i;i--){var E=r[i],s=E.instance,T=E.currentTarget;if(E=E.listener,s!==a&&_.isPropagationStopped())break e;fr(_,E,T),a=s}else for(i=0;i<r.length;i++){if(s=(E=r[i]).instance,T=E.currentTarget,E=E.listener,s!==a&&_.isPropagationStopped())break e;fr(_,E,T),a=s}}}if(He)throw e=Qe,He=!1,Qe=null,e}function mr(e,n){var t=i_(n),r=e+"__bubble";t.has(r)||(gr(n,e,2,!1),t.add(r))}var Mr="_reactListening"+Math.random().toString(36).slice(2);function wr(e){e[Mr]||(e[Mr]=!0,E.forEach((function(n){Lr.has(n)||br(n,!1,e,null),br(n,!0,e,null)})))}function br(e,n,t,r){var _=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,a=t;if("selectionchange"===e&&9!==t.nodeType&&(a=t.ownerDocument),null!==r&&!n&&Lr.has(e)){if("scroll"!==e)return;_|=2,a=r}var i=i_(a),E=e+"__"+(n?"capture":"bubble");i.has(E)||(n&&(_|=4),gr(a,e,_,n),i.add(E))}function gr(e,n,t,r){var _=gn.get(n);switch(void 0===_?2:_){case 0:_=zn;break;case 1:_=$n;break;default:_=Jn}t=_.bind(null,n,t,e),_=void 0,!Ye||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(_=!0),r?void 0!==_?e.addEventListener(n,t,{capture:!0,passive:_}):e.addEventListener(n,t,!0):void 0!==_?e.addEventListener(n,t,{passive:_}):e.addEventListener(n,t,!1)}function Xr(e,n,t,r,_){var a=r;if(0==(1&n)&&0==(2&n)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var E=r.stateNode.containerInfo;if(E===_||8===E.nodeType&&E.parentNode===_)break;if(4===i)for(i=r.return;null!==i;){var s=i.tag;if((3===s||4===s)&&((s=i.stateNode.containerInfo)===_||8===s.nodeType&&s.parentNode===_))return;i=i.return}for(;null!==E;){if(null===(i=t_(E)))return;if(5===(s=i.tag)||6===s){r=a=i;continue e}E=E.parentNode}}r=r.return}!function(e,n,t){if(Ve)return e(n,t);Ve=!0;try{ye(e,n,t)}finally{Ve=!1,Be()}}((function(){var r=a,_=pe(t),i=[];e:{var E=bn.get(e);if(void 0!==E){var s=Nt,T=e;switch(e){case"keypress":if(0===at(t))break e;case"keydown":case"keyup":s=mt;break;case"focusin":T="focus",s=St;break;case"focusout":T="blur",s=St;break;case"beforeblur":case"afterblur":s=St;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":s=At;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":s=Dt;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":s=wt;break;case Fn:case mn:case Mn:s=lt;break;case wn:s=bt;break;case"scroll":s=ut;break;case"wheel":s=Xt;break;case"copy":case"cut":case"paste":s=Ct;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":s=Mt}var o=0!=(4&n),d=!o&&"scroll"===e,I=o?null!==E?E+"Capture":null:E;o=[];for(var N,O=r;null!==O;){var u=(N=O).stateNode;if(5===N.tag&&null!==u&&(N=u,null!==I&&(null!=(u=Ke(O,I))&&o.push(yr(O,u,N)))),d)break;O=O.return}0<o.length&&(E=new s(E,T,null,t,_),i.push({event:E,listeners:o}))}}if(0==(7&n)){if(s="mouseout"===e||"pointerout"===e,(!(E="mouseover"===e||"pointerover"===e)||0!=(16&n)||!(T=t.relatedTarget||t.fromElement)||!t_(T)&&!T[e_])&&(s||E)&&(E=_.window===_?_:(E=_.ownerDocument)?E.defaultView||E.parentWindow:window,s?(s=r,null!==(T=(T=t.relatedTarget||t.toElement)?t_(T):null)&&(T!==(d=je(T))||5!==T.tag&&6!==T.tag)&&(T=null)):(s=null,T=r),s!==T)){if(o=At,u="onMouseLeave",I="onMouseEnter",O="mouse","pointerout"!==e&&"pointerover"!==e||(o=Mt,u="onPointerLeave",I="onPointerEnter",O="pointer"),d=null==s?E:__(s),N=null==T?E:__(T),(E=new o(u,O+"leave",s,t,_)).target=d,E.relatedTarget=N,u=null,t_(_)===r&&((o=new o(I,O+"enter",T,t,_)).target=N,o.relatedTarget=d,u=o),d=u,s&&T)e:{for(I=T,O=0,N=o=s;N;N=Vr(N))O++;for(N=0,u=I;u;u=Vr(u))N++;for(;0<O-N;)o=Vr(o),O--;for(;0<N-O;)I=Vr(I),N--;for(;O--;){if(o===I||null!==I&&o===I.alternate)break e;o=Vr(o),I=Vr(I)}o=null}else o=null;null!==s&&Br(i,E,s,o,!1),null!==T&&null!==d&&Br(i,d,T,o,!0)}if("select"===(s=(E=r?__(r):window).nodeName&&E.nodeName.toLowerCase())||"input"===s&&"file"===E.type)var R=Jt;else if(Qt(E))if(er)R=Tr;else{R=Er;var A=ir}else(s=E.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===E.type||"radio"===E.type)&&(R=sr);switch(R&&(R=R(e,r))?Zt(i,R,t,_):(A&&A(e,E,r),"focusout"===e&&(A=E._wrapperState)&&A.controlled&&"number"===E.type&&_e(E,"number",E.value)),A=r?__(r):window,e){case"focusin":(Qt(A)||"true"===A.contentEditable)&&(Sr=A,lr=r,hr=null);break;case"focusout":hr=lr=Sr=null;break;case"mousedown":Cr=!0;break;case"contextmenu":case"mouseup":case"dragend":Cr=!1,Pr(i,t,_);break;case"selectionchange":if(Dr)break;case"keydown":case"keyup":Pr(i,t,_)}var D;if(vt)e:{switch(e){case"compositionstart":var S="onCompositionStart";break e;case"compositionend":S="onCompositionEnd";break e;case"compositionupdate":S="onCompositionUpdate";break e}S=void 0}else xt?qt(e,t)&&(S="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(S="onCompositionStart");S&&(Kt&&"ko"!==t.locale&&(xt||"onCompositionStart"!==S?"onCompositionEnd"===S&&xt&&(D=_t()):(tt="value"in(nt=_)?nt.value:nt.textContent,xt=!0)),0<(A=vr(r,S)).length&&(S=new Pt(S,e,null,t,_),i.push({event:S,listeners:A}),D?S.data=D:null!==(D=kt(t))&&(S.data=D))),(D=Bt?function(e,n){switch(e){case"compositionend":return kt(n);case"keypress":return 32!==n.which?null:(Gt=!0,Yt);case"textInput":return(e=n.data)===Yt&&Gt?null:e;default:return null}}(e,t):function(e,n){if(xt)return"compositionend"===e||!vt&&qt(e,n)?(e=_t(),rt=tt=nt=null,xt=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return Kt&&"ko"!==n.locale?null:n.data}}(e,t))&&(0<(r=vr(r,"onBeforeInput")).length&&(_=new Pt("onBeforeInput","beforeinput",null,t,_),i.push({event:_,listeners:r}),_.data=D))}Fr(i,n)}))}function yr(e,n,t){return{instance:e,listener:n,currentTarget:t}}function vr(e,n){for(var t=n+"Capture",r=[];null!==e;){var _=e,a=_.stateNode;5===_.tag&&null!==a&&(_=a,null!=(a=Ke(e,t))&&r.unshift(yr(e,a,_)),null!=(a=Ke(e,n))&&r.push(yr(e,a,_))),e=e.return}return r}function Vr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Br(e,n,t,r,_){for(var a=n._reactName,i=[];null!==t&&t!==r;){var E=t,s=E.alternate,T=E.stateNode;if(null!==s&&s===r)break;5===E.tag&&null!==T&&(E=T,_?null!=(s=Ke(t,a))&&i.unshift(yr(t,s,E)):_||null!=(s=Ke(t,a))&&i.push(yr(t,s,E))),t=t.return}0!==i.length&&e.push({event:n,listeners:i})}function Kr(){}var Yr=null,Gr=null;function qr(e,n){switch(e){case"button":case"input":case"select":case"textarea":return!!n.autoFocus}return!1}function kr(e,n){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var xr="function"==typeof setTimeout?setTimeout:void 0,Hr="function"==typeof clearTimeout?clearTimeout:void 0;function Qr(e){1===e.nodeType?e.textContent="":9===e.nodeType&&(null!=(e=e.body)&&(e.textContent=""))}function Zr(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break}return e}function Wr(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var jr=0;var zr=Math.random().toString(36).slice(2),$r="__reactFiber$"+zr,Jr="__reactProps$"+zr,e_="__reactContainer$"+zr,n_="__reactEvents$"+zr;function t_(e){var n=e[$r];if(n)return n;for(var t=e.parentNode;t;){if(n=t[e_]||t[$r]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=Wr(e);null!==e;){if(t=e[$r])return t;e=Wr(e)}return n}t=(e=t).parentNode}return null}function r_(e){return!(e=e[$r]||e[e_])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function __(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function a_(e){return e[Jr]||null}function i_(e){var n=e[n_];return void 0===n&&(n=e[n_]=new Set),n}var E_=[],s_=-1;function T_(e){return{current:e}}function o_(e){0>s_||(e.current=E_[s_],E_[s_]=null,s_--)}function d_(e,n){s_++,E_[s_]=e.current,e.current=n}var I_={},N_=T_(I_),O_=T_(!1),u_=I_;function R_(e,n){var t=e.type.contextTypes;if(!t)return I_;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var _,a={};for(_ in t)a[_]=n[_];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=a),a}function A_(e){return null!=(e=e.childContextTypes)}function D_(){o_(O_),o_(N_)}function S_(e,n,t){if(N_.current!==I_)throw Error(i(168));d_(N_,n),d_(O_,t)}function l_(e,n,t){var r=e.stateNode;if(e=n.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var a in r=r.getChildContext())if(!(a in e))throw Error(i(108,Q(n)||"Unknown",a));return _({},t,r)}function h_(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||I_,u_=N_.current,d_(N_,e),d_(O_,O_.current),!0}function C_(e,n,t){var r=e.stateNode;if(!r)throw Error(i(169));t?(e=l_(e,n,u_),r.__reactInternalMemoizedMergedChildContext=e,o_(O_),o_(N_),d_(N_,e)):o_(O_),d_(O_,t)}var P_=null,U_=null,c_=a.unstable_runWithPriority,p_=a.unstable_scheduleCallback,L_=a.unstable_cancelCallback,f_=a.unstable_shouldYield,F_=a.unstable_requestPaint,m_=a.unstable_now,M_=a.unstable_getCurrentPriorityLevel,w_=a.unstable_ImmediatePriority,b_=a.unstable_UserBlockingPriority,g_=a.unstable_NormalPriority,X_=a.unstable_LowPriority,y_=a.unstable_IdlePriority,v_={},V_=void 0!==F_?F_:function(){},B_=null,K_=null,Y_=!1,G_=m_(),q_=1e4>G_?m_:function(){return m_()-G_};function k_(){switch(M_()){case w_:return 99;case b_:return 98;case g_:return 97;case X_:return 96;case y_:return 95;default:throw Error(i(332))}}function x_(e){switch(e){case 99:return w_;case 98:return b_;case 97:return g_;case 96:return X_;case 95:return y_;default:throw Error(i(332))}}function H_(e,n){return e=x_(e),c_(e,n)}function Q_(e,n,t){return e=x_(e),p_(e,n,t)}function Z_(){if(null!==K_){var e=K_;K_=null,L_(e)}W_()}function W_(){if(!Y_&&null!==B_){Y_=!0;var e=0;try{var n=B_;H_(99,(function(){for(;e<n.length;e++){var t=n[e];do{t=t(!0)}while(null!==t)}})),B_=null}catch(t){throw null!==B_&&(B_=B_.slice(e+1)),p_(w_,Z_),t}finally{Y_=!1}}}var j_=h.ReactCurrentBatchConfig;function z_(e,n){if(e&&e.defaultProps){for(var t in n=_({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}var $_=T_(null),J_=null,ea=null,na=null;function ta(){na=ea=J_=null}function ra(e){var n=$_.current;o_($_),e.type._context._currentValue=n}function _a(e,n){for(;null!==e;){var t=e.alternate;if((e.childLanes&n)===n){if(null===t||(t.childLanes&n)===n)break;t.childLanes|=n}else e.childLanes|=n,null!==t&&(t.childLanes|=n);e=e.return}}function aa(e,n){J_=e,na=ea=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&n)&&(yi=!0),e.firstContext=null)}function ia(e,n){if(na!==e&&!1!==n&&0!==n)if("number"==typeof n&&1073741823!==n||(na=e,n=1073741823),n={context:e,observedBits:n,next:null},null===ea){if(null===J_)throw Error(i(308));ea=n,J_.dependencies={lanes:0,firstContext:n,responders:null}}else ea=ea.next=n;return e._currentValue}var Ea=!1;function sa(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function Ta(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function oa(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function da(e,n){if(null!==(e=e.updateQueue)){var t=(e=e.shared).pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}}function Ia(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var _=null,a=null;if(null!==(t=t.firstBaseUpdate)){do{var i={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===a?_=a=i:a=a.next=i,t=t.next}while(null!==t);null===a?_=a=n:a=a.next=n}else _=a=n;return t={baseState:r.baseState,firstBaseUpdate:_,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function Na(e,n,t,r){var a=e.updateQueue;Ea=!1;var i=a.firstBaseUpdate,E=a.lastBaseUpdate,s=a.shared.pending;if(null!==s){a.shared.pending=null;var T=s,o=T.next;T.next=null,null===E?i=o:E.next=o,E=T;var d=e.alternate;if(null!==d){var I=(d=d.updateQueue).lastBaseUpdate;I!==E&&(null===I?d.firstBaseUpdate=o:I.next=o,d.lastBaseUpdate=T)}}if(null!==i){for(I=a.baseState,E=0,d=o=T=null;;){s=i.lane;var N=i.eventTime;if((r&s)===s){null!==d&&(d=d.next={eventTime:N,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var O=e,u=i;switch(s=n,N=t,u.tag){case 1:if("function"==typeof(O=u.payload)){I=O.call(N,I,s);break e}I=O;break e;case 3:O.flags=-4097&O.flags|64;case 0:if(null==(s="function"==typeof(O=u.payload)?O.call(N,I,s):O))break e;I=_({},I,s);break e;case 2:Ea=!0}}null!==i.callback&&(e.flags|=32,null===(s=a.effects)?a.effects=[i]:s.push(i))}else N={eventTime:N,lane:s,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===d?(o=d=N,T=I):d=d.next=N,E|=s;if(null===(i=i.next)){if(null===(s=a.shared.pending))break;i=s.next,s.next=null,a.lastBaseUpdate=s,a.shared.pending=null}}null===d&&(T=I),a.baseState=T,a.firstBaseUpdate=o,a.lastBaseUpdate=d,KE|=E,e.lanes=E,e.memoizedState=I}}function Oa(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],_=r.callback;if(null!==_){if(r.callback=null,r=t,"function"!=typeof _)throw Error(i(191,_));_.call(r)}}}var ua=(new r.Component).refs;function Ra(e,n,t,r){t=null==(t=t(r,n=e.memoizedState))?n:_({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var Aa={isMounted:function(e){return!!(e=e._reactInternals)&&je(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=ds(),_=Is(e),a=oa(r,_);a.payload=n,null!=t&&(a.callback=t),da(e,a),Ns(e,_,r)},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=ds(),_=Is(e),a=oa(r,_);a.tag=1,a.payload=n,null!=t&&(a.callback=t),da(e,a),Ns(e,_,r)},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=ds(),r=Is(e),_=oa(t,r);_.tag=2,null!=n&&(_.callback=n),da(e,_),Ns(e,r,t)}};function Da(e,n,t,r,_,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!n.prototype||!n.prototype.isPureReactComponent||(!Ir(t,r)||!Ir(_,a))}function Sa(e,n,t){var r=!1,_=I_,a=n.contextType;return"object"==typeof a&&null!==a?a=ia(a):(_=A_(n)?u_:N_.current,a=(r=null!=(r=n.contextTypes))?R_(e,_):I_),n=new n(t,a),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=Aa,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=_,e.__reactInternalMemoizedMaskedChildContext=a),n}function la(e,n,t,r){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&Aa.enqueueReplaceState(n,n.state,null)}function ha(e,n,t,r){var _=e.stateNode;_.props=t,_.state=e.memoizedState,_.refs=ua,sa(e);var a=n.contextType;"object"==typeof a&&null!==a?_.context=ia(a):(a=A_(n)?u_:N_.current,_.context=R_(e,a)),Na(e,t,_,r),_.state=e.memoizedState,"function"==typeof(a=n.getDerivedStateFromProps)&&(Ra(e,n,a,t),_.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof _.getSnapshotBeforeUpdate||"function"!=typeof _.UNSAFE_componentWillMount&&"function"!=typeof _.componentWillMount||(n=_.state,"function"==typeof _.componentWillMount&&_.componentWillMount(),"function"==typeof _.UNSAFE_componentWillMount&&_.UNSAFE_componentWillMount(),n!==_.state&&Aa.enqueueReplaceState(_,_.state,null),Na(e,t,_,r),_.state=e.memoizedState),"function"==typeof _.componentDidMount&&(e.flags|=4)}var Ca=Array.isArray;function Pa(e,n,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(i(309));var r=t.stateNode}if(!r)throw Error(i(147,e));var _=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===_?n.ref:(n=function(e){var n=r.refs;n===ua&&(n=r.refs={}),null===e?delete n[_]:n[_]=e},n._stringRef=_,n)}if("string"!=typeof e)throw Error(i(284));if(!t._owner)throw Error(i(290,e))}return e}function Ua(e,n){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(n)?"object with keys {"+Object.keys(n).join(", ")+"}":n))}function ca(e){function n(n,t){if(e){var r=n.lastEffect;null!==r?(r.nextEffect=t,n.lastEffect=t):n.firstEffect=n.lastEffect=t,t.nextEffect=null,t.flags=8}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function _(e,n){return(e=xs(e,n)).index=0,e.sibling=null,e}function a(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags=2,t):r:(n.flags=2,t):t}function E(n){return e&&null===n.alternate&&(n.flags=2),n}function s(e,n,t,r){return null===n||6!==n.tag?((n=Ws(t,e.mode,r)).return=e,n):((n=_(n,t)).return=e,n)}function T(e,n,t,r){return null!==n&&n.elementType===t.type?((r=_(n,t.props)).ref=Pa(e,n,t),r.return=e,r):((r=Hs(t.type,t.key,t.props,null,e.mode,r)).ref=Pa(e,n,t),r.return=e,r)}function o(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=js(t,e.mode,r)).return=e,n):((n=_(n,t.children||[])).return=e,n)}function d(e,n,t,r,a){return null===n||7!==n.tag?((n=Qs(t,e.mode,r,a)).return=e,n):((n=_(n,t)).return=e,n)}function I(e,n,t){if("string"==typeof n||"number"==typeof n)return(n=Ws(""+n,e.mode,t)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case C:return(t=Hs(n.type,n.key,n.props,null,e.mode,t)).ref=Pa(e,null,n),t.return=e,t;case P:return(n=js(n,e.mode,t)).return=e,n}if(Ca(n)||G(n))return(n=Qs(n,e.mode,t,null)).return=e,n;Ua(e,n)}return null}function N(e,n,t,r){var _=null!==n?n.key:null;if("string"==typeof t||"number"==typeof t)return null!==_?null:s(e,n,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case C:return t.key===_?t.type===U?d(e,n,t.props.children,r,_):T(e,n,t,r):null;case P:return t.key===_?o(e,n,t,r):null}if(Ca(t)||G(t))return null!==_?null:d(e,n,t,r,null);Ua(e,t)}return null}function O(e,n,t,r,_){if("string"==typeof r||"number"==typeof r)return s(n,e=e.get(t)||null,""+r,_);if("object"==typeof r&&null!==r){switch(r.$$typeof){case C:return e=e.get(null===r.key?t:r.key)||null,r.type===U?d(n,e,r.props.children,_,r.key):T(n,e,r,_);case P:return o(n,e=e.get(null===r.key?t:r.key)||null,r,_)}if(Ca(r)||G(r))return d(n,e=e.get(t)||null,r,_,null);Ua(n,r)}return null}function u(_,i,E,s){for(var T=null,o=null,d=i,u=i=0,R=null;null!==d&&u<E.length;u++){d.index>u?(R=d,d=null):R=d.sibling;var A=N(_,d,E[u],s);if(null===A){null===d&&(d=R);break}e&&d&&null===A.alternate&&n(_,d),i=a(A,i,u),null===o?T=A:o.sibling=A,o=A,d=R}if(u===E.length)return t(_,d),T;if(null===d){for(;u<E.length;u++)null!==(d=I(_,E[u],s))&&(i=a(d,i,u),null===o?T=d:o.sibling=d,o=d);return T}for(d=r(_,d);u<E.length;u++)null!==(R=O(d,_,u,E[u],s))&&(e&&null!==R.alternate&&d.delete(null===R.key?u:R.key),i=a(R,i,u),null===o?T=R:o.sibling=R,o=R);return e&&d.forEach((function(e){return n(_,e)})),T}function R(_,E,s,T){var o=G(s);if("function"!=typeof o)throw Error(i(150));if(null==(s=o.call(s)))throw Error(i(151));for(var d=o=null,u=E,R=E=0,A=null,D=s.next();null!==u&&!D.done;R++,D=s.next()){u.index>R?(A=u,u=null):A=u.sibling;var S=N(_,u,D.value,T);if(null===S){null===u&&(u=A);break}e&&u&&null===S.alternate&&n(_,u),E=a(S,E,R),null===d?o=S:d.sibling=S,d=S,u=A}if(D.done)return t(_,u),o;if(null===u){for(;!D.done;R++,D=s.next())null!==(D=I(_,D.value,T))&&(E=a(D,E,R),null===d?o=D:d.sibling=D,d=D);return o}for(u=r(_,u);!D.done;R++,D=s.next())null!==(D=O(u,_,R,D.value,T))&&(e&&null!==D.alternate&&u.delete(null===D.key?R:D.key),E=a(D,E,R),null===d?o=D:d.sibling=D,d=D);return e&&u.forEach((function(e){return n(_,e)})),o}return function(e,r,a,s){var T="object"==typeof a&&null!==a&&a.type===U&&null===a.key;T&&(a=a.props.children);var o="object"==typeof a&&null!==a;if(o)switch(a.$$typeof){case C:e:{for(o=a.key,T=r;null!==T;){if(T.key===o){if(7===T.tag){if(a.type===U){t(e,T.sibling),(r=_(T,a.props.children)).return=e,e=r;break e}}else if(T.elementType===a.type){t(e,T.sibling),(r=_(T,a.props)).ref=Pa(e,T,a),r.return=e,e=r;break e}t(e,T);break}n(e,T),T=T.sibling}a.type===U?((r=Qs(a.props.children,e.mode,s,a.key)).return=e,e=r):((s=Hs(a.type,a.key,a.props,null,e.mode,s)).ref=Pa(e,r,a),s.return=e,e=s)}return E(e);case P:e:{for(T=a.key;null!==r;){if(r.key===T){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){t(e,r.sibling),(r=_(r,a.children||[])).return=e,e=r;break e}t(e,r);break}n(e,r),r=r.sibling}(r=js(a,e.mode,s)).return=e,e=r}return E(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(t(e,r.sibling),(r=_(r,a)).return=e,e=r):(t(e,r),(r=Ws(a,e.mode,s)).return=e,e=r),E(e);if(Ca(a))return u(e,r,a,s);if(G(a))return R(e,r,a,s);if(o&&Ua(e,a),void 0===a&&!T)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,Q(e.type)||"Component"))}return t(e,r)}}var pa=ca(!0),La=ca(!1),fa={},Fa=T_(fa),ma=T_(fa),Ma=T_(fa);function wa(e){if(e===fa)throw Error(i(174));return e}function ba(e,n){switch(d_(Ma,n),d_(ma,e),d_(Fa,fa),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:Oe(null,"");break;default:n=Oe(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}o_(Fa),d_(Fa,n)}function ga(){o_(Fa),o_(ma),o_(Ma)}function Xa(e){wa(Ma.current);var n=wa(Fa.current),t=Oe(n,e.type);n!==t&&(d_(ma,e),d_(Fa,t))}function ya(e){ma.current===e&&(o_(Fa),o_(ma))}var va=T_(0);function Va(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!=(64&n.flags))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var Ba=null,Ka=null,Ya=!1;function Ga(e,n){var t=qs(5,null,null,0);t.elementType="DELETED",t.type="DELETED",t.stateNode=n,t.return=e,t.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=t,e.lastEffect=t):e.firstEffect=e.lastEffect=t}function qa(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,!0);default:return!1}}function ka(e){if(Ya){var n=Ka;if(n){var t=n;if(!qa(e,n)){if(!(n=Zr(t.nextSibling))||!qa(e,n))return e.flags=-1025&e.flags|2,Ya=!1,void(Ba=e);Ga(Ba,t)}Ba=e,Ka=Zr(n.firstChild)}else e.flags=-1025&e.flags|2,Ya=!1,Ba=e}}function xa(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Ba=e}function Ha(e){if(e!==Ba)return!1;if(!Ya)return xa(e),Ya=!0,!1;var n=e.type;if(5!==e.tag||"head"!==n&&"body"!==n&&!kr(n,e.memoizedProps))for(n=Ka;n;)Ga(e,n),n=Zr(n.nextSibling);if(xa(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){Ka=Zr(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}Ka=null}}else Ka=Ba?Zr(e.stateNode.nextSibling):null;return!0}function Qa(){Ka=Ba=null,Ya=!1}var Za=[];function Wa(){for(var e=0;e<Za.length;e++)Za[e]._workInProgressVersionPrimary=null;Za.length=0}var ja=h.ReactCurrentDispatcher,za=h.ReactCurrentBatchConfig,$a=0,Ja=null,ei=null,ni=null,ti=!1,ri=!1;function _i(){throw Error(i(321))}function ai(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!or(e[t],n[t]))return!1;return!0}function ii(e,n,t,r,_,a){if($a=a,Ja=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,ja.current=null===e||null===e.memoizedState?wi:bi,e=t(r,_),ri){a=0;do{if(ri=!1,!(25>a))throw Error(i(301));a+=1,ni=ei=null,n.updateQueue=null,ja.current=gi,e=t(r,_)}while(ri)}if(ja.current=Mi,n=null!==ei&&null!==ei.next,$a=0,ni=ei=Ja=null,ti=!1,n)throw Error(i(300));return e}function Ei(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ni?Ja.memoizedState=ni=e:ni=ni.next=e,ni}function si(){if(null===ei){var e=Ja.alternate;e=null!==e?e.memoizedState:null}else e=ei.next;var n=null===ni?Ja.memoizedState:ni.next;if(null!==n)ni=n,ei=e;else{if(null===e)throw Error(i(310));e={memoizedState:(ei=e).memoizedState,baseState:ei.baseState,baseQueue:ei.baseQueue,queue:ei.queue,next:null},null===ni?Ja.memoizedState=ni=e:ni=ni.next=e}return ni}function Ti(e,n){return"function"==typeof n?n(e):n}function oi(e){var n=si(),t=n.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=e;var r=ei,_=r.baseQueue,a=t.pending;if(null!==a){if(null!==_){var E=_.next;_.next=a.next,a.next=E}r.baseQueue=_=a,t.pending=null}if(null!==_){_=_.next,r=r.baseState;var s=E=a=null,T=_;do{var o=T.lane;if(($a&o)===o)null!==s&&(s=s.next={lane:0,action:T.action,eagerReducer:T.eagerReducer,eagerState:T.eagerState,next:null}),r=T.eagerReducer===e?T.eagerState:e(r,T.action);else{var d={lane:o,action:T.action,eagerReducer:T.eagerReducer,eagerState:T.eagerState,next:null};null===s?(E=s=d,a=r):s=s.next=d,Ja.lanes|=o,KE|=o}T=T.next}while(null!==T&&T!==_);null===s?a=r:s.next=E,or(r,n.memoizedState)||(yi=!0),n.memoizedState=r,n.baseState=a,n.baseQueue=s,t.lastRenderedState=r}return[n.memoizedState,t.dispatch]}function di(e){var n=si(),t=n.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=e;var r=t.dispatch,_=t.pending,a=n.memoizedState;if(null!==_){t.pending=null;var E=_=_.next;do{a=e(a,E.action),E=E.next}while(E!==_);or(a,n.memoizedState)||(yi=!0),n.memoizedState=a,null===n.baseQueue&&(n.baseState=a),t.lastRenderedState=a}return[a,r]}function Ii(e,n,t){var r=n._getVersion;r=r(n._source);var _=n._workInProgressVersionPrimary;if(null!==_?e=_===r:(e=e.mutableReadLanes,(e=($a&e)===e)&&(n._workInProgressVersionPrimary=r,Za.push(n))),e)return t(n._source);throw Za.push(n),Error(i(350))}function Ni(e,n,t,r){var _=wE;if(null===_)throw Error(i(349));var a=n._getVersion,E=a(n._source),s=ja.current,T=s.useState((function(){return Ii(_,n,t)})),o=T[1],d=T[0];T=ni;var I=e.memoizedState,N=I.refs,O=N.getSnapshot,u=I.source;I=I.subscribe;var R=Ja;return e.memoizedState={refs:N,source:n,subscribe:r},s.useEffect((function(){N.getSnapshot=t,N.setSnapshot=o;var e=a(n._source);if(!or(E,e)){e=t(n._source),or(d,e)||(o(e),e=Is(R),_.mutableReadLanes|=e&_.pendingLanes),e=_.mutableReadLanes,_.entangledLanes|=e;for(var r=_.entanglements,i=e;0<i;){var s=31-xn(i),T=1<<s;r[s]|=e,i&=~T}}}),[t,n,r]),s.useEffect((function(){return r(n._source,(function(){var e=N.getSnapshot,t=N.setSnapshot;try{t(e(n._source));var r=Is(R);_.mutableReadLanes|=r&_.pendingLanes}catch(a){t((function(){throw a}))}}))}),[n,r]),or(O,t)&&or(u,n)&&or(I,r)||((e={pending:null,dispatch:null,lastRenderedReducer:Ti,lastRenderedState:d}).dispatch=o=mi.bind(null,Ja,e),T.queue=e,T.baseQueue=null,d=Ii(_,n,t),T.memoizedState=T.baseState=d),d}function Oi(e,n,t){return Ni(si(),e,n,t)}function ui(e){var n=Ei();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e=(e=n.queue={pending:null,dispatch:null,lastRenderedReducer:Ti,lastRenderedState:e}).dispatch=mi.bind(null,Ja,e),[n.memoizedState,e]}function Ri(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=Ja.updateQueue)?(n={lastEffect:null},Ja.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function Ai(e){return e={current:e},Ei().memoizedState=e}function Di(){return si().memoizedState}function Si(e,n,t,r){var _=Ei();Ja.flags|=e,_.memoizedState=Ri(1|n,t,void 0,void 0===r?null:r)}function li(e,n,t,r){var _=si();r=void 0===r?null:r;var a=void 0;if(null!==ei){var i=ei.memoizedState;if(a=i.destroy,null!==r&&ai(r,i.deps))return void Ri(n,t,a,r)}Ja.flags|=e,_.memoizedState=Ri(1|n,t,a,r)}function hi(e,n){return Si(516,4,e,n)}function Ci(e,n){return li(516,4,e,n)}function Pi(e,n){return li(4,2,e,n)}function Ui(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function ci(e,n,t){return t=null!=t?t.concat([e]):null,li(4,2,Ui.bind(null,n,e),t)}function pi(){}function Li(e,n){var t=si();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&ai(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function fi(e,n){var t=si();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&ai(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function Fi(e,n){var t=k_();H_(98>t?98:t,(function(){e(!0)})),H_(97<t?97:t,(function(){var t=za.transition;za.transition=1;try{e(!1),n()}finally{za.transition=t}}))}function mi(e,n,t){var r=ds(),_=Is(e),a={lane:_,action:t,eagerReducer:null,eagerState:null,next:null},i=n.pending;if(null===i?a.next=a:(a.next=i.next,i.next=a),n.pending=a,i=e.alternate,e===Ja||null!==i&&i===Ja)ri=ti=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=n.lastRenderedReducer))try{var E=n.lastRenderedState,s=i(E,t);if(a.eagerReducer=i,a.eagerState=s,or(s,E))return}catch(T){}Ns(e,_,r)}}var Mi={readContext:ia,useCallback:_i,useContext:_i,useEffect:_i,useImperativeHandle:_i,useLayoutEffect:_i,useMemo:_i,useReducer:_i,useRef:_i,useState:_i,useDebugValue:_i,useDeferredValue:_i,useTransition:_i,useMutableSource:_i,useOpaqueIdentifier:_i,unstable_isNewReconciler:!1},wi={readContext:ia,useCallback:function(e,n){return Ei().memoizedState=[e,void 0===n?null:n],e},useContext:ia,useEffect:hi,useImperativeHandle:function(e,n,t){return t=null!=t?t.concat([e]):null,Si(4,2,Ui.bind(null,n,e),t)},useLayoutEffect:function(e,n){return Si(4,2,e,n)},useMemo:function(e,n){var t=Ei();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=Ei();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:n}).dispatch=mi.bind(null,Ja,e),[r.memoizedState,e]},useRef:Ai,useState:ui,useDebugValue:pi,useDeferredValue:function(e){var n=ui(e),t=n[0],r=n[1];return hi((function(){var n=za.transition;za.transition=1;try{r(e)}finally{za.transition=n}}),[e]),t},useTransition:function(){var e=ui(!1),n=e[0];return Ai(e=Fi.bind(null,e[1])),[e,n]},useMutableSource:function(e,n,t){var r=Ei();return r.memoizedState={refs:{getSnapshot:n,setSnapshot:null},source:e,subscribe:t},Ni(r,e,n,t)},useOpaqueIdentifier:function(){if(Ya){var e=!1,n=function(e){return{$$typeof:X,toString:e,valueOf:e}}((function(){throw e||(e=!0,t("r:"+(jr++).toString(36))),Error(i(355))})),t=ui(n)[1];return 0==(2&Ja.mode)&&(Ja.flags|=516,Ri(5,(function(){t("r:"+(jr++).toString(36))}),void 0,null)),n}return ui(n="r:"+(jr++).toString(36)),n},unstable_isNewReconciler:!1},bi={readContext:ia,useCallback:Li,useContext:ia,useEffect:Ci,useImperativeHandle:ci,useLayoutEffect:Pi,useMemo:fi,useReducer:oi,useRef:Di,useState:function(){return oi(Ti)},useDebugValue:pi,useDeferredValue:function(e){var n=oi(Ti),t=n[0],r=n[1];return Ci((function(){var n=za.transition;za.transition=1;try{r(e)}finally{za.transition=n}}),[e]),t},useTransition:function(){var e=oi(Ti)[0];return[Di().current,e]},useMutableSource:Oi,useOpaqueIdentifier:function(){return oi(Ti)[0]},unstable_isNewReconciler:!1},gi={readContext:ia,useCallback:Li,useContext:ia,useEffect:Ci,useImperativeHandle:ci,useLayoutEffect:Pi,useMemo:fi,useReducer:di,useRef:Di,useState:function(){return di(Ti)},useDebugValue:pi,useDeferredValue:function(e){var n=di(Ti),t=n[0],r=n[1];return Ci((function(){var n=za.transition;za.transition=1;try{r(e)}finally{za.transition=n}}),[e]),t},useTransition:function(){var e=di(Ti)[0];return[Di().current,e]},useMutableSource:Oi,useOpaqueIdentifier:function(){return di(Ti)[0]},unstable_isNewReconciler:!1},Xi=h.ReactCurrentOwner,yi=!1;function vi(e,n,t,r){n.child=null===e?La(n,null,t,r):pa(n,e.child,t,r)}function Vi(e,n,t,r,_){t=t.render;var a=n.ref;return aa(n,_),r=ii(e,n,t,r,a,_),null===e||yi?(n.flags|=1,vi(e,n,r,_),n.child):(n.updateQueue=e.updateQueue,n.flags&=-517,e.lanes&=~_,_E(e,n,_))}function Bi(e,n,t,r,_,a){if(null===e){var i=t.type;return"function"!=typeof i||ks(i)||void 0!==i.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=Hs(t.type,null,r,n,n.mode,a)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=i,Ki(e,n,i,r,_,a))}return i=e.child,0==(_&a)&&(_=i.memoizedProps,(t=null!==(t=t.compare)?t:Ir)(_,r)&&e.ref===n.ref)?_E(e,n,a):(n.flags|=1,(e=xs(i,r)).ref=n.ref,e.return=n,n.child=e)}function Ki(e,n,t,r,_,a){if(null!==e&&Ir(e.memoizedProps,r)&&e.ref===n.ref){if(yi=!1,0==(a&_))return n.lanes=e.lanes,_E(e,n,a);0!=(16384&e.flags)&&(yi=!0)}return qi(e,n,t,r,a)}function Yi(e,n,t){var r=n.pendingProps,_=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&n.mode))n.memoizedState={baseLanes:0},hs(n,t);else{if(0==(1073741824&t))return e=null!==a?a.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e},hs(n,e),null;n.memoizedState={baseLanes:0},hs(n,null!==a?a.baseLanes:t)}else null!==a?(r=a.baseLanes|t,n.memoizedState=null):r=t,hs(n,r);return vi(e,n,_,t),n.child}function Gi(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=128)}function qi(e,n,t,r,_){var a=A_(t)?u_:N_.current;return a=R_(n,a),aa(n,_),t=ii(e,n,t,r,a,_),null===e||yi?(n.flags|=1,vi(e,n,t,_),n.child):(n.updateQueue=e.updateQueue,n.flags&=-517,e.lanes&=~_,_E(e,n,_))}function ki(e,n,t,r,_){if(A_(t)){var a=!0;h_(n)}else a=!1;if(aa(n,_),null===n.stateNode)null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),Sa(n,t,r),ha(n,t,r,_),r=!0;else if(null===e){var i=n.stateNode,E=n.memoizedProps;i.props=E;var s=i.context,T=t.contextType;"object"==typeof T&&null!==T?T=ia(T):T=R_(n,T=A_(t)?u_:N_.current);var o=t.getDerivedStateFromProps,d="function"==typeof o||"function"==typeof i.getSnapshotBeforeUpdate;d||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(E!==r||s!==T)&&la(n,i,r,T),Ea=!1;var I=n.memoizedState;i.state=I,Na(n,r,i,_),s=n.memoizedState,E!==r||I!==s||O_.current||Ea?("function"==typeof o&&(Ra(n,t,o,r),s=n.memoizedState),(E=Ea||Da(n,t,E,r,I,s,T))?(d||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(n.flags|=4)):("function"==typeof i.componentDidMount&&(n.flags|=4),n.memoizedProps=r,n.memoizedState=s),i.props=r,i.state=s,i.context=T,r=E):("function"==typeof i.componentDidMount&&(n.flags|=4),r=!1)}else{i=n.stateNode,Ta(e,n),E=n.memoizedProps,T=n.type===n.elementType?E:z_(n.type,E),i.props=T,d=n.pendingProps,I=i.context,"object"==typeof(s=t.contextType)&&null!==s?s=ia(s):s=R_(n,s=A_(t)?u_:N_.current);var N=t.getDerivedStateFromProps;(o="function"==typeof N||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(E!==d||I!==s)&&la(n,i,r,s),Ea=!1,I=n.memoizedState,i.state=I,Na(n,r,i,_);var O=n.memoizedState;E!==d||I!==O||O_.current||Ea?("function"==typeof N&&(Ra(n,t,N,r),O=n.memoizedState),(T=Ea||Da(n,t,T,r,I,O,s))?(o||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,O,s),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,O,s)),"function"==typeof i.componentDidUpdate&&(n.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(n.flags|=256)):("function"!=typeof i.componentDidUpdate||E===e.memoizedProps&&I===e.memoizedState||(n.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||E===e.memoizedProps&&I===e.memoizedState||(n.flags|=256),n.memoizedProps=r,n.memoizedState=O),i.props=r,i.state=O,i.context=s,r=T):("function"!=typeof i.componentDidUpdate||E===e.memoizedProps&&I===e.memoizedState||(n.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||E===e.memoizedProps&&I===e.memoizedState||(n.flags|=256),r=!1)}return xi(e,n,t,r,a,_)}function xi(e,n,t,r,_,a){Gi(e,n);var i=0!=(64&n.flags);if(!r&&!i)return _&&C_(n,t,!1),_E(e,n,a);r=n.stateNode,Xi.current=n;var E=i&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&i?(n.child=pa(n,e.child,null,a),n.child=pa(n,null,E,a)):vi(e,n,E,a),n.memoizedState=r.state,_&&C_(n,t,!0),n.child}function Hi(e){var n=e.stateNode;n.pendingContext?S_(0,n.pendingContext,n.pendingContext!==n.context):n.context&&S_(0,n.context,!1),ba(e,n.containerInfo)}var Qi,Zi,Wi,ji={dehydrated:null,retryLane:0};function zi(e,n,t){var r,_=n.pendingProps,a=va.current,i=!1;return(r=0!=(64&n.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&a)),r?(i=!0,n.flags&=-65):null!==e&&null===e.memoizedState||void 0===_.fallback||!0===_.unstable_avoidThisFallback||(a|=1),d_(va,1&a),null===e?(void 0!==_.fallback&&ka(n),e=_.children,a=_.fallback,i?(e=$i(n,e,a,t),n.child.memoizedState={baseLanes:t},n.memoizedState=ji,e):"number"==typeof _.unstable_expectedLoadTime?(e=$i(n,e,a,t),n.child.memoizedState={baseLanes:t},n.memoizedState=ji,n.lanes=33554432,e):((t=Zs({mode:"visible",children:e},n.mode,t,null)).return=n,n.child=t)):(e.memoizedState,i?(_=eE(e,n,_.children,_.fallback,t),i=n.child,a=e.child.memoizedState,i.memoizedState=null===a?{baseLanes:t}:{baseLanes:a.baseLanes|t},i.childLanes=e.childLanes&~t,n.memoizedState=ji,_):(t=Ji(e,n,_.children,t),n.memoizedState=null,t))}function $i(e,n,t,r){var _=e.mode,a=e.child;return n={mode:"hidden",children:n},0==(2&_)&&null!==a?(a.childLanes=0,a.pendingProps=n):a=Zs(n,_,0,null),t=Qs(t,_,r,null),a.return=e,t.return=e,a.sibling=t,e.child=a,t}function Ji(e,n,t,r){var _=e.child;return e=_.sibling,t=xs(_,{mode:"visible",children:t}),0==(2&n.mode)&&(t.lanes=r),t.return=n,t.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,n.firstEffect=n.lastEffect=e),n.child=t}function eE(e,n,t,r,_){var a=n.mode,i=e.child;e=i.sibling;var E={mode:"hidden",children:t};return 0==(2&a)&&n.child!==i?((t=n.child).childLanes=0,t.pendingProps=E,null!==(i=t.lastEffect)?(n.firstEffect=t.firstEffect,n.lastEffect=i,i.nextEffect=null):n.firstEffect=n.lastEffect=null):t=xs(i,E),null!==e?r=xs(e,r):(r=Qs(r,a,_,null)).flags|=2,r.return=n,t.return=n,t.sibling=r,n.child=t,r}function nE(e,n){e.lanes|=n;var t=e.alternate;null!==t&&(t.lanes|=n),_a(e.return,n)}function tE(e,n,t,r,_,a){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:_,lastEffect:a}:(i.isBackwards=n,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=t,i.tailMode=_,i.lastEffect=a)}function rE(e,n,t){var r=n.pendingProps,_=r.revealOrder,a=r.tail;if(vi(e,n,r.children,t),0!=(2&(r=va.current)))r=1&r|2,n.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&nE(e,t);else if(19===e.tag)nE(e,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(d_(va,r),0==(2&n.mode))n.memoizedState=null;else switch(_){case"forwards":for(t=n.child,_=null;null!==t;)null!==(e=t.alternate)&&null===Va(e)&&(_=t),t=t.sibling;null===(t=_)?(_=n.child,n.child=null):(_=t.sibling,t.sibling=null),tE(n,!1,_,t,a,n.lastEffect);break;case"backwards":for(t=null,_=n.child,n.child=null;null!==_;){if(null!==(e=_.alternate)&&null===Va(e)){n.child=_;break}e=_.sibling,_.sibling=t,t=_,_=e}tE(n,!0,t,null,a,n.lastEffect);break;case"together":tE(n,!1,null,null,void 0,n.lastEffect);break;default:n.memoizedState=null}return n.child}function _E(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),KE|=n.lanes,0!=(t&n.childLanes)){if(null!==e&&n.child!==e.child)throw Error(i(153));if(null!==n.child){for(t=xs(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=xs(e,e.pendingProps)).return=n;t.sibling=null}return n.child}return null}function aE(e,n){if(!Ya)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function iE(e,n,t){var r=n.pendingProps;switch(n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return A_(n.type)&&D_(),null;case 3:return ga(),o_(O_),o_(N_),Wa(),(r=n.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Ha(n)?n.flags|=4:r.hydrate||(n.flags|=256)),null;case 5:ya(n);var a=wa(Ma.current);if(t=n.type,null!==e&&null!=n.stateNode)Zi(e,n,t,r),e.ref!==n.ref&&(n.flags|=128);else{if(!r){if(null===n.stateNode)throw Error(i(166));return null}if(e=wa(Fa.current),Ha(n)){r=n.stateNode,t=n.type;var E=n.memoizedProps;switch(r[$r]=n,r[Jr]=E,t){case"dialog":mr("cancel",r),mr("close",r);break;case"iframe":case"object":case"embed":mr("load",r);break;case"video":case"audio":for(e=0;e<pr.length;e++)mr(pr[e],r);break;case"source":mr("error",r);break;case"img":case"image":case"link":mr("error",r),mr("load",r);break;case"details":mr("toggle",r);break;case"input":ee(r,E),mr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!E.multiple},mr("invalid",r);break;case"textarea":se(r,E),mr("invalid",r)}for(var T in Ue(t,E),e=null,E)E.hasOwnProperty(T)&&(a=E[T],"children"===T?"string"==typeof a?r.textContent!==a&&(e=["children",a]):"number"==typeof a&&r.textContent!==""+a&&(e=["children",""+a]):s.hasOwnProperty(T)&&null!=a&&"onScroll"===T&&mr("scroll",r));switch(t){case"input":j(r),re(r,E,!0);break;case"textarea":j(r),oe(r);break;case"select":case"option":break;default:"function"==typeof E.onClick&&(r.onclick=Kr)}r=e,n.updateQueue=r,null!==r&&(n.flags|=4)}else{switch(T=9===a.nodeType?a:a.ownerDocument,e===de&&(e=Ne(t)),e===de?"script"===t?((e=T.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=T.createElement(t,{is:r.is}):(e=T.createElement(t),"select"===t&&(T=e,r.multiple?T.multiple=!0:r.size&&(T.size=r.size))):e=T.createElementNS(e,t),e[$r]=n,e[Jr]=r,Qi(e,n),n.stateNode=e,T=ce(t,r),t){case"dialog":mr("cancel",e),mr("close",e),a=r;break;case"iframe":case"object":case"embed":mr("load",e),a=r;break;case"video":case"audio":for(a=0;a<pr.length;a++)mr(pr[a],e);a=r;break;case"source":mr("error",e),a=r;break;case"img":case"image":case"link":mr("error",e),mr("load",e),a=r;break;case"details":mr("toggle",e),a=r;break;case"input":ee(e,r),a=J(e,r),mr("invalid",e);break;case"option":a=ae(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=_({},r,{value:void 0}),mr("invalid",e);break;case"textarea":se(e,r),a=Ee(e,r),mr("invalid",e);break;default:a=r}Ue(t,a);var o=a;for(E in o)if(o.hasOwnProperty(E)){var d=o[E];"style"===E?Ce(e,d):"dangerouslySetInnerHTML"===E?null!=(d=d?d.__html:void 0)&&Ae(e,d):"children"===E?"string"==typeof d?("textarea"!==t||""!==d)&&De(e,d):"number"==typeof d&&De(e,""+d):"suppressContentEditableWarning"!==E&&"suppressHydrationWarning"!==E&&"autoFocus"!==E&&(s.hasOwnProperty(E)?null!=d&&"onScroll"===E&&mr("scroll",e):null!=d&&l(e,E,d,T))}switch(t){case"input":j(e),re(e,r,!1);break;case"textarea":j(e),oe(e);break;case"option":null!=r.value&&e.setAttribute("value",""+Z(r.value));break;case"select":e.multiple=!!r.multiple,null!=(E=r.value)?ie(e,!!r.multiple,E,!1):null!=r.defaultValue&&ie(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Kr)}qr(t,r)&&(n.flags|=4)}null!==n.ref&&(n.flags|=128)}return null;case 6:if(e&&null!=n.stateNode)Wi(0,n,e.memoizedProps,r);else{if("string"!=typeof r&&null===n.stateNode)throw Error(i(166));t=wa(Ma.current),wa(Fa.current),Ha(n)?(r=n.stateNode,t=n.memoizedProps,r[$r]=n,r.nodeValue!==t&&(n.flags|=4)):((r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[$r]=n,n.stateNode=r)}return null;case 13:return o_(va),r=n.memoizedState,0!=(64&n.flags)?(n.lanes=t,n):(r=null!==r,t=!1,null===e?void 0!==n.memoizedProps.fallback&&Ha(n):t=null!==e.memoizedState,r&&!t&&0!=(2&n.mode)&&(null===e&&!0!==n.memoizedProps.unstable_avoidThisFallback||0!=(1&va.current)?0===vE&&(vE=3):(0!==vE&&3!==vE||(vE=4),null===wE||0==(134217727&KE)&&0==(134217727&YE)||As(wE,gE))),(r||t)&&(n.flags|=4),null);case 4:return ga(),null===e&&wr(n.stateNode.containerInfo),null;case 10:return ra(n),null;case 19:if(o_(va),null===(r=n.memoizedState))return null;if(E=0!=(64&n.flags),null===(T=r.rendering))if(E)aE(r,!1);else{if(0!==vE||null!==e&&0!=(64&e.flags))for(e=n.child;null!==e;){if(null!==(T=Va(e))){for(n.flags|=64,aE(r,!1),null!==(E=T.updateQueue)&&(n.updateQueue=E,n.flags|=4),null===r.lastEffect&&(n.firstEffect=null),n.lastEffect=r.lastEffect,r=t,t=n.child;null!==t;)e=r,(E=t).flags&=2,E.nextEffect=null,E.firstEffect=null,E.lastEffect=null,null===(T=E.alternate)?(E.childLanes=0,E.lanes=e,E.child=null,E.memoizedProps=null,E.memoizedState=null,E.updateQueue=null,E.dependencies=null,E.stateNode=null):(E.childLanes=T.childLanes,E.lanes=T.lanes,E.child=T.child,E.memoizedProps=T.memoizedProps,E.memoizedState=T.memoizedState,E.updateQueue=T.updateQueue,E.type=T.type,e=T.dependencies,E.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return d_(va,1&va.current|2),n.child}e=e.sibling}null!==r.tail&&q_()>xE&&(n.flags|=64,E=!0,aE(r,!1),n.lanes=33554432)}else{if(!E)if(null!==(e=Va(T))){if(n.flags|=64,E=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.flags|=4),aE(r,!0),null===r.tail&&"hidden"===r.tailMode&&!T.alternate&&!Ya)return null!==(n=n.lastEffect=r.lastEffect)&&(n.nextEffect=null),null}else 2*q_()-r.renderingStartTime>xE&&1073741824!==t&&(n.flags|=64,E=!0,aE(r,!1),n.lanes=33554432);r.isBackwards?(T.sibling=n.child,n.child=T):(null!==(t=r.last)?t.sibling=T:n.child=T,r.last=T)}return null!==r.tail?(t=r.tail,r.rendering=t,r.tail=t.sibling,r.lastEffect=n.lastEffect,r.renderingStartTime=q_(),t.sibling=null,n=va.current,d_(va,E?1&n|2:1&n),t):null;case 23:case 24:return Cs(),null!==e&&null!==e.memoizedState!=(null!==n.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(n.flags|=4),null}throw Error(i(156,n.tag))}function EE(e){switch(e.tag){case 1:A_(e.type)&&D_();var n=e.flags;return 4096&n?(e.flags=-4097&n|64,e):null;case 3:if(ga(),o_(O_),o_(N_),Wa(),0!=(64&(n=e.flags)))throw Error(i(285));return e.flags=-4097&n|64,e;case 5:return ya(e),null;case 13:return o_(va),4096&(n=e.flags)?(e.flags=-4097&n|64,e):null;case 19:return o_(va),null;case 4:return ga(),null;case 10:return ra(e),null;case 23:case 24:return Cs(),null;default:return null}}function sE(e,n){try{var t="",r=n;do{t+=H(r),r=r.return}while(r);var _=t}catch(a){_="\nError generating stack: "+a.message+"\n"+a.stack}return{value:e,source:n,stack:_}}function TE(e,n){try{console.error(n.value)}catch(t){setTimeout((function(){throw t}))}}Qi=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Zi=function(e,n,t,r){var a=e.memoizedProps;if(a!==r){e=n.stateNode,wa(Fa.current);var i,E=null;switch(t){case"input":a=J(e,a),r=J(e,r),E=[];break;case"option":a=ae(e,a),r=ae(e,r),E=[];break;case"select":a=_({},a,{value:void 0}),r=_({},r,{value:void 0}),E=[];break;case"textarea":a=Ee(e,a),r=Ee(e,r),E=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Kr)}for(d in Ue(t,r),t=null,a)if(!r.hasOwnProperty(d)&&a.hasOwnProperty(d)&&null!=a[d])if("style"===d){var T=a[d];for(i in T)T.hasOwnProperty(i)&&(t||(t={}),t[i]="")}else"dangerouslySetInnerHTML"!==d&&"children"!==d&&"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&"autoFocus"!==d&&(s.hasOwnProperty(d)?E||(E=[]):(E=E||[]).push(d,null));for(d in r){var o=r[d];if(T=null!=a?a[d]:void 0,r.hasOwnProperty(d)&&o!==T&&(null!=o||null!=T))if("style"===d)if(T){for(i in T)!T.hasOwnProperty(i)||o&&o.hasOwnProperty(i)||(t||(t={}),t[i]="");for(i in o)o.hasOwnProperty(i)&&T[i]!==o[i]&&(t||(t={}),t[i]=o[i])}else t||(E||(E=[]),E.push(d,t)),t=o;else"dangerouslySetInnerHTML"===d?(o=o?o.__html:void 0,T=T?T.__html:void 0,null!=o&&T!==o&&(E=E||[]).push(d,o)):"children"===d?"string"!=typeof o&&"number"!=typeof o||(E=E||[]).push(d,""+o):"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&(s.hasOwnProperty(d)?(null!=o&&"onScroll"===d&&mr("scroll",e),E||T===o||(E=[])):"object"==typeof o&&null!==o&&o.$$typeof===X?o.toString():(E=E||[]).push(d,o))}t&&(E=E||[]).push("style",t);var d=E;(n.updateQueue=d)&&(n.flags|=4)}},Wi=function(e,n,t,r){t!==r&&(n.flags|=4)};var oE="function"==typeof WeakMap?WeakMap:Map;function dE(e,n,t){(t=oa(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){WE||(WE=!0,jE=r),TE(0,n)},t}function IE(e,n,t){(t=oa(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var _=n.value;t.payload=function(){return TE(0,n),r(_)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(t.callback=function(){"function"!=typeof r&&(null===zE?zE=new Set([this]):zE.add(this),TE(0,n));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}var NE="function"==typeof WeakSet?WeakSet:Set;function OE(e){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(t){Bs(e,t)}else n.current=null}function uE(e,n){switch(n.tag){case 0:case 11:case 15:case 22:case 5:case 6:case 4:case 17:return;case 1:if(256&n.flags&&null!==e){var t=e.memoizedProps,r=e.memoizedState;n=(e=n.stateNode).getSnapshotBeforeUpdate(n.elementType===n.type?t:z_(n.type,t),r),e.__reactInternalSnapshotBeforeUpdate=n}return;case 3:return void(256&n.flags&&Qr(n.stateNode.containerInfo))}throw Error(i(163))}function RE(e,n,t){switch(t.tag){case 0:case 11:case 15:case 22:if(null!==(n=null!==(n=t.updateQueue)?n.lastEffect:null)){e=n=n.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==n)}if(null!==(n=null!==(n=t.updateQueue)?n.lastEffect:null)){e=n=n.next;do{var _=e;r=_.next,0!=(4&(_=_.tag))&&0!=(1&_)&&(ys(t,e),Xs(t,e)),e=r}while(e!==n)}return;case 1:return e=t.stateNode,4&t.flags&&(null===n?e.componentDidMount():(r=t.elementType===t.type?n.memoizedProps:z_(t.type,n.memoizedProps),e.componentDidUpdate(r,n.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(n=t.updateQueue)&&Oa(t,n,e));case 3:if(null!==(n=t.updateQueue)){if(e=null,null!==t.child)switch(t.child.tag){case 5:case 1:e=t.child.stateNode}Oa(t,n,e)}return;case 5:return e=t.stateNode,void(null===n&&4&t.flags&&qr(t.type,t.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:case 23:case 24:return;case 13:return void(null===t.memoizedState&&(t=t.alternate,null!==t&&(t=t.memoizedState,null!==t&&(t=t.dehydrated,null!==t&&Pn(t)))))}throw Error(i(163))}function AE(e,n){for(var t=e;;){if(5===t.tag){var r=t.stateNode;if(n)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=t.stateNode;var _=t.memoizedProps.style;_=null!=_&&_.hasOwnProperty("display")?_.display:null,r.style.display=he("display",_)}}else if(6===t.tag)t.stateNode.nodeValue=n?"":t.memoizedProps;else if((23!==t.tag&&24!==t.tag||null===t.memoizedState||t===e)&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}}function DE(e,n){if(U_&&"function"==typeof U_.onCommitFiberUnmount)try{U_.onCommitFiberUnmount(P_,n)}catch(a){}switch(n.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=n.updateQueue)&&null!==(e=e.lastEffect)){var t=e=e.next;do{var r=t,_=r.destroy;if(r=r.tag,void 0!==_)if(0!=(4&r))ys(n,t);else{r=n;try{_()}catch(a){Bs(r,a)}}t=t.next}while(t!==e)}break;case 1:if(OE(n),"function"==typeof(e=n.stateNode).componentWillUnmount)try{e.props=n.memoizedProps,e.state=n.memoizedState,e.componentWillUnmount()}catch(a){Bs(n,a)}break;case 5:OE(n);break;case 4:UE(e,n)}}function SE(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function lE(e){return 5===e.tag||3===e.tag||4===e.tag}function hE(e){e:{for(var n=e.return;null!==n;){if(lE(n))break e;n=n.return}throw Error(i(160))}var t=n;switch(n=t.stateNode,t.tag){case 5:var r=!1;break;case 3:case 4:n=n.containerInfo,r=!0;break;default:throw Error(i(161))}16&t.flags&&(De(n,""),t.flags&=-17);e:n:for(t=e;;){for(;null===t.sibling;){if(null===t.return||lE(t.return)){t=null;break e}t=t.return}for(t.sibling.return=t.return,t=t.sibling;5!==t.tag&&6!==t.tag&&18!==t.tag;){if(2&t.flags)continue n;if(null===t.child||4===t.tag)continue n;t.child.return=t,t=t.child}if(!(2&t.flags)){t=t.stateNode;break e}}r?CE(e,t,n):PE(e,t,n)}function CE(e,n,t){var r=e.tag,_=5===r||6===r;if(_)e=_?e.stateNode:e.stateNode.instance,n?8===t.nodeType?t.parentNode.insertBefore(e,n):t.insertBefore(e,n):(8===t.nodeType?(n=t.parentNode).insertBefore(e,t):(n=t).appendChild(e),null!=(t=t._reactRootContainer)||null!==n.onclick||(n.onclick=Kr));else if(4!==r&&null!==(e=e.child))for(CE(e,n,t),e=e.sibling;null!==e;)CE(e,n,t),e=e.sibling}function PE(e,n,t){var r=e.tag,_=5===r||6===r;if(_)e=_?e.stateNode:e.stateNode.instance,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==r&&null!==(e=e.child))for(PE(e,n,t),e=e.sibling;null!==e;)PE(e,n,t),e=e.sibling}function UE(e,n){for(var t,r,_=n,a=!1;;){if(!a){a=_.return;e:for(;;){if(null===a)throw Error(i(160));switch(t=a.stateNode,a.tag){case 5:r=!1;break e;case 3:case 4:t=t.containerInfo,r=!0;break e}a=a.return}a=!0}if(5===_.tag||6===_.tag){e:for(var E=e,s=_,T=s;;)if(DE(E,T),null!==T.child&&4!==T.tag)T.child.return=T,T=T.child;else{if(T===s)break e;for(;null===T.sibling;){if(null===T.return||T.return===s)break e;T=T.return}T.sibling.return=T.return,T=T.sibling}r?(E=t,s=_.stateNode,8===E.nodeType?E.parentNode.removeChild(s):E.removeChild(s)):t.removeChild(_.stateNode)}else if(4===_.tag){if(null!==_.child){t=_.stateNode.containerInfo,r=!0,_.child.return=_,_=_.child;continue}}else if(DE(e,_),null!==_.child){_.child.return=_,_=_.child;continue}if(_===n)break;for(;null===_.sibling;){if(null===_.return||_.return===n)return;4===(_=_.return).tag&&(a=!1)}_.sibling.return=_.return,_=_.sibling}}function cE(e,n){switch(n.tag){case 0:case 11:case 14:case 15:case 22:var t=n.updateQueue;if(null!==(t=null!==t?t.lastEffect:null)){var r=t=t.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==t)}return;case 1:case 12:case 17:return;case 5:if(null!=(t=n.stateNode)){r=n.memoizedProps;var _=null!==e?e.memoizedProps:r;e=n.type;var a=n.updateQueue;if(n.updateQueue=null,null!==a){for(t[Jr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&ne(t,r),ce(e,_),n=ce(e,r),_=0;_<a.length;_+=2){var E=a[_],s=a[_+1];"style"===E?Ce(t,s):"dangerouslySetInnerHTML"===E?Ae(t,s):"children"===E?De(t,s):l(t,E,s,n)}switch(e){case"input":te(t,r);break;case"textarea":Te(t,r);break;case"select":e=t._wrapperState.wasMultiple,t._wrapperState.wasMultiple=!!r.multiple,null!=(a=r.value)?ie(t,!!r.multiple,a,!1):e!==!!r.multiple&&(null!=r.defaultValue?ie(t,!!r.multiple,r.defaultValue,!0):ie(t,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===n.stateNode)throw Error(i(162));return void(n.stateNode.nodeValue=n.memoizedProps);case 3:return void((t=n.stateNode).hydrate&&(t.hydrate=!1,Pn(t.containerInfo)));case 13:return null!==n.memoizedState&&(kE=q_(),AE(n.child,!0)),void pE(n);case 19:return void pE(n);case 23:case 24:return void AE(n,null!==n.memoizedState)}throw Error(i(163))}function pE(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new NE),n.forEach((function(n){var r=Ys.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}function LE(e,n){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&(null!==(n=n.memoizedState)&&null===n.dehydrated)}var fE=Math.ceil,FE=h.ReactCurrentDispatcher,mE=h.ReactCurrentOwner,ME=0,wE=null,bE=null,gE=0,XE=0,yE=T_(0),vE=0,VE=null,BE=0,KE=0,YE=0,GE=0,qE=null,kE=0,xE=1/0;function HE(){xE=q_()+500}var QE,ZE=null,WE=!1,jE=null,zE=null,$E=!1,JE=null,es=90,ns=[],ts=[],rs=null,_s=0,as=null,is=-1,Es=0,ss=0,Ts=null,os=!1;function ds(){return 0!=(48&ME)?q_():-1!==is?is:is=q_()}function Is(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===k_()?1:2;if(0===Es&&(Es=BE),0!==j_.transition){0!==ss&&(ss=null!==qE?qE.pendingLanes:0),e=Es;var n=4186112&~ss;return 0===(n&=-n)&&(0===(n=(e=4186112&~e)&-e)&&(n=8192)),n}return e=k_(),0!=(4&ME)&&98===e?e=Yn(12,Es):e=Yn(e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),Es),e}function Ns(e,n,t){if(50<_s)throw _s=0,as=null,Error(i(185));if(null===(e=Os(e,n)))return null;kn(e,n,t),e===wE&&(YE|=n,4===vE&&As(e,gE));var r=k_();1===n?0!=(8&ME)&&0==(48&ME)?Ds(e):(us(e,t),0===ME&&(HE(),Z_())):(0==(4&ME)||98!==r&&99!==r||(null===rs?rs=new Set([e]):rs.add(e)),us(e,t)),qE=e}function Os(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}function us(e,n){for(var t=e.callbackNode,r=e.suspendedLanes,_=e.pingedLanes,a=e.expirationTimes,E=e.pendingLanes;0<E;){var s=31-xn(E),T=1<<s,o=a[s];if(-1===o){if(0==(T&r)||0!=(T&_)){o=n,Vn(T);var d=vn;a[s]=10<=d?o+250:6<=d?o+5e3:-1}}else o<=n&&(e.expiredLanes|=T);E&=~T}if(r=Bn(e,e===wE?gE:0),n=vn,0===r)null!==t&&(t!==v_&&L_(t),e.callbackNode=null,e.callbackPriority=0);else{if(null!==t){if(e.callbackPriority===n)return;t!==v_&&L_(t)}15===n?(t=Ds.bind(null,e),null===B_?(B_=[t],K_=p_(w_,W_)):B_.push(t),t=v_):14===n?t=Q_(99,Ds.bind(null,e)):(t=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(n),t=Q_(t,Rs.bind(null,e))),e.callbackPriority=n,e.callbackNode=t}}function Rs(e){if(is=-1,ss=Es=0,0!=(48&ME))throw Error(i(327));var n=e.callbackNode;if(gs()&&e.callbackNode!==n)return null;var t=Bn(e,e===wE?gE:0);if(0===t)return null;var r=t,_=ME;ME|=16;var a=cs();for(wE===e&&gE===r||(HE(),Ps(e,r));;)try{fs();break}catch(s){Us(e,s)}if(ta(),FE.current=a,ME=_,null!==bE?r=0:(wE=null,gE=0,r=vE),0!=(BE&YE))Ps(e,0);else if(0!==r){if(2===r&&(ME|=64,e.hydrate&&(e.hydrate=!1,Qr(e.containerInfo)),0!==(t=Kn(e))&&(r=ps(e,t))),1===r)throw n=VE,Ps(e,0),As(e,t),us(e,q_()),n;switch(e.finishedWork=e.current.alternate,e.finishedLanes=t,r){case 0:case 1:throw Error(i(345));case 2:case 5:Ms(e);break;case 3:if(As(e,t),(62914560&t)===t&&10<(r=kE+500-q_())){if(0!==Bn(e,0))break;if(((_=e.suspendedLanes)&t)!==t){ds(),e.pingedLanes|=e.suspendedLanes&_;break}e.timeoutHandle=xr(Ms.bind(null,e),r);break}Ms(e);break;case 4:if(As(e,t),(4186112&t)===t)break;for(r=e.eventTimes,_=-1;0<t;){var E=31-xn(t);a=1<<E,(E=r[E])>_&&(_=E),t&=~a}if(t=_,10<(t=(120>(t=q_()-t)?120:480>t?480:1080>t?1080:1920>t?1920:3e3>t?3e3:4320>t?4320:1960*fE(t/1960))-t)){e.timeoutHandle=xr(Ms.bind(null,e),t);break}Ms(e);break;default:throw Error(i(329))}}return us(e,q_()),e.callbackNode===n?Rs.bind(null,e):null}function As(e,n){for(n&=~GE,n&=~YE,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-xn(n),r=1<<t;e[t]=-1,n&=~r}}function Ds(e){if(0!=(48&ME))throw Error(i(327));if(gs(),e===wE&&0!=(e.expiredLanes&gE)){var n=gE,t=ps(e,n);0!=(BE&YE)&&(t=ps(e,n=Bn(e,n)))}else t=ps(e,n=Bn(e,0));if(0!==e.tag&&2===t&&(ME|=64,e.hydrate&&(e.hydrate=!1,Qr(e.containerInfo)),0!==(n=Kn(e))&&(t=ps(e,n))),1===t)throw t=VE,Ps(e,0),As(e,n),us(e,q_()),t;return e.finishedWork=e.current.alternate,e.finishedLanes=n,Ms(e),us(e,q_()),null}function Ss(e,n){var t=ME;ME|=1;try{return e(n)}finally{0===(ME=t)&&(HE(),Z_())}}function ls(e,n){var t=ME;ME&=-2,ME|=8;try{return e(n)}finally{0===(ME=t)&&(HE(),Z_())}}function hs(e,n){d_(yE,XE),XE|=n,BE|=n}function Cs(){XE=yE.current,o_(yE)}function Ps(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,Hr(t)),null!==bE)for(t=bE.return;null!==t;){var r=t;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&D_();break;case 3:ga(),o_(O_),o_(N_),Wa();break;case 5:ya(r);break;case 4:ga();break;case 13:case 19:o_(va);break;case 10:ra(r);break;case 23:case 24:Cs()}t=t.return}wE=e,bE=xs(e.current,null),gE=XE=BE=n,vE=0,VE=null,GE=YE=KE=0}function Us(e,n){for(;;){var t=bE;try{if(ta(),ja.current=Mi,ti){for(var r=Ja.memoizedState;null!==r;){var _=r.queue;null!==_&&(_.pending=null),r=r.next}ti=!1}if($a=0,ni=ei=Ja=null,ri=!1,mE.current=null,null===t||null===t.return){vE=1,VE=n,bE=null;break}e:{var a=e,i=t.return,E=t,s=n;if(n=gE,E.flags|=2048,E.firstEffect=E.lastEffect=null,null!==s&&"object"==typeof s&&"function"==typeof s.then){var T=s;if(0==(2&E.mode)){var o=E.alternate;o?(E.updateQueue=o.updateQueue,E.memoizedState=o.memoizedState,E.lanes=o.lanes):(E.updateQueue=null,E.memoizedState=null)}var d=0!=(1&va.current),I=i;do{var N;if(N=13===I.tag){var O=I.memoizedState;if(null!==O)N=null!==O.dehydrated;else{var u=I.memoizedProps;N=void 0!==u.fallback&&(!0!==u.unstable_avoidThisFallback||!d)}}if(N){var R=I.updateQueue;if(null===R){var A=new Set;A.add(T),I.updateQueue=A}else R.add(T);if(0==(2&I.mode)){if(I.flags|=64,E.flags|=16384,E.flags&=-2981,1===E.tag)if(null===E.alternate)E.tag=17;else{var D=oa(-1,1);D.tag=2,da(E,D)}E.lanes|=1;break e}s=void 0,E=n;var S=a.pingCache;if(null===S?(S=a.pingCache=new oE,s=new Set,S.set(T,s)):void 0===(s=S.get(T))&&(s=new Set,S.set(T,s)),!s.has(E)){s.add(E);var l=Ks.bind(null,a,T,E);T.then(l,l)}I.flags|=4096,I.lanes=n;break e}I=I.return}while(null!==I);s=Error((Q(E.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==vE&&(vE=2),s=sE(s,E),I=i;do{switch(I.tag){case 3:a=s,I.flags|=4096,n&=-n,I.lanes|=n,Ia(I,dE(0,a,n));break e;case 1:a=s;var h=I.type,C=I.stateNode;if(0==(64&I.flags)&&("function"==typeof h.getDerivedStateFromError||null!==C&&"function"==typeof C.componentDidCatch&&(null===zE||!zE.has(C)))){I.flags|=4096,n&=-n,I.lanes|=n,Ia(I,IE(I,a,n));break e}}I=I.return}while(null!==I)}ms(t)}catch(P){n=P,bE===t&&null!==t&&(bE=t=t.return);continue}break}}function cs(){var e=FE.current;return FE.current=Mi,null===e?Mi:e}function ps(e,n){var t=ME;ME|=16;var r=cs();for(wE===e&&gE===n||Ps(e,n);;)try{Ls();break}catch(_){Us(e,_)}if(ta(),ME=t,FE.current=r,null!==bE)throw Error(i(261));return wE=null,gE=0,vE}function Ls(){for(;null!==bE;)Fs(bE)}function fs(){for(;null!==bE&&!f_();)Fs(bE)}function Fs(e){var n=QE(e.alternate,e,XE);e.memoizedProps=e.pendingProps,null===n?ms(e):bE=n,mE.current=null}function ms(e){var n=e;do{var t=n.alternate;if(e=n.return,0==(2048&n.flags)){if(null!==(t=iE(t,n,XE)))return void(bE=t);if(24!==(t=n).tag&&23!==t.tag||null===t.memoizedState||0!=(1073741824&XE)||0==(4&t.mode)){for(var r=0,_=t.child;null!==_;)r|=_.lanes|_.childLanes,_=_.sibling;t.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=n.firstEffect),null!==n.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=n.firstEffect),e.lastEffect=n.lastEffect),1<n.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=n:e.firstEffect=n,e.lastEffect=n))}else{if(null!==(t=EE(n)))return t.flags&=2047,void(bE=t);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(n=n.sibling))return void(bE=n);bE=n=e}while(null!==n);0===vE&&(vE=5)}function Ms(e){var n=k_();return H_(99,ws.bind(null,e,n)),null}function ws(e,n){do{gs()}while(null!==JE);if(0!=(48&ME))throw Error(i(327));var t=e.finishedWork;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(i(177));e.callbackNode=null;var r=t.lanes|t.childLanes,_=r,a=e.pendingLanes&~_;e.pendingLanes=_,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=_,e.mutableReadLanes&=_,e.entangledLanes&=_,_=e.entanglements;for(var E=e.eventTimes,s=e.expirationTimes;0<a;){var T=31-xn(a),o=1<<T;_[T]=0,E[T]=-1,s[T]=-1,a&=~o}if(null!==rs&&0==(24&r)&&rs.has(e)&&rs.delete(e),e===wE&&(bE=wE=null,gE=0),1<t.flags?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,null!==r){if(_=ME,ME|=32,mE.current=null,Yr=jn,Ar(E=Rr())){if("selectionStart"in E)s={start:E.selectionStart,end:E.selectionEnd};else e:if(s=(s=E.ownerDocument)&&s.defaultView||window,(o=s.getSelection&&s.getSelection())&&0!==o.rangeCount){s=o.anchorNode,a=o.anchorOffset,T=o.focusNode,o=o.focusOffset;try{s.nodeType,T.nodeType}catch(p){s=null;break e}var d=0,I=-1,N=-1,O=0,u=0,R=E,A=null;n:for(;;){for(var D;R!==s||0!==a&&3!==R.nodeType||(I=d+a),R!==T||0!==o&&3!==R.nodeType||(N=d+o),3===R.nodeType&&(d+=R.nodeValue.length),null!==(D=R.firstChild);)A=R,R=D;for(;;){if(R===E)break n;if(A===s&&++O===a&&(I=d),A===T&&++u===o&&(N=d),null!==(D=R.nextSibling))break;A=(R=A).parentNode}R=D}s=-1===I||-1===N?null:{start:I,end:N}}else s=null;s=s||{start:0,end:0}}else s=null;Gr={focusedElem:E,selectionRange:s},jn=!1,Ts=null,os=!1,ZE=r;do{try{bs()}catch(p){if(null===ZE)throw Error(i(330));Bs(ZE,p),ZE=ZE.nextEffect}}while(null!==ZE);Ts=null,ZE=r;do{try{for(E=e;null!==ZE;){var S=ZE.flags;if(16&S&&De(ZE.stateNode,""),128&S){var l=ZE.alternate;if(null!==l){var h=l.ref;null!==h&&("function"==typeof h?h(null):h.current=null)}}switch(1038&S){case 2:hE(ZE),ZE.flags&=-3;break;case 6:hE(ZE),ZE.flags&=-3,cE(ZE.alternate,ZE);break;case 1024:ZE.flags&=-1025;break;case 1028:ZE.flags&=-1025,cE(ZE.alternate,ZE);break;case 4:cE(ZE.alternate,ZE);break;case 8:UE(E,s=ZE);var C=s.alternate;SE(s),null!==C&&SE(C)}ZE=ZE.nextEffect}}catch(p){if(null===ZE)throw Error(i(330));Bs(ZE,p),ZE=ZE.nextEffect}}while(null!==ZE);if(h=Gr,l=Rr(),S=h.focusedElem,E=h.selectionRange,l!==S&&S&&S.ownerDocument&&ur(S.ownerDocument.documentElement,S)){null!==E&&Ar(S)&&(l=E.start,void 0===(h=E.end)&&(h=l),"selectionStart"in S?(S.selectionStart=l,S.selectionEnd=Math.min(h,S.value.length)):(h=(l=S.ownerDocument||document)&&l.defaultView||window).getSelection&&(h=h.getSelection(),s=S.textContent.length,C=Math.min(E.start,s),E=void 0===E.end?C:Math.min(E.end,s),!h.extend&&C>E&&(s=E,E=C,C=s),s=Or(S,C),a=Or(S,E),s&&a&&(1!==h.rangeCount||h.anchorNode!==s.node||h.anchorOffset!==s.offset||h.focusNode!==a.node||h.focusOffset!==a.offset)&&((l=l.createRange()).setStart(s.node,s.offset),h.removeAllRanges(),C>E?(h.addRange(l),h.extend(a.node,a.offset)):(l.setEnd(a.node,a.offset),h.addRange(l))))),l=[];for(h=S;h=h.parentNode;)1===h.nodeType&&l.push({element:h,left:h.scrollLeft,top:h.scrollTop});for("function"==typeof S.focus&&S.focus(),S=0;S<l.length;S++)(h=l[S]).element.scrollLeft=h.left,h.element.scrollTop=h.top}jn=!!Yr,Gr=Yr=null,e.current=t,ZE=r;do{try{for(S=e;null!==ZE;){var P=ZE.flags;if(36&P&&RE(S,ZE.alternate,ZE),128&P){l=void 0;var U=ZE.ref;if(null!==U){var c=ZE.stateNode;ZE.tag,l=c,"function"==typeof U?U(l):U.current=l}}ZE=ZE.nextEffect}}catch(p){if(null===ZE)throw Error(i(330));Bs(ZE,p),ZE=ZE.nextEffect}}while(null!==ZE);ZE=null,V_(),ME=_}else e.current=t;if($E)$E=!1,JE=e,es=n;else for(ZE=r;null!==ZE;)n=ZE.nextEffect,ZE.nextEffect=null,8&ZE.flags&&((P=ZE).sibling=null,P.stateNode=null),ZE=n;if(0===(r=e.pendingLanes)&&(zE=null),1===r?e===as?_s++:(_s=0,as=e):_s=0,t=t.stateNode,U_&&"function"==typeof U_.onCommitFiberRoot)try{U_.onCommitFiberRoot(P_,t,void 0,64==(64&t.current.flags))}catch(p){}if(us(e,q_()),WE)throw WE=!1,e=jE,jE=null,e;return 0!=(8&ME)||Z_(),null}function bs(){for(;null!==ZE;){var e=ZE.alternate;os||null===Ts||(0!=(8&ZE.flags)?en(ZE,Ts)&&(os=!0):13===ZE.tag&&LE(e,ZE)&&en(ZE,Ts)&&(os=!0));var n=ZE.flags;0!=(256&n)&&uE(e,ZE),0==(512&n)||$E||($E=!0,Q_(97,(function(){return gs(),null}))),ZE=ZE.nextEffect}}function gs(){if(90!==es){var e=97<es?97:es;return es=90,H_(e,vs)}return!1}function Xs(e,n){ns.push(n,e),$E||($E=!0,Q_(97,(function(){return gs(),null})))}function ys(e,n){ts.push(n,e),$E||($E=!0,Q_(97,(function(){return gs(),null})))}function vs(){if(null===JE)return!1;var e=JE;if(JE=null,0!=(48&ME))throw Error(i(331));var n=ME;ME|=32;var t=ts;ts=[];for(var r=0;r<t.length;r+=2){var _=t[r],a=t[r+1],E=_.destroy;if(_.destroy=void 0,"function"==typeof E)try{E()}catch(T){if(null===a)throw Error(i(330));Bs(a,T)}}for(t=ns,ns=[],r=0;r<t.length;r+=2){_=t[r],a=t[r+1];try{var s=_.create;_.destroy=s()}catch(T){if(null===a)throw Error(i(330));Bs(a,T)}}for(s=e.current.firstEffect;null!==s;)e=s.nextEffect,s.nextEffect=null,8&s.flags&&(s.sibling=null,s.stateNode=null),s=e;return ME=n,Z_(),!0}function Vs(e,n,t){da(e,n=dE(0,n=sE(t,n),1)),n=ds(),null!==(e=Os(e,1))&&(kn(e,1,n),us(e,n))}function Bs(e,n){if(3===e.tag)Vs(e,e,n);else for(var t=e.return;null!==t;){if(3===t.tag){Vs(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===zE||!zE.has(r))){var _=IE(t,e=sE(n,e),1);if(da(t,_),_=ds(),null!==(t=Os(t,1)))kn(t,1,_),us(t,_);else if("function"==typeof r.componentDidCatch&&(null===zE||!zE.has(r)))try{r.componentDidCatch(n,e)}catch(a){}break}}t=t.return}}function Ks(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=ds(),e.pingedLanes|=e.suspendedLanes&t,wE===e&&(gE&t)===t&&(4===vE||3===vE&&(62914560&gE)===gE&&500>q_()-kE?Ps(e,0):GE|=t),us(e,n)}function Ys(e,n){var t=e.stateNode;null!==t&&t.delete(n),0===(n=0)&&(0==(2&(n=e.mode))?n=1:0==(4&n)?n=99===k_()?1:2:(0===Es&&(Es=BE),0===(n=Gn(62914560&~Es))&&(n=4194304))),t=ds(),null!==(e=Os(e,n))&&(kn(e,n,t),us(e,t))}function Gs(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function qs(e,n,t,r){return new Gs(e,n,t,r)}function ks(e){return!(!(e=e.prototype)||!e.isReactComponent)}function xs(e,n){var t=e.alternate;return null===t?((t=qs(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.nextEffect=null,t.firstEffect=null,t.lastEffect=null),t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function Hs(e,n,t,r,_,a){var E=2;if(r=e,"function"==typeof e)ks(e)&&(E=1);else if("string"==typeof e)E=5;else e:switch(e){case U:return Qs(t.children,_,a,n);case y:E=8,_|=16;break;case c:E=8,_|=1;break;case p:return(e=qs(12,t,n,8|_)).elementType=p,e.type=p,e.lanes=a,e;case m:return(e=qs(13,t,n,_)).type=m,e.elementType=m,e.lanes=a,e;case M:return(e=qs(19,t,n,_)).elementType=M,e.lanes=a,e;case v:return Zs(t,_,a,n);case V:return(e=qs(24,t,n,_)).elementType=V,e.lanes=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case L:E=10;break e;case f:E=9;break e;case F:E=11;break e;case w:E=14;break e;case b:E=16,r=null;break e;case g:E=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(n=qs(E,t,n,_)).elementType=e,n.type=r,n.lanes=a,n}function Qs(e,n,t,r){return(e=qs(7,e,r,n)).lanes=t,e}function Zs(e,n,t,r){return(e=qs(23,e,r,n)).elementType=v,e.lanes=t,e}function Ws(e,n,t){return(e=qs(6,e,null,n)).lanes=t,e}function js(e,n,t){return(n=qs(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function zs(e,n,t){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=t,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=qn(0),this.expirationTimes=qn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=qn(0),this.mutableSourceEagerHydrationData=null}function $s(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:P,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}function Js(e,n,t,r){var _=n.current,a=ds(),E=Is(_);e:if(t){n:{if(je(t=t._reactInternals)!==t||1!==t.tag)throw Error(i(170));var s=t;do{switch(s.tag){case 3:s=s.stateNode.context;break n;case 1:if(A_(s.type)){s=s.stateNode.__reactInternalMemoizedMergedChildContext;break n}}s=s.return}while(null!==s);throw Error(i(171))}if(1===t.tag){var T=t.type;if(A_(T)){t=l_(t,T,s);break e}}t=s}else t=I_;return null===n.context?n.context=t:n.pendingContext=t,(n=oa(a,E)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),da(_,n),Ns(_,E,a),E}function eT(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function nT(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function tT(e,n){nT(e,n),(e=e.alternate)&&nT(e,n)}function rT(e,n,t){var r=null!=t&&null!=t.hydrationOptions&&t.hydrationOptions.mutableSources||null;if(t=new zs(e,n,null!=t&&!0===t.hydrate),n=qs(3,null,null,2===n?7:1===n?3:0),t.current=n,n.stateNode=t,sa(n),e[e_]=t.current,wr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var _=(n=r[e])._getVersion;_=_(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,_]:t.mutableSourceEagerHydrationData.push(n,_)}this._internalRoot=t}function _T(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function aT(e,n,t,r,_){var a=t._reactRootContainer;if(a){var i=a._internalRoot;if("function"==typeof _){var E=_;_=function(){var e=eT(i);E.call(e)}}Js(n,i,e,_)}else{if(a=t._reactRootContainer=function(e,n){if(n||(n=!(!(n=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==n.nodeType||!n.hasAttribute("data-reactroot"))),!n)for(var t;t=e.lastChild;)e.removeChild(t);return new rT(e,0,n?{hydrate:!0}:void 0)}(t,r),i=a._internalRoot,"function"==typeof _){var s=_;_=function(){var e=eT(i);s.call(e)}}ls((function(){Js(n,i,e,_)}))}return eT(i)}function iT(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!_T(n))throw Error(i(200));return $s(e,n,null,t)}QE=function(e,n,t){var r=n.lanes;if(null!==e)if(e.memoizedProps!==n.pendingProps||O_.current)yi=!0;else{if(0==(t&r)){switch(yi=!1,n.tag){case 3:Hi(n),Qa();break;case 5:Xa(n);break;case 1:A_(n.type)&&h_(n);break;case 4:ba(n,n.stateNode.containerInfo);break;case 10:r=n.memoizedProps.value;var _=n.type._context;d_($_,_._currentValue),_._currentValue=r;break;case 13:if(null!==n.memoizedState)return 0!=(t&n.child.childLanes)?zi(e,n,t):(d_(va,1&va.current),null!==(n=_E(e,n,t))?n.sibling:null);d_(va,1&va.current);break;case 19:if(r=0!=(t&n.childLanes),0!=(64&e.flags)){if(r)return rE(e,n,t);n.flags|=64}if(null!==(_=n.memoizedState)&&(_.rendering=null,_.tail=null,_.lastEffect=null),d_(va,va.current),r)break;return null;case 23:case 24:return n.lanes=0,Yi(e,n,t)}return _E(e,n,t)}yi=0!=(16384&e.flags)}else yi=!1;switch(n.lanes=0,n.tag){case 2:if(r=n.type,null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),e=n.pendingProps,_=R_(n,N_.current),aa(n,t),_=ii(null,n,r,e,_,t),n.flags|=1,"object"==typeof _&&null!==_&&"function"==typeof _.render&&void 0===_.$$typeof){if(n.tag=1,n.memoizedState=null,n.updateQueue=null,A_(r)){var a=!0;h_(n)}else a=!1;n.memoizedState=null!==_.state&&void 0!==_.state?_.state:null,sa(n);var E=r.getDerivedStateFromProps;"function"==typeof E&&Ra(n,r,E,e),_.updater=Aa,n.stateNode=_,_._reactInternals=n,ha(n,r,e,t),n=xi(null,n,r,!0,a,t)}else n.tag=0,vi(null,n,_,t),n=n.child;return n;case 16:_=n.elementType;e:{switch(null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),e=n.pendingProps,_=(a=_._init)(_._payload),n.type=_,a=n.tag=function(e){if("function"==typeof e)return ks(e)?1:0;if(null!=e){if((e=e.$$typeof)===F)return 11;if(e===w)return 14}return 2}(_),e=z_(_,e),a){case 0:n=qi(null,n,_,e,t);break e;case 1:n=ki(null,n,_,e,t);break e;case 11:n=Vi(null,n,_,e,t);break e;case 14:n=Bi(null,n,_,z_(_.type,e),r,t);break e}throw Error(i(306,_,""))}return n;case 0:return r=n.type,_=n.pendingProps,qi(e,n,r,_=n.elementType===r?_:z_(r,_),t);case 1:return r=n.type,_=n.pendingProps,ki(e,n,r,_=n.elementType===r?_:z_(r,_),t);case 3:if(Hi(n),r=n.updateQueue,null===e||null===r)throw Error(i(282));if(r=n.pendingProps,_=null!==(_=n.memoizedState)?_.element:null,Ta(e,n),Na(n,r,null,t),(r=n.memoizedState.element)===_)Qa(),n=_E(e,n,t);else{if((a=(_=n.stateNode).hydrate)&&(Ka=Zr(n.stateNode.containerInfo.firstChild),Ba=n,a=Ya=!0),a){if(null!=(e=_.mutableSourceEagerHydrationData))for(_=0;_<e.length;_+=2)(a=e[_])._workInProgressVersionPrimary=e[_+1],Za.push(a);for(t=La(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|1024,t=t.sibling}else vi(e,n,r,t),Qa();n=n.child}return n;case 5:return Xa(n),null===e&&ka(n),r=n.type,_=n.pendingProps,a=null!==e?e.memoizedProps:null,E=_.children,kr(r,_)?E=null:null!==a&&kr(r,a)&&(n.flags|=16),Gi(e,n),vi(e,n,E,t),n.child;case 6:return null===e&&ka(n),null;case 13:return zi(e,n,t);case 4:return ba(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=pa(n,null,r,t):vi(e,n,r,t),n.child;case 11:return r=n.type,_=n.pendingProps,Vi(e,n,r,_=n.elementType===r?_:z_(r,_),t);case 7:return vi(e,n,n.pendingProps,t),n.child;case 8:case 12:return vi(e,n,n.pendingProps.children,t),n.child;case 10:e:{r=n.type._context,_=n.pendingProps,E=n.memoizedProps,a=_.value;var s=n.type._context;if(d_($_,s._currentValue),s._currentValue=a,null!==E)if(s=E.value,0===(a=or(s,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(s,a):1073741823))){if(E.children===_.children&&!O_.current){n=_E(e,n,t);break e}}else for(null!==(s=n.child)&&(s.return=n);null!==s;){var T=s.dependencies;if(null!==T){E=s.child;for(var o=T.firstContext;null!==o;){if(o.context===r&&0!=(o.observedBits&a)){1===s.tag&&((o=oa(-1,t&-t)).tag=2,da(s,o)),s.lanes|=t,null!==(o=s.alternate)&&(o.lanes|=t),_a(s.return,t),T.lanes|=t;break}o=o.next}}else E=10===s.tag&&s.type===n.type?null:s.child;if(null!==E)E.return=s;else for(E=s;null!==E;){if(E===n){E=null;break}if(null!==(s=E.sibling)){s.return=E.return,E=s;break}E=E.return}s=E}vi(e,n,_.children,t),n=n.child}return n;case 9:return _=n.type,r=(a=n.pendingProps).children,aa(n,t),r=r(_=ia(_,a.unstable_observedBits)),n.flags|=1,vi(e,n,r,t),n.child;case 14:return a=z_(_=n.type,n.pendingProps),Bi(e,n,_,a=z_(_.type,a),r,t);case 15:return Ki(e,n,n.type,n.pendingProps,r,t);case 17:return r=n.type,_=n.pendingProps,_=n.elementType===r?_:z_(r,_),null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),n.tag=1,A_(r)?(e=!0,h_(n)):e=!1,aa(n,t),Sa(n,r,_),ha(n,r,_,t),xi(null,n,r,!0,e,t);case 19:return rE(e,n,t);case 23:case 24:return Yi(e,n,t)}throw Error(i(156,n.tag))},rT.prototype.render=function(e){Js(e,this._internalRoot,null,null)},rT.prototype.unmount=function(){var e=this._internalRoot,n=e.containerInfo;Js(null,e,null,(function(){n[e_]=null}))},nn=function(e){13===e.tag&&(Ns(e,4,ds()),tT(e,4))},tn=function(e){13===e.tag&&(Ns(e,67108864,ds()),tT(e,67108864))},rn=function(e){if(13===e.tag){var n=ds(),t=Is(e);Ns(e,t,n),tT(e,t)}},_n=function(e,n){return n()},Le=function(e,n,t){switch(n){case"input":if(te(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var _=a_(r);if(!_)throw Error(i(90));z(r),te(r,_)}}}break;case"textarea":Te(e,t);break;case"select":null!=(n=t.value)&&ie(e,!!t.multiple,n,!1)}},be=Ss,ge=function(e,n,t,r,_){var a=ME;ME|=4;try{return H_(98,e.bind(null,n,t,r,_))}finally{0===(ME=a)&&(HE(),Z_())}},Xe=function(){0==(49&ME)&&(function(){if(null!==rs){var e=rs;rs=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,us(e,q_())}))}Z_()}(),gs())},ye=function(e,n){var t=ME;ME|=2;try{return e(n)}finally{0===(ME=t)&&(HE(),Z_())}};var ET={Events:[r_,__,a_,Me,we,gs,{current:!1}]},sT={findFiberByHostInstance:t_,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},TT={bundleType:sT.bundleType,version:sT.version,rendererPackageName:sT.rendererPackageName,rendererConfig:sT.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:h.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Je(e))?null:e.stateNode},findFiberByHostInstance:sT.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var oT=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!oT.isDisabled&&oT.supportsFiber)try{P_=oT.inject(TT),U_=oT}catch(Re){}}n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ET,n.createPortal=iT,n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternals;if(void 0===n){if("function"==typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return e=null===(e=Je(n))?null:e.stateNode},n.flushSync=function(e,n){var t=ME;if(0!=(48&t))return e(n);ME|=1;try{if(e)return H_(99,e.bind(null,n))}finally{ME=t,Z_()}},n.hydrate=function(e,n,t){if(!_T(n))throw Error(i(200));return aT(null,e,n,!0,t)},n.render=function(e,n,t){if(!_T(n))throw Error(i(200));return aT(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!_T(e))throw Error(i(40));return!!e._reactRootContainer&&(ls((function(){aT(null,null,e,!1,(function(){e._reactRootContainer=null,e[e_]=null}))})),!0)},n.unstable_batchedUpdates=Ss,n.unstable_createPortal=function(e,n){return iT(e,n,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},n.unstable_renderSubtreeIntoContainer=function(e,n,t,r){if(!_T(t))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return aT(e,n,t,!1,r)},n.version="17.0.2"},73935:(e,n,t)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(n){console.error(n)}}(),e.exports=t(64448)},69590:e=>{var n="undefined"!=typeof Element,t="function"==typeof Map,r="function"==typeof Set,_="function"==typeof ArrayBuffer&&!!ArrayBuffer.isView;function a(e,i){if(e===i)return!0;if(e&&i&&"object"==typeof e&&"object"==typeof i){if(e.constructor!==i.constructor)return!1;var E,s,T,o;if(Array.isArray(e)){if((E=e.length)!=i.length)return!1;for(s=E;0!=s--;)if(!a(e[s],i[s]))return!1;return!0}if(t&&e instanceof Map&&i instanceof Map){if(e.size!==i.size)return!1;for(o=e.entries();!(s=o.next()).done;)if(!i.has(s.value[0]))return!1;for(o=e.entries();!(s=o.next()).done;)if(!a(s.value[1],i.get(s.value[0])))return!1;return!0}if(r&&e instanceof Set&&i instanceof Set){if(e.size!==i.size)return!1;for(o=e.entries();!(s=o.next()).done;)if(!i.has(s.value[0]))return!1;return!0}if(_&&ArrayBuffer.isView(e)&&ArrayBuffer.isView(i)){if((E=e.length)!=i.length)return!1;for(s=E;0!=s--;)if(e[s]!==i[s])return!1;return!0}if(e.constructor===RegExp)return e.source===i.source&&e.flags===i.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===i.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===i.toString();if((E=(T=Object.keys(e)).length)!==Object.keys(i).length)return!1;for(s=E;0!=s--;)if(!Object.prototype.hasOwnProperty.call(i,T[s]))return!1;if(n&&e instanceof Element)return!1;for(s=E;0!=s--;)if(("_owner"!==T[s]&&"__v"!==T[s]&&"__o"!==T[s]||!e.$$typeof)&&!a(e[T[s]],i[T[s]]))return!1;return!0}return e!=e&&i!=i}e.exports=function(e,n){try{return a(e,n)}catch(t){if((t.message||"").match(/stack|recursion/i))return console.warn("react-fast-compare cannot handle circular refs"),!1;throw t}}},70405:(e,n,t)=>{"use strict";t.d(n,{B6:()=>x,ql:()=>J});var r=t(67294),_=t(45697),a=t.n(_),i=t(69590),E=t.n(i),s=t(41143),T=t.n(s),o=t(96774),d=t.n(o);function I(){return I=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},I.apply(this,arguments)}function N(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,O(e,n)}function O(e,n){return O=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e},O(e,n)}function u(e,n){if(null==e)return{};var t,r,_={},a=Object.keys(e);for(r=0;r<a.length;r++)n.indexOf(t=a[r])>=0||(_[t]=e[t]);return _}var R={BASE:"base",BODY:"body",HEAD:"head",HTML:"html",LINK:"link",META:"meta",NOSCRIPT:"noscript",SCRIPT:"script",STYLE:"style",TITLE:"title",FRAGMENT:"Symbol(react.fragment)"},A={rel:["amphtml","canonical","alternate"]},D={type:["application/ld+json"]},S={charset:"",name:["robots","description"],property:["og:type","og:title","og:url","og:image","og:image:alt","og:description","twitter:url","twitter:title","twitter:description","twitter:image","twitter:image:alt","twitter:card","twitter:site"]},l=Object.keys(R).map((function(e){return R[e]})),h={accesskey:"accessKey",charset:"charSet",class:"className",contenteditable:"contentEditable",contextmenu:"contextMenu","http-equiv":"httpEquiv",itemprop:"itemProp",tabindex:"tabIndex"},C=Object.keys(h).reduce((function(e,n){return e[h[n]]=n,e}),{}),P=function(e,n){for(var t=e.length-1;t>=0;t-=1){var r=e[t];if(Object.prototype.hasOwnProperty.call(r,n))return r[n]}return null},U=function(e){var n=P(e,R.TITLE),t=P(e,"titleTemplate");if(Array.isArray(n)&&(n=n.join("")),t&&n)return t.replace(/%s/g,(function(){return n}));var r=P(e,"defaultTitle");return n||r||void 0},c=function(e){return P(e,"onChangeClientState")||function(){}},p=function(e,n){return n.filter((function(n){return void 0!==n[e]})).map((function(n){return n[e]})).reduce((function(e,n){return I({},e,n)}),{})},L=function(e,n){return n.filter((function(e){return void 0!==e[R.BASE]})).map((function(e){return e[R.BASE]})).reverse().reduce((function(n,t){if(!n.length)for(var r=Object.keys(t),_=0;_<r.length;_+=1){var a=r[_].toLowerCase();if(-1!==e.indexOf(a)&&t[a])return n.concat(t)}return n}),[])},f=function(e,n,t){var r={};return t.filter((function(n){return!!Array.isArray(n[e])||(void 0!==n[e]&&console&&"function"==typeof console.warn&&console.warn("Helmet: "+e+' should be of type "Array". Instead found type "'+typeof n[e]+'"'),!1)})).map((function(n){return n[e]})).reverse().reduce((function(e,t){var _={};t.filter((function(e){for(var t,a=Object.keys(e),i=0;i<a.length;i+=1){var E=a[i],s=E.toLowerCase();-1===n.indexOf(s)||"rel"===t&&"canonical"===e[t].toLowerCase()||"rel"===s&&"stylesheet"===e[s].toLowerCase()||(t=s),-1===n.indexOf(E)||"innerHTML"!==E&&"cssText"!==E&&"itemprop"!==E||(t=E)}if(!t||!e[t])return!1;var T=e[t].toLowerCase();return r[t]||(r[t]={}),_[t]||(_[t]={}),!r[t][T]&&(_[t][T]=!0,!0)})).reverse().forEach((function(n){return e.push(n)}));for(var a=Object.keys(_),i=0;i<a.length;i+=1){var E=a[i],s=I({},r[E],_[E]);r[E]=s}return e}),[]).reverse()},F=function(e,n){if(Array.isArray(e)&&e.length)for(var t=0;t<e.length;t+=1)if(e[t][n])return!0;return!1},m=function(e){return Array.isArray(e)?e.join(""):e},M=function(e,n){return Array.isArray(e)?e.reduce((function(e,t){return function(e,n){for(var t=Object.keys(e),r=0;r<t.length;r+=1)if(n[t[r]]&&n[t[r]].includes(e[t[r]]))return!0;return!1}(t,n)?e.priority.push(t):e.default.push(t),e}),{priority:[],default:[]}):{default:e}},w=function(e,n){var t;return I({},e,((t={})[n]=void 0,t))},b=[R.NOSCRIPT,R.SCRIPT,R.STYLE],g=function(e,n){return void 0===n&&(n=!0),!1===n?String(e):String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")},X=function(e){return Object.keys(e).reduce((function(n,t){var r=void 0!==e[t]?t+'="'+e[t]+'"':""+t;return n?n+" "+r:r}),"")},y=function(e,n){return void 0===n&&(n={}),Object.keys(e).reduce((function(n,t){return n[h[t]||t]=e[t],n}),n)},v=function(e,n){return n.map((function(n,t){var _,a=((_={key:t})["data-rh"]=!0,_);return Object.keys(n).forEach((function(e){var t=h[e]||e;"innerHTML"===t||"cssText"===t?a.dangerouslySetInnerHTML={__html:n.innerHTML||n.cssText}:a[t]=n[e]})),r.createElement(e,a)}))},V=function(e,n,t){switch(e){case R.TITLE:return{toComponent:function(){return t=n.titleAttributes,(_={key:e=n.title})["data-rh"]=!0,a=y(t,_),[r.createElement(R.TITLE,a,e)];var e,t,_,a},toString:function(){return function(e,n,t,r){var _=X(t),a=m(n);return _?"<"+e+' data-rh="true" '+_+">"+g(a,r)+"</"+e+">":"<"+e+' data-rh="true">'+g(a,r)+"</"+e+">"}(e,n.title,n.titleAttributes,t)}};case"bodyAttributes":case"htmlAttributes":return{toComponent:function(){return y(n)},toString:function(){return X(n)}};default:return{toComponent:function(){return v(e,n)},toString:function(){return function(e,n,t){return n.reduce((function(n,r){var _=Object.keys(r).filter((function(e){return!("innerHTML"===e||"cssText"===e)})).reduce((function(e,n){var _=void 0===r[n]?n:n+'="'+g(r[n],t)+'"';return e?e+" "+_:_}),""),a=r.innerHTML||r.cssText||"",i=-1===b.indexOf(e);return n+"<"+e+' data-rh="true" '+_+(i?"/>":">"+a+"</"+e+">")}),"")}(e,n,t)}}}},B=function(e){var n=e.baseTag,t=e.bodyAttributes,r=e.encode,_=e.htmlAttributes,a=e.noscriptTags,i=e.styleTags,E=e.title,s=void 0===E?"":E,T=e.titleAttributes,o=e.linkTags,d=e.metaTags,I=e.scriptTags,N={toComponent:function(){},toString:function(){return""}};if(e.prioritizeSeoTags){var O=function(e){var n=e.linkTags,t=e.scriptTags,r=e.encode,_=M(e.metaTags,S),a=M(n,A),i=M(t,D);return{priorityMethods:{toComponent:function(){return[].concat(v(R.META,_.priority),v(R.LINK,a.priority),v(R.SCRIPT,i.priority))},toString:function(){return V(R.META,_.priority,r)+" "+V(R.LINK,a.priority,r)+" "+V(R.SCRIPT,i.priority,r)}},metaTags:_.default,linkTags:a.default,scriptTags:i.default}}(e);N=O.priorityMethods,o=O.linkTags,d=O.metaTags,I=O.scriptTags}return{priority:N,base:V(R.BASE,n,r),bodyAttributes:V("bodyAttributes",t,r),htmlAttributes:V("htmlAttributes",_,r),link:V(R.LINK,o,r),meta:V(R.META,d,r),noscript:V(R.NOSCRIPT,a,r),script:V(R.SCRIPT,I,r),style:V(R.STYLE,i,r),title:V(R.TITLE,{title:s,titleAttributes:T},r)}},K=[],Y=function(e,n){var t=this;void 0===n&&(n="undefined"!=typeof document),this.instances=[],this.value={setHelmet:function(e){t.context.helmet=e},helmetInstances:{get:function(){return t.canUseDOM?K:t.instances},add:function(e){(t.canUseDOM?K:t.instances).push(e)},remove:function(e){var n=(t.canUseDOM?K:t.instances).indexOf(e);(t.canUseDOM?K:t.instances).splice(n,1)}}},this.context=e,this.canUseDOM=n,n||(e.helmet=B({baseTag:[],bodyAttributes:{},encodeSpecialCharacters:!0,htmlAttributes:{},linkTags:[],metaTags:[],noscriptTags:[],scriptTags:[],styleTags:[],title:"",titleAttributes:{}}))},G=r.createContext({}),q=a().shape({setHelmet:a().func,helmetInstances:a().shape({get:a().func,add:a().func,remove:a().func})}),k="undefined"!=typeof document,x=function(e){function n(t){var r;return(r=e.call(this,t)||this).helmetData=new Y(r.props.context,n.canUseDOM),r}return N(n,e),n.prototype.render=function(){return r.createElement(G.Provider,{value:this.helmetData.value},this.props.children)},n}(r.Component);x.canUseDOM=k,x.propTypes={context:a().shape({helmet:a().shape()}),children:a().node.isRequired},x.defaultProps={context:{}},x.displayName="HelmetProvider";var H=function(e,n){var t,r=document.head||document.querySelector(R.HEAD),_=r.querySelectorAll(e+"[data-rh]"),a=[].slice.call(_),i=[];return n&&n.length&&n.forEach((function(n){var r=document.createElement(e);for(var _ in n)Object.prototype.hasOwnProperty.call(n,_)&&("innerHTML"===_?r.innerHTML=n.innerHTML:"cssText"===_?r.styleSheet?r.styleSheet.cssText=n.cssText:r.appendChild(document.createTextNode(n.cssText)):r.setAttribute(_,void 0===n[_]?"":n[_]));r.setAttribute("data-rh","true"),a.some((function(e,n){return t=n,r.isEqualNode(e)}))?a.splice(t,1):i.push(r)})),a.forEach((function(e){return e.parentNode.removeChild(e)})),i.forEach((function(e){return r.appendChild(e)})),{oldTags:a,newTags:i}},Q=function(e,n){var t=document.getElementsByTagName(e)[0];if(t){for(var r=t.getAttribute("data-rh"),_=r?r.split(","):[],a=[].concat(_),i=Object.keys(n),E=0;E<i.length;E+=1){var s=i[E],T=n[s]||"";t.getAttribute(s)!==T&&t.setAttribute(s,T),-1===_.indexOf(s)&&_.push(s);var o=a.indexOf(s);-1!==o&&a.splice(o,1)}for(var d=a.length-1;d>=0;d-=1)t.removeAttribute(a[d]);_.length===a.length?t.removeAttribute("data-rh"):t.getAttribute("data-rh")!==i.join(",")&&t.setAttribute("data-rh",i.join(","))}},Z=function(e,n){var t=e.baseTag,r=e.htmlAttributes,_=e.linkTags,a=e.metaTags,i=e.noscriptTags,E=e.onChangeClientState,s=e.scriptTags,T=e.styleTags,o=e.title,d=e.titleAttributes;Q(R.BODY,e.bodyAttributes),Q(R.HTML,r),function(e,n){void 0!==e&&document.title!==e&&(document.title=m(e)),Q(R.TITLE,n)}(o,d);var I={baseTag:H(R.BASE,t),linkTags:H(R.LINK,_),metaTags:H(R.META,a),noscriptTags:H(R.NOSCRIPT,i),scriptTags:H(R.SCRIPT,s),styleTags:H(R.STYLE,T)},N={},O={};Object.keys(I).forEach((function(e){var n=I[e],t=n.newTags,r=n.oldTags;t.length&&(N[e]=t),r.length&&(O[e]=I[e].oldTags)})),n&&n(),E(e,N,O)},W=null,j=function(e){function n(){for(var n,t=arguments.length,r=new Array(t),_=0;_<t;_++)r[_]=arguments[_];return(n=e.call.apply(e,[this].concat(r))||this).rendered=!1,n}N(n,e);var t=n.prototype;return t.shouldComponentUpdate=function(e){return!d()(e,this.props)},t.componentDidUpdate=function(){this.emitChange()},t.componentWillUnmount=function(){this.props.context.helmetInstances.remove(this),this.emitChange()},t.emitChange=function(){var e,n,t=this.props.context,r=t.setHelmet,_=null,a=(e=t.helmetInstances.get().map((function(e){var n=I({},e.props);return delete n.context,n})),{baseTag:L(["href"],e),bodyAttributes:p("bodyAttributes",e),defer:P(e,"defer"),encode:P(e,"encodeSpecialCharacters"),htmlAttributes:p("htmlAttributes",e),linkTags:f(R.LINK,["rel","href"],e),metaTags:f(R.META,["name","charset","http-equiv","property","itemprop"],e),noscriptTags:f(R.NOSCRIPT,["innerHTML"],e),onChangeClientState:c(e),scriptTags:f(R.SCRIPT,["src","innerHTML"],e),styleTags:f(R.STYLE,["cssText"],e),title:U(e),titleAttributes:p("titleAttributes",e),prioritizeSeoTags:F(e,"prioritizeSeoTags")});x.canUseDOM?(n=a,W&&cancelAnimationFrame(W),n.defer?W=requestAnimationFrame((function(){Z(n,(function(){W=null}))})):(Z(n),W=null)):B&&(_=B(a)),r(_)},t.init=function(){this.rendered||(this.rendered=!0,this.props.context.helmetInstances.add(this),this.emitChange())},t.render=function(){return this.init(),null},n}(r.Component);j.propTypes={context:q.isRequired},j.displayName="HelmetDispatcher";var z=["children"],$=["children"],J=function(e){function n(){return e.apply(this,arguments)||this}N(n,e);var t=n.prototype;return t.shouldComponentUpdate=function(e){return!E()(w(this.props,"helmetData"),w(e,"helmetData"))},t.mapNestedChildrenToProps=function(e,n){if(!n)return null;switch(e.type){case R.SCRIPT:case R.NOSCRIPT:return{innerHTML:n};case R.STYLE:return{cssText:n};default:throw new Error("<"+e.type+" /> elements are self-closing and can not contain children. Refer to our API for more information.")}},t.flattenArrayTypeChildren=function(e){var n,t=e.child,r=e.arrayTypeChildren;return I({},r,((n={})[t.type]=[].concat(r[t.type]||[],[I({},e.newChildProps,this.mapNestedChildrenToProps(t,e.nestedChildren))]),n))},t.mapObjectTypeChildren=function(e){var n,t,r=e.child,_=e.newProps,a=e.newChildProps,i=e.nestedChildren;switch(r.type){case R.TITLE:return I({},_,((n={})[r.type]=i,n.titleAttributes=I({},a),n));case R.BODY:return I({},_,{bodyAttributes:I({},a)});case R.HTML:return I({},_,{htmlAttributes:I({},a)});default:return I({},_,((t={})[r.type]=I({},a),t))}},t.mapArrayTypeChildrenToProps=function(e,n){var t=I({},n);return Object.keys(e).forEach((function(n){var r;t=I({},t,((r={})[n]=e[n],r))})),t},t.warnOnInvalidChildren=function(e,n){return T()(l.some((function(n){return e.type===n})),"function"==typeof e.type?"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.":"Only elements types "+l.join(", ")+" are allowed. Helmet does not support rendering <"+e.type+"> elements. Refer to our API for more information."),T()(!n||"string"==typeof n||Array.isArray(n)&&!n.some((function(e){return"string"!=typeof e})),"Helmet expects a string as a child of <"+e.type+">. Did you forget to wrap your children in braces? ( <"+e.type+">{``}</"+e.type+"> ) Refer to our API for more information."),!0},t.mapChildrenToProps=function(e,n){var t=this,_={};return r.Children.forEach(e,(function(e){if(e&&e.props){var r=e.props,a=r.children,i=u(r,z),E=Object.keys(i).reduce((function(e,n){return e[C[n]||n]=i[n],e}),{}),s=e.type;switch("symbol"==typeof s?s=s.toString():t.warnOnInvalidChildren(e,a),s){case R.FRAGMENT:n=t.mapChildrenToProps(a,n);break;case R.LINK:case R.META:case R.NOSCRIPT:case R.SCRIPT:case R.STYLE:_=t.flattenArrayTypeChildren({child:e,arrayTypeChildren:_,newChildProps:E,nestedChildren:a});break;default:n=t.mapObjectTypeChildren({child:e,newProps:n,newChildProps:E,nestedChildren:a})}}})),this.mapArrayTypeChildrenToProps(_,n)},t.render=function(){var e=this.props,n=e.children,t=u(e,$),_=I({},t),a=t.helmetData;return n&&(_=this.mapChildrenToProps(n,_)),!a||a instanceof Y||(a=new Y(a.context,a.instances)),a?r.createElement(j,I({},_,{context:a.value,helmetData:void 0})):r.createElement(G.Consumer,null,(function(e){return r.createElement(j,I({},_,{context:e}))}))},n}(r.Component);J.propTypes={base:a().object,bodyAttributes:a().object,children:a().oneOfType([a().arrayOf(a().node),a().node]),defaultTitle:a().string,defer:a().bool,encodeSpecialCharacters:a().bool,htmlAttributes:a().object,link:a().arrayOf(a().object),meta:a().arrayOf(a().object),noscript:a().arrayOf(a().object),onChangeClientState:a().func,script:a().arrayOf(a().object),style:a().arrayOf(a().object),title:a().string,titleAttributes:a().object,titleTemplate:a().string,prioritizeSeoTags:a().bool,helmetData:a().object},J.defaultProps={defer:!0,encodeSpecialCharacters:!0,prioritizeSeoTags:!1},J.displayName="Helmet"},69921:(e,n)=>{"use strict";var t="function"==typeof Symbol&&Symbol.for,r=t?Symbol.for("react.element"):60103,_=t?Symbol.for("react.portal"):60106,a=t?Symbol.for("react.fragment"):60107,i=t?Symbol.for("react.strict_mode"):60108,E=t?Symbol.for("react.profiler"):60114,s=t?Symbol.for("react.provider"):60109,T=t?Symbol.for("react.context"):60110,o=t?Symbol.for("react.async_mode"):60111,d=t?Symbol.for("react.concurrent_mode"):60111,I=t?Symbol.for("react.forward_ref"):60112,N=t?Symbol.for("react.suspense"):60113,O=t?Symbol.for("react.suspense_list"):60120,u=t?Symbol.for("react.memo"):60115,R=t?Symbol.for("react.lazy"):60116,A=t?Symbol.for("react.block"):60121,D=t?Symbol.for("react.fundamental"):60117,S=t?Symbol.for("react.responder"):60118,l=t?Symbol.for("react.scope"):60119;function h(e){if("object"==typeof e&&null!==e){var n=e.$$typeof;switch(n){case r:switch(e=e.type){case o:case d:case a:case E:case i:case N:return e;default:switch(e=e&&e.$$typeof){case T:case I:case R:case u:case s:return e;default:return n}}case _:return n}}}function C(e){return h(e)===d}n.AsyncMode=o,n.ConcurrentMode=d,n.ContextConsumer=T,n.ContextProvider=s,n.Element=r,n.ForwardRef=I,n.Fragment=a,n.Lazy=R,n.Memo=u,n.Portal=_,n.Profiler=E,n.StrictMode=i,n.Suspense=N,n.isAsyncMode=function(e){return C(e)||h(e)===o},n.isConcurrentMode=C,n.isContextConsumer=function(e){return h(e)===T},n.isContextProvider=function(e){return h(e)===s},n.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},n.isForwardRef=function(e){return h(e)===I},n.isFragment=function(e){return h(e)===a},n.isLazy=function(e){return h(e)===R},n.isMemo=function(e){return h(e)===u},n.isPortal=function(e){return h(e)===_},n.isProfiler=function(e){return h(e)===E},n.isStrictMode=function(e){return h(e)===i},n.isSuspense=function(e){return h(e)===N},n.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===d||e===E||e===i||e===N||e===O||"object"==typeof e&&null!==e&&(e.$$typeof===R||e.$$typeof===u||e.$$typeof===s||e.$$typeof===T||e.$$typeof===I||e.$$typeof===D||e.$$typeof===S||e.$$typeof===l||e.$$typeof===A)},n.typeOf=h},59864:(e,n,t)=>{"use strict";e.exports=t(69921)},68356:(e,n,t)=>{"use strict";function r(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n}function _(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(){return i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},i.apply(this,arguments)}var E=t(67294),s=t(45697),T=[],o=[];function d(e){var n=e(),t={loading:!0,loaded:null,error:null};return t.promise=n.then((function(e){return t.loading=!1,t.loaded=e,e})).catch((function(e){throw t.loading=!1,t.error=e,e})),t}function I(e){var n={loading:!1,loaded:{},error:null},t=[];try{Object.keys(e).forEach((function(r){var _=d(e[r]);_.loading?n.loading=!0:(n.loaded[r]=_.loaded,n.error=_.error),t.push(_.promise),_.promise.then((function(e){n.loaded[r]=e})).catch((function(e){n.error=e}))}))}catch(r){n.error=r}return n.promise=Promise.all(t).then((function(e){return n.loading=!1,e})).catch((function(e){throw n.loading=!1,e})),n}function N(e,n){return E.createElement((t=e)&&t.__esModule?t.default:t,n);var t}function O(e,n){var d,I;if(!n.loading)throw new Error("react-loadable requires a `loading` component");var O=i({loader:null,loading:null,delay:200,timeout:null,render:N,webpack:null,modules:null},n),u=null;function R(){return u||(u=e(O.loader)),u.promise}return T.push(R),"function"==typeof O.webpack&&o.push((function(){if((0,O.webpack)().every((function(e){return void 0!==e&&void 0!==t.m[e]})))return R()})),I=d=function(n){function t(t){var r;return a(_(_(r=n.call(this,t)||this)),"retry",(function(){r.setState({error:null,loading:!0,timedOut:!1}),u=e(O.loader),r._loadModule()})),R(),r.state={error:u.error,pastDelay:!1,timedOut:!1,loading:u.loading,loaded:u.loaded},r}r(t,n),t.preload=function(){return R()};var i=t.prototype;return i.UNSAFE_componentWillMount=function(){this._loadModule()},i.componentDidMount=function(){this._mounted=!0},i._loadModule=function(){var e=this;if(this.context.loadable&&Array.isArray(O.modules)&&O.modules.forEach((function(n){e.context.loadable.report(n)})),u.loading){var n=function(n){e._mounted&&e.setState(n)};"number"==typeof O.delay&&(0===O.delay?this.setState({pastDelay:!0}):this._delay=setTimeout((function(){n({pastDelay:!0})}),O.delay)),"number"==typeof O.timeout&&(this._timeout=setTimeout((function(){n({timedOut:!0})}),O.timeout));var t=function(){n({error:u.error,loaded:u.loaded,loading:u.loading}),e._clearTimeouts()};u.promise.then((function(){return t(),null})).catch((function(e){return t(),null}))}},i.componentWillUnmount=function(){this._mounted=!1,this._clearTimeouts()},i._clearTimeouts=function(){clearTimeout(this._delay),clearTimeout(this._timeout)},i.render=function(){return this.state.loading||this.state.error?E.createElement(O.loading,{isLoading:this.state.loading,pastDelay:this.state.pastDelay,timedOut:this.state.timedOut,error:this.state.error,retry:this.retry}):this.state.loaded?O.render(this.state.loaded,this.props):null},t}(E.Component),a(d,"contextTypes",{loadable:s.shape({report:s.func.isRequired})}),I}function u(e){return O(d,e)}u.Map=function(e){if("function"!=typeof e.render)throw new Error("LoadableMap requires a `render(loaded, props)` function");return O(I,e)};var R=function(e){function n(){return e.apply(this,arguments)||this}r(n,e);var t=n.prototype;return t.getChildContext=function(){return{loadable:{report:this.props.report}}},t.render=function(){return E.Children.only(this.props.children)},n}(E.Component);function A(e){for(var n=[];e.length;){var t=e.pop();n.push(t())}return Promise.all(n).then((function(){if(e.length)return A(e)}))}a(R,"propTypes",{report:s.func.isRequired}),a(R,"childContextTypes",{loadable:s.shape({report:s.func.isRequired}).isRequired}),u.Capture=R,u.preloadAll=function(){return new Promise((function(e,n){A(T).then(e,n)}))},u.preloadReady=function(){return new Promise((function(e,n){A(o).then(e,e)}))},e.exports=u},18790:(e,n,t)=>{"use strict";t.d(n,{H:()=>E,f:()=>i});var r=t(76775),_=t(87462),a=t(67294);function i(e,n,t){return void 0===t&&(t=[]),e.some((function(e){var _=e.path?(0,r.LX)(n,e):t.length?t[t.length-1].match:r.F0.computeRootMatch(n);return _&&(t.push({route:e,match:_}),e.routes&&i(e.routes,n,t)),_})),t}function E(e,n,t){return void 0===n&&(n={}),void 0===t&&(t={}),e?a.createElement(r.rs,t,e.map((function(e,t){return a.createElement(r.AW,{key:e.key||t,path:e.path,exact:e.exact,strict:e.strict,render:function(t){return e.render?e.render((0,_.Z)({},t,{},n,{route:e})):a.createElement(e.component,(0,_.Z)({},t,n,{route:e}))}})}))):null}},73727:(e,n,t)=>{"use strict";t.d(n,{OL:()=>S,VK:()=>o,rU:()=>R});var r=t(76775),_=t(94578),a=t(67294),i=t(99318),E=t(87462),s=t(63366),T=t(2177),o=function(e){function n(){for(var n,t=arguments.length,r=new Array(t),_=0;_<t;_++)r[_]=arguments[_];return(n=e.call.apply(e,[this].concat(r))||this).history=(0,i.lX)(n.props),n}return(0,_.Z)(n,e),n.prototype.render=function(){return a.createElement(r.F0,{history:this.history,children:this.props.children})},n}(a.Component);a.Component;var d=function(e,n){return"function"==typeof e?e(n):e},I=function(e,n){return"string"==typeof e?(0,i.ob)(e,null,null,n):e},N=function(e){return e},O=a.forwardRef;void 0===O&&(O=N);var u=O((function(e,n){var t=e.innerRef,r=e.navigate,_=e.onClick,i=(0,s.Z)(e,["innerRef","navigate","onClick"]),T=i.target,o=(0,E.Z)({},i,{onClick:function(e){try{_&&_(e)}catch(n){throw e.preventDefault(),n}e.defaultPrevented||0!==e.button||T&&"_self"!==T||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return o.ref=N!==O&&n||t,a.createElement("a",o)}));var R=O((function(e,n){var t=e.component,_=void 0===t?u:t,o=e.replace,R=e.to,A=e.innerRef,D=(0,s.Z)(e,["component","replace","to","innerRef"]);return a.createElement(r.s6.Consumer,null,(function(e){e||(0,T.Z)(!1);var t=e.history,r=I(d(R,e.location),e.location),s=r?t.createHref(r):"",u=(0,E.Z)({},D,{href:s,navigate:function(){var n=d(R,e.location),r=(0,i.Ep)(e.location)===(0,i.Ep)(I(n));(o||r?t.replace:t.push)(n)}});return N!==O?u.ref=n||A:u.innerRef=A,a.createElement(_,u)}))})),A=function(e){return e},D=a.forwardRef;void 0===D&&(D=A);var S=D((function(e,n){var t=e["aria-current"],_=void 0===t?"page":t,i=e.activeClassName,o=void 0===i?"active":i,N=e.activeStyle,O=e.className,u=e.exact,S=e.isActive,l=e.location,h=e.sensitive,C=e.strict,P=e.style,U=e.to,c=e.innerRef,p=(0,s.Z)(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return a.createElement(r.s6.Consumer,null,(function(e){e||(0,T.Z)(!1);var t=l||e.location,i=I(d(U,t),t),s=i.pathname,L=s&&s.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),f=L?(0,r.LX)(t.pathname,{path:L,exact:u,sensitive:h,strict:C}):null,F=!!(S?S(f,t):f),m="function"==typeof O?O(F):O,M="function"==typeof P?P(F):P;F&&(m=function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return n.filter((function(e){return e})).join(" ")}(m,o),M=(0,E.Z)({},M,N));var w=(0,E.Z)({"aria-current":F&&_||null,className:m,style:M,to:i},p);return A!==D?w.ref=n||c:w.innerRef=c,a.createElement(R,w)}))}))},76775:(e,n,t)=>{"use strict";t.d(n,{AW:()=>c,F0:()=>h,rs:()=>M,s6:()=>l,LX:()=>U,k6:()=>b,TH:()=>g});var r=t(94578),_=t(67294),a=t(99318),i=t(45697),E=t.n(i),s=1073741823,T="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==t.g?t.g:{};function o(e){var n=[];return{on:function(e){n.push(e)},off:function(e){n=n.filter((function(n){return n!==e}))},get:function(){return e},set:function(t,r){e=t,n.forEach((function(n){return n(e,r)}))}}}var d=_.createContext||function(e,n){var t,a,i="__create-react-context-"+function(){var e="__global_unique_id__";return T[e]=(T[e]||0)+1}()+"__",d=function(e){function t(){var n;return(n=e.apply(this,arguments)||this).emitter=o(n.props.value),n}(0,r.Z)(t,e);var _=t.prototype;return _.getChildContext=function(){var e;return(e={})[i]=this.emitter,e},_.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var t,r=this.props.value,_=e.value;((a=r)===(i=_)?0!==a||1/a==1/i:a!=a&&i!=i)?t=0:(t="function"==typeof n?n(r,_):s,0!==(t|=0)&&this.emitter.set(e.value,t))}var a,i},_.render=function(){return this.props.children},t}(_.Component);d.childContextTypes=((t={})[i]=E().object.isRequired,t);var I=function(n){function t(){var e;return(e=n.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(n,t){0!=((0|e.observedBits)&t)&&e.setState({value:e.getValue()})},e}(0,r.Z)(t,n);var _=t.prototype;return _.componentWillReceiveProps=function(e){var n=e.observedBits;this.observedBits=null==n?s:n},_.componentDidMount=function(){this.context[i]&&this.context[i].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?s:e},_.componentWillUnmount=function(){this.context[i]&&this.context[i].off(this.onUpdate)},_.getValue=function(){return this.context[i]?this.context[i].get():e},_.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},t}(_.Component);return I.contextTypes=((a={})[i]=E().object,a),{Provider:d,Consumer:I}};const I=d;var N=t(2177),O=t(87462),u=t(14779),R=t.n(u),A=(t(59864),t(63366)),D=(t(8679),function(e){var n=I();return n.displayName=e,n}),S=D("Router-History"),l=D("Router"),h=function(e){function n(n){var t;return(t=e.call(this,n)||this).state={location:n.history.location},t._isMounted=!1,t._pendingLocation=null,n.staticContext||(t.unlisten=n.history.listen((function(e){t._pendingLocation=e}))),t}(0,r.Z)(n,e),n.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var t=n.prototype;return t.componentDidMount=function(){var e=this;this._isMounted=!0,this.unlisten&&this.unlisten(),this.props.staticContext||(this.unlisten=this.props.history.listen((function(n){e._isMounted&&e.setState({location:n})}))),this._pendingLocation&&this.setState({location:this._pendingLocation})},t.componentWillUnmount=function(){this.unlisten&&(this.unlisten(),this._isMounted=!1,this._pendingLocation=null)},t.render=function(){return _.createElement(l.Provider,{value:{history:this.props.history,location:this.state.location,match:n.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},_.createElement(S.Provider,{children:this.props.children||null,value:this.props.history}))},n}(_.Component);_.Component;_.Component;var C={},P=0;function U(e,n){void 0===n&&(n={}),("string"==typeof n||Array.isArray(n))&&(n={path:n});var t=n,r=t.path,_=t.exact,a=void 0!==_&&_,i=t.strict,E=void 0!==i&&i,s=t.sensitive,T=void 0!==s&&s;return[].concat(r).reduce((function(n,t){if(!t&&""!==t)return null;if(n)return n;var r=function(e,n){var t=""+n.end+n.strict+n.sensitive,r=C[t]||(C[t]={});if(r[e])return r[e];var _=[],a={regexp:R()(e,_,n),keys:_};return P<1e4&&(r[e]=a,P++),a}(t,{end:a,strict:E,sensitive:T}),_=r.regexp,i=r.keys,s=_.exec(e);if(!s)return null;var o=s[0],d=s.slice(1),I=e===o;return a&&!I?null:{path:t,url:"/"===t&&""===o?"/":o,isExact:I,params:i.reduce((function(e,n,t){return e[n.name]=d[t],e}),{})}}),null)}var c=function(e){function n(){return e.apply(this,arguments)||this}return(0,r.Z)(n,e),n.prototype.render=function(){var e=this;return _.createElement(l.Consumer,null,(function(n){n||(0,N.Z)(!1);var t=e.props.location||n.location,r=e.props.computedMatch?e.props.computedMatch:e.props.path?U(t.pathname,e.props):n.match,a=(0,O.Z)({},n,{location:t,match:r}),i=e.props,E=i.children,s=i.component,T=i.render;return Array.isArray(E)&&function(e){return 0===_.Children.count(e)}(E)&&(E=null),_.createElement(l.Provider,{value:a},a.match?E?"function"==typeof E?E(a):E:s?_.createElement(s,a):T?T(a):null:"function"==typeof E?E(a):null)}))},n}(_.Component);function p(e){return"/"===e.charAt(0)?e:"/"+e}function L(e,n){if(!e)return n;var t=p(e);return 0!==n.pathname.indexOf(t)?n:(0,O.Z)({},n,{pathname:n.pathname.substr(t.length)})}function f(e){return"string"==typeof e?e:(0,a.Ep)(e)}function F(e){return function(){(0,N.Z)(!1)}}function m(){}_.Component;var M=function(e){function n(){return e.apply(this,arguments)||this}return(0,r.Z)(n,e),n.prototype.render=function(){var e=this;return _.createElement(l.Consumer,null,(function(n){n||(0,N.Z)(!1);var t,r,a=e.props.location||n.location;return _.Children.forEach(e.props.children,(function(e){if(null==r&&_.isValidElement(e)){t=e;var i=e.props.path||e.props.from;r=i?U(a.pathname,(0,O.Z)({},e.props,{path:i})):n.match}})),r?_.cloneElement(t,{location:a,computedMatch:r}):null}))},n}(_.Component);var w=_.useContext;function b(){return w(S)}function g(){return w(l).location}},72408:(e,n,t)=>{"use strict";var r=t(27418),_=60103,a=60106;n.Fragment=60107,n.StrictMode=60108,n.Profiler=60114;var i=60109,E=60110,s=60112;n.Suspense=60113;var T=60115,o=60116;if("function"==typeof Symbol&&Symbol.for){var d=Symbol.for;_=d("react.element"),a=d("react.portal"),n.Fragment=d("react.fragment"),n.StrictMode=d("react.strict_mode"),n.Profiler=d("react.profiler"),i=d("react.provider"),E=d("react.context"),s=d("react.forward_ref"),n.Suspense=d("react.suspense"),T=d("react.memo"),o=d("react.lazy")}var I="function"==typeof Symbol&&Symbol.iterator;function N(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var O={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},u={};function R(e,n,t){this.props=e,this.context=n,this.refs=u,this.updater=t||O}function A(){}function D(e,n,t){this.props=e,this.context=n,this.refs=u,this.updater=t||O}R.prototype.isReactComponent={},R.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(N(85));this.updater.enqueueSetState(this,e,n,"setState")},R.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},A.prototype=R.prototype;var S=D.prototype=new A;S.constructor=D,r(S,R.prototype),S.isPureReactComponent=!0;var l={current:null},h=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function P(e,n,t){var r,a={},i=null,E=null;if(null!=n)for(r in void 0!==n.ref&&(E=n.ref),void 0!==n.key&&(i=""+n.key),n)h.call(n,r)&&!C.hasOwnProperty(r)&&(a[r]=n[r]);var s=arguments.length-2;if(1===s)a.children=t;else if(1<s){for(var T=Array(s),o=0;o<s;o++)T[o]=arguments[o+2];a.children=T}if(e&&e.defaultProps)for(r in s=e.defaultProps)void 0===a[r]&&(a[r]=s[r]);return{$$typeof:_,type:e,key:i,ref:E,props:a,_owner:l.current}}function U(e){return"object"==typeof e&&null!==e&&e.$$typeof===_}var c=/\/+/g;function p(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function L(e,n,t,r,i){var E=typeof e;"undefined"!==E&&"boolean"!==E||(e=null);var s=!1;if(null===e)s=!0;else switch(E){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case _:case a:s=!0}}if(s)return i=i(s=e),e=""===r?"."+p(s,0):r,Array.isArray(i)?(t="",null!=e&&(t=e.replace(c,"$&/")+"/"),L(i,n,t,"",(function(e){return e}))):null!=i&&(U(i)&&(i=function(e,n){return{$$typeof:_,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(i,t+(!i.key||s&&s.key===i.key?"":(""+i.key).replace(c,"$&/")+"/")+e)),n.push(i)),1;if(s=0,r=""===r?".":r+":",Array.isArray(e))for(var T=0;T<e.length;T++){var o=r+p(E=e[T],T);s+=L(E,n,t,o,i)}else if(o=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=I&&e[I]||e["@@iterator"])?e:null}(e),"function"==typeof o)for(e=o.call(e),T=0;!(E=e.next()).done;)s+=L(E=E.value,n,t,o=r+p(E,T++),i);else if("object"===E)throw n=""+e,Error(N(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n));return s}function f(e,n,t){if(null==e)return e;var r=[],_=0;return L(e,r,"","",(function(e){return n.call(t,e,_++)})),r}function F(e){if(-1===e._status){var n=e._result;n=n(),e._status=0,e._result=n,n.then((function(n){0===e._status&&(n=n.default,e._status=1,e._result=n)}),(function(n){0===e._status&&(e._status=2,e._result=n)}))}if(1===e._status)return e._result;throw e._result}var m={current:null};function M(){var e=m.current;if(null===e)throw Error(N(321));return e}var w={ReactCurrentDispatcher:m,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:l,IsSomeRendererActing:{current:!1},assign:r};n.Children={map:f,forEach:function(e,n,t){f(e,(function(){n.apply(this,arguments)}),t)},count:function(e){var n=0;return f(e,(function(){n++})),n},toArray:function(e){return f(e,(function(e){return e}))||[]},only:function(e){if(!U(e))throw Error(N(143));return e}},n.Component=R,n.PureComponent=D,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=w,n.cloneElement=function(e,n,t){if(null==e)throw Error(N(267,e));var a=r({},e.props),i=e.key,E=e.ref,s=e._owner;if(null!=n){if(void 0!==n.ref&&(E=n.ref,s=l.current),void 0!==n.key&&(i=""+n.key),e.type&&e.type.defaultProps)var T=e.type.defaultProps;for(o in n)h.call(n,o)&&!C.hasOwnProperty(o)&&(a[o]=void 0===n[o]&&void 0!==T?T[o]:n[o])}var o=arguments.length-2;if(1===o)a.children=t;else if(1<o){T=Array(o);for(var d=0;d<o;d++)T[d]=arguments[d+2];a.children=T}return{$$typeof:_,type:e.type,key:i,ref:E,props:a,_owner:s}},n.createContext=function(e,n){return void 0===n&&(n=null),(e={$$typeof:E,_calculateChangedBits:n,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},n.createElement=P,n.createFactory=function(e){var n=P.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:s,render:e}},n.isValidElement=U,n.lazy=function(e){return{$$typeof:o,_payload:{_status:-1,_result:e},_init:F}},n.memo=function(e,n){return{$$typeof:T,type:e,compare:void 0===n?null:n}},n.useCallback=function(e,n){return M().useCallback(e,n)},n.useContext=function(e,n){return M().useContext(e,n)},n.useDebugValue=function(){},n.useEffect=function(e,n){return M().useEffect(e,n)},n.useImperativeHandle=function(e,n,t){return M().useImperativeHandle(e,n,t)},n.useLayoutEffect=function(e,n){return M().useLayoutEffect(e,n)},n.useMemo=function(e,n){return M().useMemo(e,n)},n.useReducer=function(e,n,t){return M().useReducer(e,n,t)},n.useRef=function(e){return M().useRef(e)},n.useState=function(e){return M().useState(e)},n.version="17.0.2"},67294:(e,n,t)=>{"use strict";e.exports=t(72408)},60053:(e,n)=>{"use strict";var t,r,_,a;if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;n.unstable_now=function(){return i.now()}}else{var E=Date,s=E.now();n.unstable_now=function(){return E.now()-s}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var T=null,o=null,d=function(){if(null!==T)try{var e=n.unstable_now();T(!0,e),T=null}catch(t){throw setTimeout(d,0),t}};t=function(e){null!==T?setTimeout(t,0,e):(T=e,setTimeout(d,0))},r=function(e,n){o=setTimeout(e,n)},_=function(){clearTimeout(o)},n.unstable_shouldYield=function(){return!1},a=n.unstable_forceFrameRate=function(){}}else{var I=window.setTimeout,N=window.clearTimeout;if("undefined"!=typeof console){var O=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof O&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var u=!1,R=null,A=-1,D=5,S=0;n.unstable_shouldYield=function(){return n.unstable_now()>=S},a=function(){},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):D=0<e?Math.floor(1e3/e):5};var l=new MessageChannel,h=l.port2;l.port1.onmessage=function(){if(null!==R){var e=n.unstable_now();S=e+D;try{R(!0,e)?h.postMessage(null):(u=!1,R=null)}catch(t){throw h.postMessage(null),t}}else u=!1},t=function(e){R=e,u||(u=!0,h.postMessage(null))},r=function(e,t){A=I((function(){e(n.unstable_now())}),t)},_=function(){N(A),A=-1}}function C(e,n){var t=e.length;e.push(n);e:for(;;){var r=t-1>>>1,_=e[r];if(!(void 0!==_&&0<c(_,n)))break e;e[r]=n,e[t]=_,t=r}}function P(e){return void 0===(e=e[0])?null:e}function U(e){var n=e[0];if(void 0!==n){var t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,_=e.length;r<_;){var a=2*(r+1)-1,i=e[a],E=a+1,s=e[E];if(void 0!==i&&0>c(i,t))void 0!==s&&0>c(s,i)?(e[r]=s,e[E]=t,r=E):(e[r]=i,e[a]=t,r=a);else{if(!(void 0!==s&&0>c(s,t)))break e;e[r]=s,e[E]=t,r=E}}}return n}return null}function c(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}var p=[],L=[],f=1,F=null,m=3,M=!1,w=!1,b=!1;function g(e){for(var n=P(L);null!==n;){if(null===n.callback)U(L);else{if(!(n.startTime<=e))break;U(L),n.sortIndex=n.expirationTime,C(p,n)}n=P(L)}}function X(e){if(b=!1,g(e),!w)if(null!==P(p))w=!0,t(y);else{var n=P(L);null!==n&&r(X,n.startTime-e)}}function y(e,t){w=!1,b&&(b=!1,_()),M=!0;var a=m;try{for(g(t),F=P(p);null!==F&&(!(F.expirationTime>t)||e&&!n.unstable_shouldYield());){var i=F.callback;if("function"==typeof i){F.callback=null,m=F.priorityLevel;var E=i(F.expirationTime<=t);t=n.unstable_now(),"function"==typeof E?F.callback=E:F===P(p)&&U(p),g(t)}else U(p);F=P(p)}if(null!==F)var s=!0;else{var T=P(L);null!==T&&r(X,T.startTime-t),s=!1}return s}finally{F=null,m=a,M=!1}}var v=a;n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){w||M||(w=!0,t(y))},n.unstable_getCurrentPriorityLevel=function(){return m},n.unstable_getFirstCallbackNode=function(){return P(p)},n.unstable_next=function(e){switch(m){case 1:case 2:case 3:var n=3;break;default:n=m}var t=m;m=n;try{return e()}finally{m=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=v,n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=m;m=e;try{return n()}finally{m=t}},n.unstable_scheduleCallback=function(e,a,i){var E=n.unstable_now();switch("object"==typeof i&&null!==i?i="number"==typeof(i=i.delay)&&0<i?E+i:E:i=E,e){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return e={id:f++,callback:a,priorityLevel:e,startTime:i,expirationTime:s=i+s,sortIndex:-1},i>E?(e.sortIndex=i,C(L,e),null===P(p)&&e===P(L)&&(b?_():b=!0,r(X,i-E))):(e.sortIndex=s,C(p,e),w||M||(w=!0,t(y))),e},n.unstable_wrapCallback=function(e){var n=m;return function(){var t=m;m=n;try{return e.apply(this,arguments)}finally{m=t}}}},63840:(e,n,t)=>{"use strict";e.exports=t(60053)},96774:e=>{e.exports=function(e,n,t,r){var _=t?t.call(r,e,n):void 0;if(void 0!==_)return!!_;if(e===n)return!0;if("object"!=typeof e||!e||"object"!=typeof n||!n)return!1;var a=Object.keys(e),i=Object.keys(n);if(a.length!==i.length)return!1;for(var E=Object.prototype.hasOwnProperty.bind(n),s=0;s<a.length;s++){var T=a[s];if(!E(T))return!1;var o=e[T],d=n[T];if(!1===(_=t?t.call(r,o,d,T):void 0)||void 0===_&&o!==d)return!1}return!0}},2177:(e,n,t)=>{"use strict";t.d(n,{Z:()=>_});var r="Invariant failed";function _(e,n){if(!e)throw new Error(r)}},36809:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>r});const r={title:"InfoSum Developer Documentation",tagline:"Data Collaboration Platform",url:"https://infosum.com",baseUrl:"/infosum-docs/",onBrokenLinks:"throw",onBrokenMarkdownLinks:"warn",favicon:"img/favicon.ico",organizationName:"infosum",projectName:"infosum-docs",presets:[["classic",{docs:{sidebarPath:"/home/runner/work/infosum-docs/infosum-docs/sidebars.js",editUrl:"https://github.com/infosum/infosum-docs/tree/main",beforeDefaultRemarkPlugins:[null]},theme:{customCss:"/home/runner/work/infosum-docs/infosum-docs/src/css/custom.css"},sitemap:{changefreq:"weekly",priority:.5}}],["redocusaurus",{specs:[{spec:"static/tyrael.swagger.json",route:"/api/v1"},{spec:"static/swagger.json",route:"/api/v2"}]}]],plugins:[["@docusaurus/plugin-pwa",{offlineModeActivationStrategies:["appInstalled","standalone","queryString"],pwaHead:[{tagName:"link",rel:"icon",href:"/img/infosum.png"},{tagName:"link",rel:"manifest",href:"/manifest.json"},{tagName:"meta",name:"theme-color",content:"rgb(37, 194, 160)"}]}]],themeConfig:{colorMode:{defaultMode:"dark",respectPrefersColorScheme:!0,disableSwitch:!1},navbar:{title:"InfoSum Developer Documentation",logo:{alt:"InfoSum",src:"/img/infosum.png"},items:[{type:"doc",docId:"intro",position:"left",label:"Docs"},{to:"/api/v1",label:"API V1",position:"left"},{to:"/api/v2",label:"\u03a3 API",position:"left"},{href:"https://github.com/infosum",label:"GitHub",position:"right"}],hideOnScroll:!1},footer:{style:"dark",links:[{title:"Docs",items:[{label:"Tutorial",to:"/docs/intro"},{label:"Help Center",to:"https://support.infosum.com/"}]},{title:"Community",items:[{label:"Stack Overflow",href:"https://stackoverflow.com/questions/tagged/docusaurus"},{label:"Discord",href:"https://discordapp.com/invite/docusaurus"},{label:"Twitter",href:"https://twitter.com/infosum"}]},{title:"More",items:[{label:"GitHub",href:"https://github.com/infosum"}]}],copyright:"Copyright \xa9 2022 InfoSum Built with Docusaurus."},prism:{theme:{plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]},darkTheme:{plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]},additionalLanguages:[],magicComments:[{className:"theme-code-block-highlighted-line",line:"highlight-next-line",block:{start:"highlight-start",end:"highlight-end"}}]},docs:{versionPersistence:"localStorage",sidebar:{hideable:!1,autoCollapseCategories:!1}},metadata:[],tableOfContents:{minHeadingLevel:2,maxHeadingLevel:3}},baseUrlIssueBanner:!0,i18n:{defaultLocale:"en",path:"i18n",locales:["en"],localeConfigs:{}},onDuplicateRoutes:"warn",staticDirectories:["static"],customFields:{},themes:[],scripts:[],stylesheets:[],clientModules:[],titleDelimiter:"|",noIndex:!1}},87462:(e,n,t)=>{"use strict";function r(){return r=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},r.apply(this,arguments)}t.d(n,{Z:()=>r})},94578:(e,n,t)=>{"use strict";t.d(n,{Z:()=>_});var r=t(89611);function _(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,(0,r.Z)(e,n)}},63366:(e,n,t)=>{"use strict";function r(e,n){if(null==e)return{};var t,r,_={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(_[t]=e[t]);return _}t.d(n,{Z:()=>r})},89611:(e,n,t)=>{"use strict";function r(e,n){return r=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,n){return e.__proto__=n,e},r(e,n)}t.d(n,{Z:()=>r})},57529:e=>{"use strict";e.exports={}},16887:e=>{"use strict";e.exports=JSON.parse('{"/infosum-docs/api/v1-c72":{"__comp":"f0ad3fbb","__context":{"plugin":"26dbebdc"},"specProps":"2c0aace0","layoutProps":"e9674ec5"},"/infosum-docs/api/v2-45f":{"__comp":"f0ad3fbb","__context":{"plugin":"975dba38"},"specProps":"aae24946","layoutProps":"716d6e8b"},"/infosum-docs/blog-57b":{"__comp":"a6aa9e1f","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","items":[{"content":"7661071f"}],"metadata":"a3fb953e"},"/infosum-docs/blog/archive-f7a":{"__comp":"9e4087bc","__context":{"plugin":"b53cb62d"},"archive":"44cec8cd"},"/infosum-docs/blog/tags-c2c":{"__comp":"01a85c17","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","tags":"af23092a"},"/infosum-docs/blog/tags/developer-e69":{"__comp":"6875c492","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","items":[{"content":"7661071f"}],"tag":"9de40055","listMetadata":"031cd6c4"},"/infosum-docs/blog/tags/documentation-6db":{"__comp":"6875c492","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","items":[{"content":"7661071f"}],"tag":"b8de503b","listMetadata":"3ab16766"},"/infosum-docs/blog/tags/infosum-144":{"__comp":"6875c492","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","items":[{"content":"7661071f"}],"tag":"1cf37229","listMetadata":"ef1f2a58"},"/infosum-docs/blog/tags/welcome-263":{"__comp":"6875c492","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","items":[{"content":"7661071f"}],"tag":"4e23c930","listMetadata":"1e8ffffe"},"/infosum-docs/blog/welcome-545":{"__comp":"ccc49370","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","content":"d9f32620"},"/infosum-docs/docs-356":{"__comp":"1be78505","__context":{"plugin":"cd14c842"},"versionMetadata":"935f2afb"},"/infosum-docs/docs/authentication-0bf":{"__comp":"17896441","content":"625b1ed7"},"/infosum-docs/docs/cloudvaults/-732":{"__comp":"17896441","content":"bef04aef"},"/infosum-docs/docs/getting-started/-a70":{"__comp":"17896441","content":"54c82979"},"/infosum-docs/docs/getting-started/transforming-a-file-55e":{"__comp":"17896441","content":"06c094d2"},"/infosum-docs/docs/getting-started/uploading-a-file-from-aws-s3-to-a-cloudvault-122":{"__comp":"17896441","content":"fcd59481"},"/infosum-docs/docs/intro-5c3":{"__comp":"17896441","content":"0e384e19"},"/infosum-docs/docs/transform/-770":{"__comp":"17896441","content":"414b77a9"},"/infosum-docs/-eea":{"__comp":"1df93b7f","__context":{"plugin":"ba5a679b"},"config":"5e9f5e1a"}}')}},e=>{e.O(0,[532],(()=>{return n=49383,e(e.s=n);var n}));e.O()}]);