"use strict";(self.webpackChunkinfosum_docs=self.webpackChunkinfosum_docs||[]).push([[887],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,f=m["".concat(u,".").concat(d)]||m[d]||p[d]||i;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},776:function(e,t,n){n.r(t),n.d(t,{assets:function(){return I},contentTitle:function(){return w},default:function(){return _},frontMatter:function(){return C},metadata:function(){return T},toc:function(){return A}});var a=n(87462),r=n(63366),i=n(67294),o=n(3905),l=n(86010),u=n(72389),s=n(67392),c=n(7094),p=n(12466),m="tabList__CuJ",d="tabItem_LNqP";function f(e){var t,n,r=e.lazy,o=e.block,u=e.defaultValue,f=e.values,h=e.groupId,v=e.className,k=i.Children.map(e.children,(function(e){if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=f?f:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,s.l)(g,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===u?u:null!=(t=null!=u?u:null==(n=k.find((function(e){return e.props.default})))?void 0:n.props.value)?t:k[0].props.value;if(null!==y&&!g.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,c.U)(),C=N.tabGroupChoices,w=N.setTabGroupChoices,T=(0,i.useState)(y),I=T[0],A=T[1],O=[],_=(0,p.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var S=C[h];null!=S&&S!==I&&g.some((function(e){return e.value===S}))&&A(S)}var x=function(e){var t=e.currentTarget,n=O.indexOf(t),a=g[n].value;a!==I&&(_(t),A(a),null!=h&&w(h,String(a)))},E=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a,r=O.indexOf(e.currentTarget)+1;n=null!=(a=O[r])?a:O[0];break;case"ArrowLeft":var i,o=O.indexOf(e.currentTarget)-1;n=null!=(i=O[o])?i:O[O.length-1]}null==(t=n)||t.focus()};return i.createElement("div",{className:(0,l.Z)("tabs-container",m)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":o},v)},g.map((function(e){var t=e.value,n=e.label,r=e.attributes;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:I===t?0:-1,"aria-selected":I===t,key:t,ref:function(e){return O.push(e)},onKeyDown:E,onFocus:x,onClick:x},r,{className:(0,l.Z)("tabs__item",d,null==r?void 0:r.className,{"tabs__item--active":I===t})}),null!=n?n:t)}))),r?(0,i.cloneElement)(k.filter((function(e){return e.props.value===I}))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},k.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==I})}))))}function h(e){var t=(0,u.Z)();return i.createElement(f,(0,a.Z)({key:String(t)},e))}var v="tabItem_Ymn6";function k(e){var t=e.children,n=e.hidden,a=e.className;return i.createElement("div",{role:"tabpanel",className:(0,l.Z)(v,a),hidden:n},t)}var g=["components"],b={toc:[{value:"Authentication",id:"authentication",level:2}]};function y(e){var t=e.components,n=(0,r.Z)(e,g);return(0,o.kt)("wrapper",(0,a.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"authentication"},"Authentication"),(0,o.kt)("p",null,"To use the InfoSum APIs you will need an ",(0,o.kt)("inlineCode",{parentName:"p"},"API Key"),". To generate an API for use in your application you can ",(0,o.kt)("a",{parentName:"p",href:"/docs/authentication"},"follow these instructions"),"."),(0,o.kt)("p",null,"For simplicity in the next steps, we will assign the ",(0,o.kt)("inlineCode",{parentName:"p"},"API Key")," to an ",(0,o.kt)("inlineCode",{parentName:"p"},"environment")," variable as shown:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'export INFOSUM_API_KEY="<your generated API key>";\n')))}y.isMDXComponent=!0;var N=["components"],C={sidebar_position:1},w="Uploading a file to a File Vault",T={unversionedId:"getting-started/uploading-a-file-to-a-filevault",id:"getting-started/uploading-a-file-to-a-filevault",title:"Uploading a file to a File Vault",description:"For specific information on File Vaults we have a dedicated page here.",source:"@site/docs/getting-started/uploading-a-file-to-a-filevault.mdx",sourceDirName:"getting-started",slug:"/getting-started/uploading-a-file-to-a-filevault",permalink:"/infosum-docs/docs/getting-started/uploading-a-file-to-a-filevault",draft:!1,editUrl:"https://github.com/infosum/infosum-docs/tree/main/docs/getting-started/uploading-a-file-to-a-filevault.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/infosum-docs/docs/getting-started/"},next:{title:"Authentication",permalink:"/infosum-docs/docs/authentication"}},I={},A=[{value:"Create a File Vault",id:"create-a-file-vault",level:2},{value:"Importing a file",id:"importing-a-file",level:2},{value:"Create an Import Connector",id:"create-an-import-connector",level:3},{value:"Create an Import task",id:"create-an-import-task",level:3}],O={toc:A};function _(e){var t=e.components,n=(0,r.Z)(e,N);return(0,o.kt)("wrapper",(0,a.Z)({},O,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"uploading-a-file-to-a-file-vault"},"Uploading a file to a File Vault"),(0,o.kt)("p",null,"For specific information on ",(0,o.kt)("a",{parentName:"p",href:"/docs/filevaults/"},"File Vaults")," we have a dedicated page ",(0,o.kt)("a",{parentName:"p",href:"/docs/filevaults/"},"here"),"."),(0,o.kt)(y,{mdxType:"Authentication"}),(0,o.kt)("h2",{id:"create-a-file-vault"},"Create a File Vault"),(0,o.kt)("p",null,"To upload a file to the InfoSum Platform, you will need a File Vault to hold the file. You can create a File Vault using the following command which you will need to provide;"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A non-conflicting name for the File Vault as ",(0,o.kt)("inlineCode",{parentName:"li"},"name")),(0,o.kt)("li",{parentName:"ul"},"A description of the File Vault as ",(0,o.kt)("inlineCode",{parentName:"li"},"description")),(0,o.kt)("li",{parentName:"ul"},"The region you want the File Vault to reside in as ",(0,o.kt)("inlineCode",{parentName:"li"},"region"))),(0,o.kt)(h,{mdxType:"Tabs"},(0,o.kt)(k,{value:"curl",label:"cURL",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl --location --request POST \'https://api.infosum.com/api/v2/filevaults\' \\\n--header "Authorization: $INFOSUM_API_KEY" \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n  "name": "a-new-file-vault",\n  "description": "A new file vault to store files",\n  "region": "AWS_EU_WEST_2"\n}\'\n')))),(0,o.kt)("h2",{id:"importing-a-file"},"Importing a file"),(0,o.kt)("p",null,"Once you have a File Vault you will need to run an import process from your storage location to the File Vault."),(0,o.kt)("h3",{id:"create-an-import-connector"},"Create an Import Connector"),(0,o.kt)("p",null,"The first step is to set up an ",(0,o.kt)("inlineCode",{parentName:"p"},"Import Connector Config")," (or ",(0,o.kt)("inlineCode",{parentName:"p"},"ICC")," for short), to manage the connection between your AWS S3 or Google GCS and the InfoSum Platform."),(0,o.kt)("p",null,"For example, we will move a file from AWS S3 to File Vault, so the ",(0,o.kt)("inlineCode",{parentName:"p"},"config")," object would need;"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A name for the import connector as ",(0,o.kt)("inlineCode",{parentName:"li"},"name")),(0,o.kt)("li",{parentName:"ul"},"A description of what the connector is doing as ",(0,o.kt)("inlineCode",{parentName:"li"},"description")," (this is optional)"),(0,o.kt)("li",{parentName:"ul"},"An S3 connection object in ",(0,o.kt)("inlineCode",{parentName:"li"},"s3_connector"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"The name of the AWS S3 bucket is ",(0,o.kt)("inlineCode",{parentName:"li"},"bucket")),(0,o.kt)("li",{parentName:"ul"},"Any prefixes for files under ",(0,o.kt)("inlineCode",{parentName:"li"},"prefix")),(0,o.kt)("li",{parentName:"ul"},"An array of filenames or patterns that identify files under ",(0,o.kt)("inlineCode",{parentName:"li"},"filenames")),(0,o.kt)("li",{parentName:"ul"},"An authentication object under ",(0,o.kt)("inlineCode",{parentName:"li"},"cross_account")," with",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"A valid AWS ARN to assume as ",(0,o.kt)("inlineCode",{parentName:"li"},"user_arn")),(0,o.kt)("li",{parentName:"ul"},"The name of the session is ",(0,o.kt)("inlineCode",{parentName:"li"},"session_name"))))))),(0,o.kt)(h,{mdxType:"Tabs"},(0,o.kt)(k,{value:"curl",label:"cURL",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl --location --request POST \'https://api.infosum.com/api/v2/bunker/import/import-connector-configs\' \\\n--header "Authorization: $INFOSUM_API_KEY" \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n  "config": {\n    "name": "AWS S3 migration",\n    "description": "Moving from remote to File Vault",\n    "s3_connector": {\n      "bucket": "name-of-the-s3-bucket",\n      "prefix": "",\n      "cross_account": {\n        "user_arn": "arn:aws:iam::XXXXXXXXXXXX:role/RoleName",\n        "session_name": "nameofthesession"\n      },\n      "filenames": [\n        "*.csv"\n      ]\n    }\n  }\n}\'\n')))),(0,o.kt)("h3",{id:"create-an-import-task"},"Create an Import task"),(0,o.kt)("p",null,"After you have the connector, you will need an ",(0,o.kt)("inlineCode",{parentName:"p"},"Import")," task to execute the import. Your ",(0,o.kt)("inlineCode",{parentName:"p"},"import")," config will connect your ",(0,o.kt)("inlineCode",{parentName:"p"},"import-connector-config")," to your File Vault."),(0,o.kt)("p",null,"The necessary information for the ",(0,o.kt)("inlineCode",{parentName:"p"},"import")," is:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A name for the task as ",(0,o.kt)("inlineCode",{parentName:"li"},"name")),(0,o.kt)("li",{parentName:"ul"},"An optional ",(0,o.kt)("inlineCode",{parentName:"li"},"description")),(0,o.kt)("li",{parentName:"ul"},"The Import Connector Config ID from the previous request under ",(0,o.kt)("inlineCode",{parentName:"li"},"icc_id")),(0,o.kt)("li",{parentName:"ul"},"The File Vault ID created at the beginning as the ",(0,o.kt)("inlineCode",{parentName:"li"},"destination_id")),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"data_filter")," contains the ",(0,o.kt)("inlineCode",{parentName:"li"},"filter"),", which is an array of filters from the ",(0,o.kt)("inlineCode",{parentName:"li"},"ICC"))),(0,o.kt)(h,{mdxType:"Tabs"},(0,o.kt)(k,{value:"curl",label:"cURL",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl --location --request POST \'https://api.infosum.com/api/v2/bunker/import/imports\' \\\n--header "Authorization: $INFOSUM_API_KEY" \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n  "import": {\n    "name": "AWS S3 to FileVault task",\n    "description": "Moving just CSVs",\n    "icc_id": "The ICC ID from the previous request",\n    "destination_id": "The FileVault ID from before",\n    "data_filter": {\n      "filter": [\n        "our-csv-file.csv"\n      ]\n    }\n  }\n}\'\n')))))}_.isMDXComponent=!0}}]);