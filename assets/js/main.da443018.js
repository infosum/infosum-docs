/*! For license information please see main.da443018.js.LICENSE.txt */
(self.webpackChunkinfosum_docs=self.webpackChunkinfosum_docs||[]).push([[179],{723:function(e,n,t){"use strict";t.d(n,{Z:function(){return N}});var r=t(7294),_=t(7462),E=t(8356),a=t.n(E),i=t(6887),T={"01a85c17":[function(){return Promise.all([t.e(532),t.e(13)]).then(t.bind(t,1223))},"@theme/BlogTagsListPage",1223],"0e384e19":[function(){return t.e(671).then(t.bind(t,9881))},"@site/docs/intro.md",9881],17896441:[function(){return Promise.all([t.e(532),t.e(548),t.e(918)]).then(t.bind(t,8043))},"@theme/DocItem",8043],"1be78505":[function(){return Promise.all([t.e(532),t.e(514)]).then(t.bind(t,7994))},"@theme/DocPage",7994],"1df93b7f":[function(){return Promise.all([t.e(532),t.e(237)]).then(t.bind(t,8391))},"@site/src/pages/index.tsx",8391],"1f391b9e":[function(){return Promise.all([t.e(532),t.e(548),t.e(85)]).then(t.bind(t,4247))},"@theme/MDXPage",4247],"215540ae":[function(){return t.e(808).then(t.t.bind(t,3672,19))},"~blog/default/blog-tags-developer-c5c.json",3672],"26dbebdc":[function(){return t.e(577).then(t.t.bind(t,9162,19))},"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-0/plugin-route-context-module-100.json",9162],"2c0aace0":[function(){return t.e(569).then(t.t.bind(t,1837,19))},"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-0/redocApiSpecV1.2-plugin-redoc-0.json",1837],"38f00f86":[function(){return t.e(667).then(t.t.bind(t,2686,19))},"~blog/default/blog-tags-documentation-944.json",2686],"393be207":[function(){return t.e(414).then(t.bind(t,3123))},"@site/src/pages/markdown-page.md",3123],"3b7a3d14":[function(){return t.e(98).then(t.t.bind(t,5448,19))},"~blog/default/blog-tags-developer-c5c-list.json",5448],"3bd45752":[function(){return t.e(509).then(t.t.bind(t,7740,19))},"~blog/default/blog-tags-infosum-e85-list.json",7740],"5e9f5e1a":[function(){return Promise.resolve().then(t.bind(t,6809))},"@generated/docusaurus.config",6809],"6875c492":[function(){return Promise.all([t.e(532),t.e(548),t.e(983),t.e(610)]).then(t.bind(t,1714))},"@theme/BlogTagsPostsPage",1714],"7661071f":[function(){return t.e(642).then(t.bind(t,6911))},"@site/blog/2021-08-26-welcome/index.md?truncated=true",6911],"814f3328":[function(){return t.e(535).then(t.t.bind(t,5641,19))},"~blog/default/blog-post-list-prop-default.json",5641],"935f2afb":[function(){return t.e(53).then(t.t.bind(t,1109,19))},"~docs/default/version-current-metadata-prop-751.json",1109],"992a3bb7":[function(){return t.e(415).then(t.t.bind(t,8229,19))},"~blog/default/blog-tags-documentation-944-list.json",8229],"9e4087bc":[function(){return t.e(608).then(t.bind(t,3169))},"@theme/BlogArchivePage",3169],"9f12a79a":[function(){return t.e(236).then(t.t.bind(t,7018,19))},"~blog/default/blog-tags-infosum-e85.json",7018],a24beb83:[function(){return t.e(260).then(t.t.bind(t,8364,19))},"~blog/default/blog-tags-welcome-11d-list.json",8364],a6aa9e1f:[function(){return Promise.all([t.e(532),t.e(548),t.e(983),t.e(89)]).then(t.bind(t,46))},"@theme/BlogListPage",46],a7023ddc:[function(){return t.e(713).then(t.t.bind(t,3457,19))},"~blog/default/blog-tags-tags-4c2.json",3457],b2b675dd:[function(){return t.e(533).then(t.t.bind(t,8017,19))},"~blog/default/blog-c06.json",8017],b2f554cd:[function(){return t.e(477).then(t.t.bind(t,10,19))},"~blog/default/blog-archive-80c.json",10],b53cb62d:[function(){return t.e(264).then(t.t.bind(t,4469,19))},"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-content-blog/default/plugin-route-context-module-100.json",4469],ba5a679b:[function(){return t.e(975).then(t.t.bind(t,5745,19))},"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-content-pages/default/plugin-route-context-module-100.json",5745],ccc49370:[function(){return Promise.all([t.e(532),t.e(548),t.e(103)]).then(t.bind(t,8166))},"@theme/BlogPostPage",8166],cd14c842:[function(){return t.e(703).then(t.t.bind(t,3769,19))},"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-content-docs/default/plugin-route-context-module-100.json",3769],d9f32620:[function(){return t.e(914).then(t.bind(t,2900))},"@site/blog/2021-08-26-welcome/index.md",2900],e9674ec5:[function(){return t.e(331).then(t.t.bind(t,1294,19))},"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-0/redocApiLayoutV1-plugin-redoc-0.json",1294],f0ad3fbb:[function(){return Promise.all([t.e(532),t.e(527),t.e(612)]).then(t.bind(t,3527))},"@theme/ApiDoc",3527],f6ba3702:[function(){return t.e(293).then(t.t.bind(t,8495,19))},"~blog/default/blog-tags-welcome-11d.json",8495]};function s(e){var n=e.error,t=e.retry,_=e.pastDelay;return n?r.createElement("div",{style:{textAlign:"center",color:"#fff",backgroundColor:"#fa383e",borderColor:"#fa383e",borderStyle:"solid",borderRadius:"0.25rem",borderWidth:"1px",boxSizing:"border-box",display:"block",padding:"1rem",flex:"0 0 50%",marginLeft:"25%",marginRight:"25%",marginTop:"5rem",maxWidth:"50%",width:"100%"}},r.createElement("p",null,String(n)),r.createElement("div",null,r.createElement("button",{type:"button",onClick:t},"Retry"))):_?r.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",height:"100vh"}},r.createElement("svg",{id:"loader",style:{width:128,height:110,position:"absolute",top:"calc(100vh - 64%)"},viewBox:"0 0 45 45",xmlns:"http://www.w3.org/2000/svg",stroke:"#61dafb"},r.createElement("g",{fill:"none",fillRule:"evenodd",transform:"translate(1 1)",strokeWidth:"2"},r.createElement("circle",{cx:"22",cy:"22",r:"6",strokeOpacity:"0"},r.createElement("animate",{attributeName:"r",begin:"1.5s",dur:"3s",values:"6;22",calcMode:"linear",repeatCount:"indefinite"}),r.createElement("animate",{attributeName:"stroke-opacity",begin:"1.5s",dur:"3s",values:"1;0",calcMode:"linear",repeatCount:"indefinite"}),r.createElement("animate",{attributeName:"stroke-width",begin:"1.5s",dur:"3s",values:"2;0",calcMode:"linear",repeatCount:"indefinite"})),r.createElement("circle",{cx:"22",cy:"22",r:"6",strokeOpacity:"0"},r.createElement("animate",{attributeName:"r",begin:"3s",dur:"3s",values:"6;22",calcMode:"linear",repeatCount:"indefinite"}),r.createElement("animate",{attributeName:"stroke-opacity",begin:"3s",dur:"3s",values:"1;0",calcMode:"linear",repeatCount:"indefinite"}),r.createElement("animate",{attributeName:"stroke-width",begin:"3s",dur:"3s",values:"2;0",calcMode:"linear",repeatCount:"indefinite"})),r.createElement("circle",{cx:"22",cy:"22",r:"8"},r.createElement("animate",{attributeName:"r",begin:"0s",dur:"1.5s",values:"6;1;2;3;4;5;6",calcMode:"linear",repeatCount:"indefinite"}))))):null}var o=t(9670),d=t(226);function I(e,n){if("*"===e)return a()({loading:s,loader:function(){return t.e(972).then(t.bind(t,4972))},modules:["@theme/NotFound"],webpack:function(){return[4972]},render:function(e,n){var t=e.default;return r.createElement(d.z,{value:{plugin:{name:"native",id:"default"}}},r.createElement(t,n))}});var E=i[e+"-"+n],I={},N=[],O=[],R=(0,o.Z)(E);return Object.entries(R).forEach((function(e){var n=e[0],t=e[1],r=T[t];r&&(I[n]=r[0],N.push(r[1]),O.push(r[2]))})),a().Map({loading:s,loader:I,modules:N,webpack:function(){return O},render:function(n,t){var a=JSON.parse(JSON.stringify(E));Object.entries(n).forEach((function(n){var t=n[0],r=n[1],_=r.default;if(!_)throw new Error("The page component at "+e+" doesn't have a default export. This makes it impossible to render anything. Consider default-exporting a React component.");"object"!=typeof _&&"function"!=typeof _||Object.keys(r).filter((function(e){return"default"!==e})).forEach((function(e){_[e]=r[e]}));var E=a,i=t.split(".");i.slice(0,-1).forEach((function(e){E=E[e]})),E[i[i.length-1]]=_}));var i=a.__comp;delete a.__comp;var T=a.__context;return delete a.__context,r.createElement(d.z,{value:T},r.createElement(i,(0,_.Z)({},a,t)))}})}var N=[{path:"/api/",component:I("/api/","b08"),exact:!0},{path:"/blog",component:I("/blog","285"),exact:!0},{path:"/blog/archive",component:I("/blog/archive","156"),exact:!0},{path:"/blog/tags",component:I("/blog/tags","319"),exact:!0},{path:"/blog/tags/developer",component:I("/blog/tags/developer","613"),exact:!0},{path:"/blog/tags/documentation",component:I("/blog/tags/documentation","970"),exact:!0},{path:"/blog/tags/infosum",component:I("/blog/tags/infosum","514"),exact:!0},{path:"/blog/tags/welcome",component:I("/blog/tags/welcome","2eb"),exact:!0},{path:"/blog/welcome",component:I("/blog/welcome","8ce"),exact:!0},{path:"/markdown-page",component:I("/markdown-page","68a"),exact:!0},{path:"/docs",component:I("/docs","cac"),routes:[{path:"/docs/intro",component:I("/docs/intro","aed"),exact:!0,sidebar:"tutorialSidebar"}]},{path:"/",component:I("/","bd9"),exact:!0},{path:"*",component:I("*")}]},8934:function(e,n,t){"use strict";t.d(n,{_:function(){return _},t:function(){return E}});var r=t(7294),_=r.createContext(!1);function E(e){var n=e.children,t=(0,r.useState)(!1),E=t[0],a=t[1];return(0,r.useEffect)((function(){a(!0)}),[]),r.createElement(_.Provider,{value:E},n)}},9383:function(e,n,t){"use strict";var r=t(7294),_=t(3935),E=t(3727),a=t(405),i=t(412),T=[t(2497),t(3310),t(6743),t(8320),t(2295),t(1304),t(4750),t(8968)],s=t(723),o=t(6775),d=t(8790);function I(e){var n=e.children;return r.createElement(r.Fragment,null,n)}var N=t(7462),O=t(5742),R=t(2263),u=t(4996),A=t(4711),D=t(6668),S=t(9727),l=t(1944),h=t(3320),C=t(197);function P(){var e=(0,R.Z)().i18n,n=e.defaultLocale,t=e.localeConfigs,_=(0,A.l)();return r.createElement(O.Z,null,Object.entries(t).map((function(e){var n=e[0],t=e[1].htmlLang;return r.createElement("link",{key:n,rel:"alternate",href:_.createUrl({locale:n,fullyQualified:!0}),hrefLang:t})})),r.createElement("link",{rel:"alternate",href:_.createUrl({locale:n,fullyQualified:!0}),hrefLang:"x-default"}))}function U(e){var n=e.permalink,t=(0,R.Z)().siteConfig.url,_=function(){var e=(0,R.Z)().siteConfig.url,n=(0,o.TH)().pathname;return e+(0,u.Z)(n)}(),E=n?""+t+n:_;return r.createElement(O.Z,null,r.createElement("meta",{property:"og:url",content:E}),r.createElement("link",{rel:"canonical",href:E}))}function c(){var e=(0,R.Z)().i18n.currentLocale,n=(0,D.L)(),t=n.metadata,_=n.image;return r.createElement(r.Fragment,null,r.createElement(O.Z,null,r.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),r.createElement("body",{className:S.h})),_&&r.createElement(l.d,{image:_}),r.createElement(U,null),r.createElement(P,null),r.createElement(C.Z,{tag:h.HX,locale:e}),r.createElement(O.Z,null,t.map((function(e,n){return r.createElement("meta",(0,N.Z)({key:n},e))}))))}var p=new Map;function L(e){if(p.has(e.pathname))return Object.assign({},e,{pathname:p.get(e.pathname)});if((0,d.f)(s.Z,e.pathname).some((function(e){return!0===e.route.exact})))return p.set(e.pathname,e.pathname),e;var n=e.pathname.trim().replace(/(?:\/index)?\.html$/,"")||"/";return p.set(e.pathname,n),Object.assign({},e,{pathname:n})}var f=t(8934),F=t(8940),M=t(4578);function m(e){for(var n=arguments.length,t=new Array(n>1?n-1:0),r=1;r<n;r++)t[r-1]=arguments[r];var _=T.map((function(n){var r,_,E=null!=(r=null==(_=n.default)?void 0:_[e])?r:n[e];return null==E?void 0:E.apply(void 0,t)}));return function(){return _.forEach((function(e){return null==e?void 0:e()}))}}var w=function(e){var n=e.children,t=e.location,_=e.previousLocation;return(0,r.useLayoutEffect)((function(){_!==t&&(_&&function(e){var n=e.hash;if(n){var t=decodeURIComponent(n.substring(1)),r=document.getElementById(t);null==r||r.scrollIntoView()}else window.scrollTo(0,0)}(t),m("onRouteDidUpdate",{previousLocation:_,location:t}))}),[_,t]),n};function b(e){var n=(0,d.f)(s.Z,e);return Promise.all(n.map((function(e){return null==e.route.component.preload?void 0:e.route.component.preload()})))}var X=function(e){function n(n){var t;return(t=e.call(this,n)||this).previousLocation=void 0,t.routeUpdateCleanupCb=void 0,t.previousLocation=null,t.routeUpdateCleanupCb=i.default.canUseDOM?m("onRouteUpdate",{previousLocation:null,location:t.props.location}):function(){},t.state={nextRouteHasLoaded:!0},t}(0,M.Z)(n,e);var t=n.prototype;return t.shouldComponentUpdate=function(e,n){var t=this;if(e.location===this.props.location)return n.nextRouteHasLoaded;var r=e.location;return this.previousLocation=this.props.location,this.setState({nextRouteHasLoaded:!1}),this.routeUpdateCleanupCb=m("onRouteUpdate",{previousLocation:this.previousLocation,location:r}),b(r.pathname).then((function(){t.routeUpdateCleanupCb(),t.setState({nextRouteHasLoaded:!0})})).catch((function(e){return console.warn(e)})),!1},t.render=function(){var e=this.props,n=e.children,t=e.location;return r.createElement(w,{previousLocation:this.previousLocation,location:t},r.createElement(o.AW,{location:t,render:function(){return n}}))},n}(r.Component),g="docusaurus-base-url-issue-banner-container",v="docusaurus-base-url-issue-banner-suggestion-container",V="__DOCUSAURUS_INSERT_BASEURL_BANNER";function B(e){return"\nwindow['"+V+"'] = true;\n\ndocument.addEventListener('DOMContentLoaded', maybeInsertBanner);\n\nfunction maybeInsertBanner() {\n  var shouldInsert = window['"+V+"'];\n  shouldInsert && insertBanner();\n}\n\nfunction insertBanner() {\n  var bannerContainer = document.getElementById('"+g+"');\n  if (!bannerContainer) {\n    return;\n  }\n  var bannerHtml = "+JSON.stringify(function(e){return'\n<div id="docusaurus-base-url-issue-banner" style="border: thick solid red; background-color: rgb(255, 230, 179); margin: 20px; padding: 20px; font-size: 20px;">\n   <p style="font-weight: bold; font-size: 30px;">Your Docusaurus site did not load properly.</p>\n   <p>A very common reason is a wrong site <a href="https://docusaurus.io/docs/docusaurus.config.js/#baseurl" style="font-weight: bold;">baseUrl configuration</a>.</p>\n   <p>Current configured baseUrl = <span style="font-weight: bold; color: red;">'+e+"</span> "+("/"===e?" (default value)":"")+'</p>\n   <p>We suggest trying baseUrl = <span id="'+v+'" style="font-weight: bold; color: green;"></span></p>\n</div>\n'}(e)).replace(/</g,"\\<")+";\n  bannerContainer.innerHTML = bannerHtml;\n  var suggestionContainer = document.getElementById('"+v+"');\n  var actualHomePagePath = window.location.pathname;\n  var suggestedBaseUrl = actualHomePagePath.substr(-1) === '/'\n        ? actualHomePagePath\n        : actualHomePagePath + '/';\n  suggestionContainer.innerHTML = suggestedBaseUrl;\n}\n"}function y(){var e=(0,R.Z)().siteConfig.baseUrl;return(0,r.useLayoutEffect)((function(){window[V]=!1}),[]),r.createElement(r.Fragment,null,!i.default.canUseDOM&&r.createElement(O.Z,null,r.createElement("script",null,B(e))),r.createElement("div",{id:g}))}function Y(){var e=(0,R.Z)().siteConfig,n=e.baseUrl,t=e.baseUrlIssueBanner,_=(0,o.TH)().pathname;return t&&_===n?r.createElement(y,null):null}function K(){var e=(0,R.Z)(),n=e.siteConfig,t=n.favicon,_=n.title,E=e.i18n,a=E.currentLocale,i=E.localeConfigs,T=(0,u.Z)(t),s=i[a],o=s.htmlLang,d=s.direction;return r.createElement(O.Z,null,r.createElement("html",{lang:o,dir:d}),r.createElement("title",null,_),r.createElement("meta",{property:"og:title",content:_}),t&&r.createElement("link",{rel:"icon",href:T}))}var G=t(4763);function q(){var e=(0,d.H)(s.Z),n=(0,o.TH)();return r.createElement(G.Z,null,r.createElement(F.M,null,r.createElement(f.t,null,r.createElement(I,null,r.createElement(K,null),r.createElement(c,null),r.createElement(Y,null),r.createElement(X,{location:L(n)},e)))))}var k=t(6887);var x=function(e){try{return document.createElement("link").relList.supports(e)}catch(n){return!1}}("prefetch")?function(e){return new Promise((function(n,t){var r,_;if("undefined"!=typeof document){var E=document.createElement("link");E.setAttribute("rel","prefetch"),E.setAttribute("href",e),E.onload=function(){return n()},E.onerror=function(){return t()};var a=null!=(r=document.getElementsByTagName("head")[0])?r:null==(_=document.getElementsByName("script")[0])?void 0:_.parentNode;null==a||a.appendChild(E)}else t()}))}:function(e){return new Promise((function(n,t){var r=new XMLHttpRequest;r.open("GET",e,!0),r.withCredentials=!0,r.onload=function(){200===r.status?n():t()},r.send(null)}))};var H=t(9670),Q=new Set,W=new Set,j=function(){var e,n;return(null==(e=navigator.connection)?void 0:e.effectiveType.includes("2g"))||(null==(n=navigator.connection)?void 0:n.saveData)},Z={prefetch:function(e){if(!function(e){return!j()&&!W.has(e)&&!Q.has(e)}(e))return!1;Q.add(e);var n=(0,d.f)(s.Z,e).flatMap((function(e){return n=e.route.path,Object.entries(k).filter((function(e){return e[0].replace(/-[^-]+$/,"")===n})).flatMap((function(e){var n=e[1];return Object.values((0,H.Z)(n))}));var n}));return Promise.all(n.map((function(e){var n=t.gca(e);return n&&!n.includes("undefined")?x(n).catch((function(){})):Promise.resolve()})))},preload:function(e){return!!function(e){return!j()&&!W.has(e)}(e)&&(W.add(e),b(e))}},z=Object.freeze(Z);if(i.default.canUseDOM){window.docusaurus=z;var $=_.hydrate;b(window.location.pathname).then((function(){$(r.createElement(a.B6,null,r.createElement(E.VK,null,r.createElement(q,null))),document.getElementById("__docusaurus"))}))}},8940:function(e,n,t){"use strict";t.d(n,{_:function(){return o},M:function(){return d}});var r=t(7294),_=t(6809),E=JSON.parse('{"docusaurus-plugin-redoc":{"plugin-redoc-0":{"url":"redocusaurus/plugin-redoc-0.yaml","themeId":"theme-redoc","isSpecFile":true,"spec":{"openapi":"3.0.0","info":{"title":"InfoSum Developer API","description":"This page contains the documentation for the InfoSum Developer API. The methods allow you to try making requests and inspect the input and output formats.","termsOfService":"https://www.infosum.com/legals/website-terms","version":"2.0","contact":{"name":"InfoSum Support","email":"support@infosum.com"}},"externalDocs":{"description":"Official documentation","url":"https://docs.infosum.com/"},"paths":{"/api/v2/bunker/import/import-connector-configs":{"get":{"summary":"List Import Connector Config.","description":"List available Import Connector Configs.","operationId":"ImportConnectorConfigsList","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"configs":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the globally unique ID of the import connector config.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this import connector config."},"description":{"type":"string","description":"Description is an optional description given to this import connector config."},"s3_cross_account":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the S3 Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"cross_account":{"description":"CrossAccount is the type of auth.","type":"object","properties":{"user_arn":{"type":"string","description":"UserArn is the Amazon Resource Name (ARN) of the role to assume."},"session_name":{"type":"string","description":"Session name is the identifier of the session."},"principal":{"type":"string","description":"Output only. Principal is the principal for the trust relationship.","readOnly":true},"external_id":{"type":"string","description":"Output only. ExternalId is the external ID for the trust relationship.","readOnly":true}}},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"S3CrossAccountProvider is the information about the connector that can be returned."},"gcs_secret_auth":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the GCS Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"GCSSecretAuthProvider is the information about the connector that can be returned."},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import connector config was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import connector config was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the ID of the user who created the import connector config.","readOnly":true}},"description":"Config is the information that can be retrieved about an import connector config."}},"pagination":{"type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}},"description":"PaginationResponse holds information on the returned records."}},"description":"ListResponse is the output of the List method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order_by","description":"OrderBy is a comma seperated value to define sorting.\\ne.g \'name,created_time DESC\'\\nThe values are seperated by space, \'{column} {ASC/DESC}\'","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter","description":"Filter is a string containing logic that can specify a restricted set of ICCs to be returned.\\ne.g. `name co \'Test\' or name co \'Acme\'`","in":"query","required":false,"schema":{"type":"string"}}],"tags":["ImportConnectorConfigs"],"security":[{"API_Keys":[]}]},"post":{"summary":"Create an Import Connector Config.","description":"Create a configuration for importing data from a connector.","operationId":"ImportConnectorConfigsCreate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"config_id":{"type":"string"}},"description":"CreateResponse is the output of the Create method."}}}},"400":{"description":"Returned when the Import Connector Config was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"409":{"description":"Returned when an Import Connector Config with the same name already exists.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"config":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the globally unique ID of the import connector config.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this import connector config."},"description":{"type":"string","description":"Description is an optional description given to this import connector config."},"s3_connector":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the S3 Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"cross_account":{"type":"object","properties":{"user_arn":{"type":"string","description":"UserArn is the Amazon Resource Name (ARN) of the role to assume."},"session_name":{"type":"string","description":"Session name is the identifier of the session."},"principal":{"type":"string","description":"Output only. Principal is the principal for the trust relationship.","readOnly":true},"external_id":{"type":"string","description":"Output only. ExternalId is the external ID for the trust relationship.","readOnly":true}},"description":"S3CrossAccountAuth holds the details needed for cross-account authentication."},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"S3Connector is the information required to define an S3 Connector."},"gcs_connector":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the GCS Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"secret_auth":{"type":"object","properties":{"credentials_json":{"type":"string"}},"description":"GCSSecretAuth holds the GCS Credentials JSON as a string."},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"GCSConnector is the information required to define an GCS Connector."}},"description":"UpsertConfig is the information required to define an import connector config."}},"description":"CreateRequest is the input to the Create method."}}},"required":true},"tags":["ImportConnectorConfigs"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/import-connector-configs/{config.id}":{"patch":{"summary":"Update an Import Connector Config","description":"Updates the provided fields in a specific Import Connector Config.","operationId":"ImportConnectorConfigsUpdate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"config":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the globally unique ID of the import connector config.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this import connector config."},"description":{"type":"string","description":"Description is an optional description given to this import connector config."},"s3_cross_account":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the S3 Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"cross_account":{"description":"CrossAccount is the type of auth.","type":"object","properties":{"user_arn":{"type":"string","description":"UserArn is the Amazon Resource Name (ARN) of the role to assume."},"session_name":{"type":"string","description":"Session name is the identifier of the session."},"principal":{"type":"string","description":"Output only. Principal is the principal for the trust relationship.","readOnly":true},"external_id":{"type":"string","description":"Output only. ExternalId is the external ID for the trust relationship.","readOnly":true}}},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"S3CrossAccountProvider is the information about the connector that can be returned."},"gcs_secret_auth":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the GCS Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"GCSSecretAuthProvider is the information about the connector that can be returned."},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import connector config was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import connector config was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the ID of the user who created the import connector config.","readOnly":true}},"description":"Config is the information that can be retrieved about an import connector config."}},"description":"UpdateResponse is the output of the Update method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Import Connector Config could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"config.id","description":"Output only. ID is the globally unique ID of the import connector config.","in":"path","required":true,"schema":{"type":"string"}},{"name":"update_mask","description":"UpdateMask is a field mask, allowing partial resource update.\\nThe update mask applies to the Allocation resource. For the `FieldMask` definition,\\nsee https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask","in":"query","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name is the display name given to this import connector config."},"description":{"type":"string","description":"Description is an optional description given to this import connector config."},"s3_connector":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the S3 Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"cross_account":{"type":"object","properties":{"user_arn":{"type":"string","description":"UserArn is the Amazon Resource Name (ARN) of the role to assume."},"session_name":{"type":"string","description":"Session name is the identifier of the session."},"principal":{"type":"string","description":"Output only. Principal is the principal for the trust relationship.","readOnly":true},"external_id":{"type":"string","description":"Output only. ExternalId is the external ID for the trust relationship.","readOnly":true}},"description":"S3CrossAccountAuth holds the details needed for cross-account authentication."},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"S3Connector is the information required to define an S3 Connector."},"gcs_connector":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the GCS Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"secret_auth":{"type":"object","properties":{"credentials_json":{"type":"string"}},"description":"GCSSecretAuth holds the GCS Credentials JSON as a string."},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"GCSConnector is the information required to define an GCS Connector."}},"description":"UpsertConfig is the information required to define an import connector config."}}},"required":true},"tags":["ImportConnectorConfigs"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/import-connector-configs/{config_id}":{"get":{"summary":"Get an Import Connector Config.","description":"Get the details of a specific Import Connector Config.","operationId":"ImportConnectorConfigsGet","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"config":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the globally unique ID of the import connector config.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this import connector config."},"description":{"type":"string","description":"Description is an optional description given to this import connector config."},"s3_cross_account":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the S3 Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"cross_account":{"description":"CrossAccount is the type of auth.","type":"object","properties":{"user_arn":{"type":"string","description":"UserArn is the Amazon Resource Name (ARN) of the role to assume."},"session_name":{"type":"string","description":"Session name is the identifier of the session."},"principal":{"type":"string","description":"Output only. Principal is the principal for the trust relationship.","readOnly":true},"external_id":{"type":"string","description":"Output only. ExternalId is the external ID for the trust relationship.","readOnly":true}}},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"S3CrossAccountProvider is the information about the connector that can be returned."},"gcs_secret_auth":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the GCS Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"GCSSecretAuthProvider is the information about the connector that can be returned."},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import connector config was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import connector config was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the ID of the user who created the import connector config.","readOnly":true}},"description":"Config is the information that can be retrieved about an import connector config."}},"description":"GetResponse is the output of the Get method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Import Connector Config could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"config_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["ImportConnectorConfigs"],"security":[{"API_Keys":[]}]},"delete":{"summary":"Delete an Import Connector Config.","description":"Deletes a specific Import Connector Config.","operationId":"ImportConnectorConfigsDelete","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"config_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["ImportConnectorConfigs"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/executions":{"get":{"summary":"List Executions.","description":"List all import executions.","operationId":"ImportsListExecutions","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"executions":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Id is the ID of the execution."},"import_id":{"type":"string","description":"ImportId is the ID of the import used in the execution."},"bunker_id":{"type":"string","description":"BunkerId is the ID of the bunker used to execute the import."},"user_id":{"type":"string","description":"UserId is the ID of the user who executed the import."},"history":{"type":"array","items":{"type":"object","properties":{"status":{"type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS","description":"Status is an enum of the different states that an async task can be in."},"date_time":{"type":"string","format":"date-time"},"progress":{"type":"string"}},"description":"History holds information about the status of the import execution."},"description":"History is the status history of the import execution."},"current_status":{"type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS","description":"Status is an enum of the different states that an async task can be in."},"created_date_time":{"type":"string","format":"date-time","description":"CreatedDateTime is the creation date and time of the current execution."},"updated_date_time":{"type":"string","format":"date-time","description":"UpdatedDateTime is the date and time the execution was updated."}},"description":"Execution holds information about an import execution."}},"pagination":{"type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}},"description":"PaginationResponse holds information on the returned records."}},"description":"ListExecutionsResponse is the output from the ListExecutions method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order_by","description":"OrderBy is a comma seperated value to define sorting.\\ne.g \'current_status DESC\'\\nThe values are seperated by space, \'{column} {ASC/DESC}\'","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter","description":"Filter is a string containing logic that can specify a restricted set of Executions to be returned.\\ne.g. `current_status eq \'WAITING\'`","in":"query","required":false,"schema":{"type":"string"}}],"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/executions/{execution_id}":{"get":{"summary":"Gets an Execution","description":"Gets a specific import execution.","operationId":"ImportsGetExecution","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"execution":{"type":"object","properties":{"id":{"type":"string","description":"Id is the ID of the execution."},"import_id":{"type":"string","description":"ImportId is the ID of the import used in the execution."},"bunker_id":{"type":"string","description":"BunkerId is the ID of the bunker used to execute the import."},"user_id":{"type":"string","description":"UserId is the ID of the user who executed the import."},"history":{"type":"array","items":{"type":"object","properties":{"status":{"type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS","description":"Status is an enum of the different states that an async task can be in."},"date_time":{"type":"string","format":"date-time"},"progress":{"type":"string"}},"description":"History holds information about the status of the import execution."},"description":"History is the status history of the import execution."},"current_status":{"type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS","description":"Status is an enum of the different states that an async task can be in."},"created_date_time":{"type":"string","format":"date-time","description":"CreatedDateTime is the creation date and time of the current execution."},"updated_date_time":{"type":"string","format":"date-time","description":"UpdatedDateTime is the date and time the execution was updated."}},"description":"Execution holds information about an import execution."}},"description":"GetExecutionResponse is the output from the GetExecution method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Execution could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"execution_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/executions/{execution_id}/cancel":{"post":{"summary":"Cancel an Execution","description":"Cancels a specific import execution.","operationId":"ImportsCancelExecution","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Execution could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"execution_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/imports":{"get":{"summary":"List Import.","description":"List available Imports.","operationId":"ImportsList","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"imports":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"Output only. Id is the id for the import","readOnly":true},"name":{"type":"string","title":"Name is a name given to the import"},"description":{"type":"string","title":"Description is a description of the import"},"icc_id":{"type":"string","title":"IccId is the id of the icc used by the import"},"destination_id":{"type":"string","description":"DestinationId is the identifier of where the files will be imported to. Currently this is a bunker ID, but in future will be either a file store or workspace."},"data_filter":{"description":"DataFilter is the filtered data to import from the ICC.","type":"object","properties":{"filter":{"type":"array","items":{"type":"string"},"title":"Filter is an array of strings used to filter the data from the ICC. No filter == *"}}},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the id of the user who created the import.","readOnly":true}},"description":"Import is the information required to define an import."}},"pagination":{"type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}},"description":"PaginationResponse holds information on the returned records."}},"description":"ListResponse is the output of the List method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order_by","description":"OrderBy is a comma seperated value to define sorting.\\ne.g \'name,created_time DESC\'\\nThe values are seperated by space, \'{column} {ASC/DESC}\'","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter","description":"Filter is a string containing logic that can specify a restricted set of Imports to be returned.\\ne.g. `name co \'Test\' or name co \'Acme\'`","in":"query","required":false,"schema":{"type":"string"}}],"tags":["Imports"],"security":[{"API_Keys":[]}]},"post":{"summary":"Create an Import.","description":"Create a configuration for importing data.","operationId":"ImportsCreate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"import_id":{"type":"string"}},"description":"CreateResponse is the output of the Create method."}}}},"400":{"description":"Returned when the Import was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"409":{"description":"Returned when an Import with the same name already exists.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"import":{"type":"object","properties":{"id":{"type":"string","title":"Output only. Id is the id for the import","readOnly":true},"name":{"type":"string","title":"Name is a name given to the import"},"description":{"type":"string","title":"Description is a description of the import"},"icc_id":{"type":"string","title":"IccId is the id of the icc used by the import"},"destination_id":{"type":"string","description":"DestinationId is the identifier of where the files will be imported to. Currently this is a bunker ID, but in future will be either a file store or workspace."},"data_filter":{"description":"DataFilter is the filtered data to import from the ICC.","type":"object","properties":{"filter":{"type":"array","items":{"type":"string"},"title":"Filter is an array of strings used to filter the data from the ICC. No filter == *"}}},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the id of the user who created the import.","readOnly":true}},"description":"Import is the information required to define an import."}},"description":"CreateRequest is the input to the Create method."}}},"required":true},"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/imports/{import.id}":{"patch":{"summary":"Update an Import","description":"Updates the provided fields in a specific Import.","operationId":"ImportsUpdate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"import":{"type":"object","properties":{"id":{"type":"string","title":"Output only. Id is the id for the import","readOnly":true},"name":{"type":"string","title":"Name is a name given to the import"},"description":{"type":"string","title":"Description is a description of the import"},"icc_id":{"type":"string","title":"IccId is the id of the icc used by the import"},"destination_id":{"type":"string","description":"DestinationId is the identifier of where the files will be imported to. Currently this is a bunker ID, but in future will be either a file store or workspace."},"data_filter":{"description":"DataFilter is the filtered data to import from the ICC.","type":"object","properties":{"filter":{"type":"array","items":{"type":"string"},"title":"Filter is an array of strings used to filter the data from the ICC. No filter == *"}}},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the id of the user who created the import.","readOnly":true}},"description":"Import is the information required to define an import."}},"description":"UpdateResponse is the output of the Update method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Import could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"import.id","description":"Output only. Id is the id for the import","in":"path","required":true,"schema":{"type":"string"}},{"name":"update_mask","description":"UpdateMask is a field mask, allowing partial resource update.\\nThe update mask applies to the Allocation resource. For the `FieldMask` definition,\\nsee https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask","in":"query","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","title":"Name is a name given to the import"},"description":{"type":"string","title":"Description is a description of the import"},"icc_id":{"type":"string","title":"IccId is the id of the icc used by the import"},"destination_id":{"type":"string","description":"DestinationId is the identifier of where the files will be imported to. Currently this is a bunker ID, but in future will be either a file store or workspace."},"data_filter":{"description":"DataFilter is the filtered data to import from the ICC.","type":"object","properties":{"filter":{"type":"array","items":{"type":"string"},"title":"Filter is an array of strings used to filter the data from the ICC. No filter == *"}}},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the id of the user who created the import.","readOnly":true}},"description":"Import is the information required to define an import."}}},"required":true},"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/imports/{import_id}":{"get":{"summary":"Get an Import.","description":"Get the details of a specific Import.","operationId":"ImportsGet","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"import":{"type":"object","properties":{"id":{"type":"string","title":"Output only. Id is the id for the import","readOnly":true},"name":{"type":"string","title":"Name is a name given to the import"},"description":{"type":"string","title":"Description is a description of the import"},"icc_id":{"type":"string","title":"IccId is the id of the icc used by the import"},"destination_id":{"type":"string","description":"DestinationId is the identifier of where the files will be imported to. Currently this is a bunker ID, but in future will be either a file store or workspace."},"data_filter":{"description":"DataFilter is the filtered data to import from the ICC.","type":"object","properties":{"filter":{"type":"array","items":{"type":"string"},"title":"Filter is an array of strings used to filter the data from the ICC. No filter == *"}}},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the id of the user who created the import.","readOnly":true}},"description":"Import is the information required to define an import."}},"description":"GetResponse is the output of the Get method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Import could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"import_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Imports"],"security":[{"API_Keys":[]}]},"delete":{"summary":"Delete an Import.","description":"Deletes a specific Import.","operationId":"ImportsDelete","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"import_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/imports/{import_id}/execute":{"post":{"summary":"Executes an Import","description":"Executes an import for the specified import ID against the specified bunker.","operationId":"ImportsExecuteImport","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"execution_id":{"type":"string","description":"ExecutionId is the ID of the submitted execution."}},"description":"ExecuteImportResponse is the output from the ExecuteImport method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Import or Bunker could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"import_id","description":"ImportId is the ID of the import to execute.","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"compute_instance_id":{"type":"string","description":"ComputeInstanceId is the ID of the compute instance to use when executing."}},"description":"ExecuteImportRequest is the input to the ExecuteImport method."}}},"required":true},"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/transform/scaled-tasks":{"post":{"summary":"Start a scaled Transform.","description":"Start a transform using ephemeral compute instances to scale work horizontally","operationId":"TransformServiceCreateScaledTransform","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"transform_id":{"type":"string","description":"TransformId is the ID of the submitted transform."}},"description":"CreateScaledTransformResponse is the output from the CreateScaledTransform method."}}}},"400":{"description":"Returned when the Transform was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"script":{"type":"string","description":"Script is the transform script to be executed."},"file_vault_id":{"type":"string","description":"FileVaultId is the id of the filevault having source and destination file(s)."},"shard_count":{"type":"integer","format":"int64","description":"ShardCount is the number of shards to horizontally scale the transform execution across."},"allowance_permission_id":{"type":"string","title":"AllowancePermissionID"}},"description":"CreateScaledTransformRequest is the input to the CreateScaledTransform method."}}},"required":true},"tags":["TransformService"],"security":[{"API_Keys":[]}]}},"/api/v2/transform/scripts/validate":{"post":{"summary":"Validate a Transform.","description":"Validate a transform","operationId":"TransformServiceValidateTransform","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","description":"ValidateTransformResponse is the output of the ValidateTransform method."}}}},"400":{"description":"Returned when the Transform Script was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"script":{"type":"string","description":"Script is the transform script to be validated."}},"description":"ValidateTransformRequest is the input to the ValidateTransform method."}}},"required":true},"tags":["TransformService"],"security":[{"API_Keys":[]}]}},"/api/v2/transform/static-tasks":{"post":{"summary":"Start a static Transform.","description":"Start a transform using the static compute instance provided in the request","operationId":"TransformServiceCreateStaticTransform","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"transform_id":{"type":"string","description":"TransformId is the ID of the submitted transform."}},"description":"CreateStaticTransformResponse is the output from the CreateStaticTransform method."}}}},"400":{"description":"Returned when the Transform was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"script":{"type":"string","description":"Script is the transform script to be executed."},"file_vault_id":{"type":"string","description":"FileVaultId is the id of the filevault having source and destination file(s)."},"compute_instance_id":{"type":"string","description":"ComputeInstanceId is the id of an existing compute instance which will be used to execute the transformation."}},"description":"CreateStaticTransformRequest is the input to the CreateStaticTransform method."}}},"required":true},"tags":["TransformService"],"security":[{"API_Keys":[]}]}},"/api/v2/transform/tasks":{"get":{"summary":"List all transforms.","description":"List all transforms","operationId":"TransformServiceListTransforms","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"transforms":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Id is the ID of the transform."},"current_status":{"description":"CurrentStatus is the latest status of the transform aggregated from its constituent shards statuses.","type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS"},"script":{"type":"string","description":"Script is the transform script to be executed."},"shard_count":{"type":"integer","format":"int64","title":"ShardCount is the total number of shards in the transform"},"file_vault_id":{"type":"string","description":"FileVaultId is the id of the filevault having source and destination file(s)."},"user_id":{"type":"string","description":"UserId is the ID of the user who created the transform."},"created_date_time":{"type":"string","format":"date-time","description":"CreatedDateTime is the creation date and time of the transform."},"updated_date_time":{"type":"string","format":"date-time","description":"UpdatedDateTime is the latest date and time any transform shards were updated."}},"description":"Transform holds global information about a transform."},"description":"Transforms is the list of requested transforms."},"pagination":{"description":"Pagination is the pagination details of the returned transforms.","type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}}}},"description":"ListTransformsResponse is the output from the ListTransforms method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"sort.order","description":"Order is the sort order.\\n\\n - ASC: ASC is ascending.\\n - DESC: DESC is descending.","in":"query","required":false,"schema":{"type":"string","enum":["ASC","DESC"],"default":"ASC"}},{"name":"sort.column","description":"Column is the column to sort on.","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter","description":"Filter is a string containing logic that can specify a restricted set of Transforms to be returned.\\ne.g. `history.status co \\"READY\\"`.","in":"query","required":false,"schema":{"type":"string"}}],"tags":["TransformService"],"security":[{"API_Keys":[]}]}},"/api/v2/transform/tasks/{transform_id}":{"get":{"summary":"Get a transform.","description":"Get a transform","operationId":"TransformServiceGetTransform","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"transform_details":{"description":"TransformDetails are details of the requested transform execution.","type":"object","properties":{"transform":{"type":"object","properties":{"id":{"type":"string","description":"Id is the ID of the transform."},"current_status":{"description":"CurrentStatus is the latest status of the transform aggregated from its constituent shards statuses.","type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS"},"script":{"type":"string","description":"Script is the transform script to be executed."},"shard_count":{"type":"integer","format":"int64","title":"ShardCount is the total number of shards in the transform"},"file_vault_id":{"type":"string","description":"FileVaultId is the id of the filevault having source and destination file(s)."},"user_id":{"type":"string","description":"UserId is the ID of the user who created the transform."},"created_date_time":{"type":"string","format":"date-time","description":"CreatedDateTime is the creation date and time of the transform."},"updated_date_time":{"type":"string","format":"date-time","description":"UpdatedDateTime is the latest date and time any transform shards were updated."}},"description":"Transform holds global information about a transform."},"shards":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Id is the ID of the shard."},"compute_instance_id":{"type":"string","description":"ComputeInstanceId is the compute instance used for executing the transform shard."},"current_status":{"description":"CurrentStatus is the latest status of the shard.","type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS"},"current_progress":{"type":"string","description":"CurrentProgress is the latest progress reported for the shard."},"created_date_time":{"type":"string","format":"date-time","description":"CreatedDateTime is the creation date and time of the shard."},"updated_date_time":{"type":"string","format":"date-time","description":"UpdatedDateTime is the date and time the shard was updated."},"histories":{"type":"array","items":{"type":"object","properties":{"status":{"description":"Status is the status of the transform execution shard.","type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS"},"date_time":{"type":"string","format":"date-time","description":"DateTime is the created time of the shard."},"progress":{"type":"string","description":"Progress is the reported progress for this history entry."},"message":{"type":"string","description":"Message is the reported message or error with status change."}},"description":"History holds information about the status of a transform execution shard."},"description":"History is the status history of the transform execution shard."}},"description":"Shard holds information about a transform task shard."},"description":"Shards hold a list of the shards that constitute the transform task."}}}},"description":"GetTransformResponse is the output from the GetTransform method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"transform_id","description":"TransformId is the id of the requested transform.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["TransformService"],"security":[{"API_Keys":[]}]}},"/api/v2/transform/tasks/{transform_id}/cancel":{"post":{"summary":"Cancel a running transform.","description":"Cancel a running transform","operationId":"TransformServiceCancelTransform","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","description":"CancelTransformResponse is the response from the CancelTransform method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"transform_id","description":"TransformId is the id of the transform to cancel all possible shards of.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["TransformService"],"security":[{"API_Keys":[]}]}},"/api/v2/filevaults":{"get":{"summary":"List FileVaults.","description":"List available FileVaults.","operationId":"FileVaultsList","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"file_vaults":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the unique identifier of the FileVault.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this FileVault."},"description":{"type":"string","description":"Description is an optional description given to this FileVault."},"region":{"description":"Output only. Region identifies the region that this FileVault is located\\nin.","readOnly":true,"type":"string","enum":["UNKNOWN","AWS_EU_WEST_2","AWS_US_EAST_1","IBM_EU_CENTRAL_1","AWS_EU_CENTRAL_1"],"default":"UNKNOWN"},"created_by":{"type":"string","description":"Output only. CreatedBy is the id of the user that created this FileVault.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the id of the owner of this FileVault.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time that this FileVault was\\ncreated.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","title":"Output only. UpdatedDateTime is the date and time that thie FileVault was\\nupdated","readOnly":true}},"description":"FileVault is the details about a specific filevault."}},"pagination":{"description":"Pagination is the information on how the results were paginated.","type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}}}}}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order_by","description":"OrderBy is a comma seperated value to define sorting.\\ne.g \'name,created_time DESC\'\\nThe values are seperated by space, \'{column} {ASC/DESC}\'","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter","description":"Filter is a string containing logic that can specify a restricted set of\\nFileVaults to be returned. e.g. `name co \'Test\' or name co \'Acme\'`","in":"query","required":false,"schema":{"type":"string"}}],"tags":["FileVaults"],"security":[{"API_Keys":[]}]},"post":{"summary":"Create a new FileVault.","description":"Create a FileVault to hold data and connect to a bunker.","operationId":"FileVaultsCreate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"file_vault":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the unique identifier of the FileVault.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this FileVault."},"description":{"type":"string","description":"Description is an optional description given to this FileVault."},"region":{"description":"Output only. Region identifies the region that this FileVault is located\\nin.","readOnly":true,"type":"string","enum":["UNKNOWN","AWS_EU_WEST_2","AWS_US_EAST_1","IBM_EU_CENTRAL_1","AWS_EU_CENTRAL_1"],"default":"UNKNOWN"},"created_by":{"type":"string","description":"Output only. CreatedBy is the id of the user that created this FileVault.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the id of the owner of this FileVault.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time that this FileVault was\\ncreated.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","title":"Output only. UpdatedDateTime is the date and time that thie FileVault was\\nupdated","readOnly":true}},"description":"FileVault is the details about a specific filevault."}}}}}},"400":{"description":"Returned when the FileVault was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"409":{"description":"Returned when a FileVault with the same name already exists.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name is the display name given to this FileVault.","required":["name"]},"description":{"type":"string","description":"Description is an optional description given to this FileVault."},"region":{"title":"Region identifies the region that this FileVault is located in.\\nExpected format: cloudprovider + region e.g. aws-eu-west-2","type":"string","enum":["UNKNOWN","AWS_EU_WEST_2","AWS_US_EAST_1","IBM_EU_CENTRAL_1","AWS_EU_CENTRAL_1"],"default":"UNKNOWN","description":"Region enumerates the supported cloud providers and locations.\\n\\n - UNKNOWN: UNKNOWN means the region has not been defined.\\n - AWS_EU_WEST_2: AWS_EU_WEST_2 means AWS Europe (London).\\n - AWS_US_EAST_1: AWS_US_EAST_1 means AWS US East (N. Virginia).\\n - IBM_EU_CENTRAL_1: IBM_EU_CENTRAL_1 means IBM MZR EU Central (Frankfurt).\\n - AWS_EU_CENTRAL_1: AWS_EU_CENTRAL_1 means AWS Europe (Frankfurt)."}},"required":["name"]}}},"required":true},"tags":["FileVaults"],"security":[{"API_Keys":[]}]}},"/api/v2/filevaults/{file_vault.id}":{"patch":{"summary":"Update a FileVault","description":"Updates the provided fields in a specific FileVault.","operationId":"FileVaultsUpdate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"file_vault":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the unique identifier of the FileVault.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this FileVault."},"description":{"type":"string","description":"Description is an optional description given to this FileVault."},"region":{"description":"Output only. Region identifies the region that this FileVault is located\\nin.","readOnly":true,"type":"string","enum":["UNKNOWN","AWS_EU_WEST_2","AWS_US_EAST_1","IBM_EU_CENTRAL_1","AWS_EU_CENTRAL_1"],"default":"UNKNOWN"},"created_by":{"type":"string","description":"Output only. CreatedBy is the id of the user that created this FileVault.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the id of the owner of this FileVault.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time that this FileVault was\\ncreated.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","title":"Output only. UpdatedDateTime is the date and time that thie FileVault was\\nupdated","readOnly":true}},"description":"FileVault is the details about a specific filevault."}}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the FileVault could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"file_vault.id","description":"Output only. ID is the unique identifier of the FileVault.","in":"path","required":true,"schema":{"type":"string"}},{"name":"update_mask","description":"UpdateMask is a field mask, allowing partial resource update.\\nThe update mask applies to the Allocation resource. For the `FieldMask`\\ndefinition, see\\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask","in":"query","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name is the display name given to this FileVault."},"description":{"type":"string","description":"Description is an optional description given to this FileVault."}},"description":"UpdateFileVault is used to update a FileVault. Users can only update the\\nname, description and auth fields."}}},"required":true},"tags":["FileVaults"],"security":[{"API_Keys":[]}]}},"/api/v2/filevaults/{file_vault_id}/associate":{"post":{"summary":"Associate a FileVault with a bunker","description":"Associate a FileVault with a bunker, a filevault can be associated with with multiple bunkers","operationId":"FileVaultsAssociate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"file_vault_id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bunker_id":{"type":"string"}},"description":"AssociateRequest used to associate a filevault with the supplied bunker."}}},"required":true},"tags":["FileVaults"],"security":[{"API_Keys":[]}]}},"/api/v2/filevaults/{file_vault_id}/dissociate":{"post":{"summary":"Dissociate a FileVault from a bunker","description":"Dissociate a FileVault from a bunker","operationId":"FileVaultsDissociate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"file_vault_id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bunker_id":{"type":"string"}},"description":"DissociateRequest used to dissociate a filevault from the supplied bunker."}}},"required":true},"tags":["FileVaults"],"security":[{"API_Keys":[]}]}},"/api/v2/filevaults/{id}":{"get":{"summary":"Get a FileVault.","description":"Get the details of a specific FileVault.","operationId":"FileVaultsGet","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"file_vault":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the unique identifier of the FileVault.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this FileVault."},"description":{"type":"string","description":"Description is an optional description given to this FileVault."},"region":{"description":"Output only. Region identifies the region that this FileVault is located\\nin.","readOnly":true,"type":"string","enum":["UNKNOWN","AWS_EU_WEST_2","AWS_US_EAST_1","IBM_EU_CENTRAL_1","AWS_EU_CENTRAL_1"],"default":"UNKNOWN"},"created_by":{"type":"string","description":"Output only. CreatedBy is the id of the user that created this FileVault.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the id of the owner of this FileVault.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time that this FileVault was\\ncreated.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","title":"Output only. UpdatedDateTime is the date and time that thie FileVault was\\nupdated","readOnly":true}},"description":"FileVault is the details about a specific filevault."}}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the FileVault could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["FileVaults"],"security":[{"API_Keys":[]}]},"delete":{"summary":"Delete a FileVault.","description":"Deletes a specific FileVault.","operationId":"FileVaultsDelete","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["FileVaults"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/export/destinations":{"get":{"summary":"List Destinations","description":"Lists available Destinations.","operationId":"DestinationsListDestinations","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"pagination":{"type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}},"description":"PaginationResponse holds information on the returned records."},"destinations":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the globally unique ID of the destination.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the user or company ID of the owner of the destination.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this destination."},"description":{"type":"string","description":"Description is an optional description given to this destination."},"s3":{"type":"object","properties":{"bucket_name":{"type":"string","description":"BucketName is the name of the S3 Bucket."},"region":{"description":"Region is the region of the S3 Bucket.","type":"string","enum":["UNKNOWN_REGION","US_EAST_1","US_EAST_2","US_WEST_1","US_WEST_2","CA_CENTRAL_1","EU_WEST_1","EU_WEST_2","EU_CENTRAL_1","AP_SOUTHEAST_1","AP_SOUTHEAST_2","AP_SOUTH_1","AP_NORTHEAST_1","AP_NORTHEAST_2","SA_EAST_1","CN_NORTH_1"],"default":"UNKNOWN_REGION"},"path":{"type":"string","description":"Path is the path in the bucket to export data to."},"default_push_overrides":{"title":"DefaultPushOverrides","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the s3 bucket to export data to."}},"description":"S3Overrides are the values that can be overridden when pushing to s3."},"access_key":{"type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKeyId is the id of the access key to authenticate with AWS."},"secret":{"type":"string","description":"Secret is the access key secret for authentication."},"session_token":{"type":"string","description":"SessionToken is an optional STS session token.\\nLeave blank if using an IAM User access key."}},"description":"S3AccessKeyAuth holds the details needed for access key / secret authentication."},"cross_account":{"type":"object","properties":{"push_role_arn":{"type":"string","description":"PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."},"session_name":{"type":"string","description":"SessionName is the name of the IAM role session."},"external_id":{"type":"string","description":"ExternalId is the aws ExternalId that must be set in your role\'s trust policy to enable cross account access. Output only.","readOnly":true}},"description":"S3CrossAccount holds the details needed for cross account authentication."}},"description":"S3Connector is the information required to define a destination using an S3 bucket."},"pubmatic":{"type":"object","properties":{"dpid":{"type":"integer","format":"int32","description":"DPID is your PubMatic data partner ID."}},"description":"PubmaticConnector is the information required to define a destination pushing to PubMatic."},"sftp":{"type":"object","properties":{"host":{"type":"string","description":"Host is the host address of the sftp server."},"port":{"type":"integer","format":"int32","description":"port is the port number that gets used when connecting to the sftp server."},"password_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"password":{"type":"string","description":"Password is the password of the user."}},"description":"SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."},"ssh_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"ssh_key":{"type":"string","description":"SshKey is the ssh key of the user."}},"description":"SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."},"host_keys":{"description":"HostKeys contains options for providing a public key to verify the host.","type":"object","properties":{"authorized_keys":{"type":"array","items":{"type":"string"},"description":"AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."},"known_hosts":{"type":"array","items":{"type":"string"},"description":"KnownHosts are the host public keys in OpenSSH known_hosts format."},"public_key_pem":{"type":"string","description":"PublicKeyPem is the servers public PEM key."}}},"gpg_public_key":{"type":"string","description":"GpgPublicKey is the GPG public key to use in encrypting the data. Optional."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"SftpConnector is the information required to define a destination pushing to a sftp server."},"creator_id":{"type":"string","description":"Output only. CreatorId is the ID of the user who created the destination.","readOnly":true},"created_time":{"type":"string","format":"date-time","description":"Output only. CreatedTime is the date and time the destination was created.","readOnly":true},"updated_time":{"type":"string","format":"date-time","description":"Output only. UpdatedTime is the date and time the destination was last updated.","readOnly":true},"connector_type":{"description":"Output only. ConnectorType states the type of connector used by the destination.","readOnly":true,"type":"string","enum":["S3_ACCESS_KEYS","PUBMATIC","S3_CROSS_ACCOUNT","SFTP"],"default":"S3_ACCESS_KEYS"}},"description":"Destination is the information required to define destinations."}}},"description":"ListDestinationsResponse is the output of the ListDestination method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the right to view Destinations.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order_by","description":"OrderBy is a comma seperated value to define sorting.\\ne.g \'created_time,name DESC\'\\nThe values are seperated by space, \'{column} {ASC/DESC}\'\\nValid columns: name, created_time","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter.names","description":"Names is the filter to be applied to the names of the returned\\ndatasets. Supports partial matching. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}}],"tags":["Destinations"],"security":[{"API_Keys":[]}]},"post":{"summary":"Create a Destination","description":"Creates a Destination.","operationId":"DestinationsCreateDestination","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"destination_id":{"type":"string"}},"description":"CreateDestinationResponse is the output of the CreateDestination method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the right to create Destinations.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name is the display name given to this destination."},"description":{"type":"string","description":"Description is an optional description given to this destination."},"s3":{"type":"object","properties":{"bucket_name":{"type":"string","description":"BucketName is the name of the S3 Bucket."},"region":{"description":"Region is the region of the S3 Bucket.","type":"string","enum":["UNKNOWN_REGION","US_EAST_1","US_EAST_2","US_WEST_1","US_WEST_2","CA_CENTRAL_1","EU_WEST_1","EU_WEST_2","EU_CENTRAL_1","AP_SOUTHEAST_1","AP_SOUTHEAST_2","AP_SOUTH_1","AP_NORTHEAST_1","AP_NORTHEAST_2","SA_EAST_1","CN_NORTH_1"],"default":"UNKNOWN_REGION"},"path":{"type":"string","description":"Path is the path in the bucket to export data to."},"default_push_overrides":{"title":"DefaultPushOverrides","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the s3 bucket to export data to."}},"description":"S3Overrides are the values that can be overridden when pushing to s3."},"access_key":{"type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKeyId is the id of the access key to authenticate with AWS."},"secret":{"type":"string","description":"Secret is the access key secret for authentication."},"session_token":{"type":"string","description":"SessionToken is an optional STS session token.\\nLeave blank if using an IAM User access key."}},"description":"S3AccessKeyAuth holds the details needed for access key / secret authentication."},"cross_account":{"type":"object","properties":{"push_role_arn":{"type":"string","description":"PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."},"session_name":{"type":"string","description":"SessionName is the name of the IAM role session."},"external_id":{"type":"string","description":"ExternalId is the aws ExternalId that must be set in your role\'s trust policy to enable cross account access. Output only.","readOnly":true}},"description":"S3CrossAccount holds the details needed for cross account authentication."}},"description":"S3Connector is the information required to define a destination using an S3 bucket."},"pubmatic":{"type":"object","properties":{"dpid":{"type":"integer","format":"int32","description":"DPID is your PubMatic data partner ID."}},"description":"PubmaticConnector is the information required to define a destination pushing to PubMatic."},"sftp":{"type":"object","properties":{"host":{"type":"string","description":"Host is the host address of the sftp server."},"port":{"type":"integer","format":"int32","description":"port is the port number that gets used when connecting to the sftp server."},"password_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"password":{"type":"string","description":"Password is the password of the user."}},"description":"SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."},"ssh_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"ssh_key":{"type":"string","description":"SshKey is the ssh key of the user."}},"description":"SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."},"host_keys":{"description":"HostKeys contains options for providing a public key to verify the host.","type":"object","properties":{"authorized_keys":{"type":"array","items":{"type":"string"},"description":"AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."},"known_hosts":{"type":"array","items":{"type":"string"},"description":"KnownHosts are the host public keys in OpenSSH known_hosts format."},"public_key_pem":{"type":"string","description":"PublicKeyPem is the servers public PEM key."}}},"gpg_public_key":{"type":"string","description":"GpgPublicKey is the GPG public key to use in encrypting the data. Optional."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"SftpConnector is the information required to define a destination pushing to a sftp server."}},"description":"CreateDestinationRequest is the input to the CreateDestination method."}}},"required":true},"tags":["Destinations"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/export/destinations/{destination.id}":{"patch":{"summary":"Update a Destination","description":"Updates the provided fields in a specific Destination.","operationId":"DestinationsUpdateDestination","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"destination":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the globally unique ID of the destination.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the user or company ID of the owner of the destination.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this destination."},"description":{"type":"string","description":"Description is an optional description given to this destination."},"s3":{"type":"object","properties":{"bucket_name":{"type":"string","description":"BucketName is the name of the S3 Bucket."},"region":{"description":"Region is the region of the S3 Bucket.","type":"string","enum":["UNKNOWN_REGION","US_EAST_1","US_EAST_2","US_WEST_1","US_WEST_2","CA_CENTRAL_1","EU_WEST_1","EU_WEST_2","EU_CENTRAL_1","AP_SOUTHEAST_1","AP_SOUTHEAST_2","AP_SOUTH_1","AP_NORTHEAST_1","AP_NORTHEAST_2","SA_EAST_1","CN_NORTH_1"],"default":"UNKNOWN_REGION"},"path":{"type":"string","description":"Path is the path in the bucket to export data to."},"default_push_overrides":{"title":"DefaultPushOverrides","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the s3 bucket to export data to."}},"description":"S3Overrides are the values that can be overridden when pushing to s3."},"access_key":{"type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKeyId is the id of the access key to authenticate with AWS."},"secret":{"type":"string","description":"Secret is the access key secret for authentication."},"session_token":{"type":"string","description":"SessionToken is an optional STS session token.\\nLeave blank if using an IAM User access key."}},"description":"S3AccessKeyAuth holds the details needed for access key / secret authentication."},"cross_account":{"type":"object","properties":{"push_role_arn":{"type":"string","description":"PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."},"session_name":{"type":"string","description":"SessionName is the name of the IAM role session."},"external_id":{"type":"string","description":"ExternalId is the aws ExternalId that must be set in your role\'s trust policy to enable cross account access. Output only.","readOnly":true}},"description":"S3CrossAccount holds the details needed for cross account authentication."}},"description":"S3Connector is the information required to define a destination using an S3 bucket."},"pubmatic":{"type":"object","properties":{"dpid":{"type":"integer","format":"int32","description":"DPID is your PubMatic data partner ID."}},"description":"PubmaticConnector is the information required to define a destination pushing to PubMatic."},"sftp":{"type":"object","properties":{"host":{"type":"string","description":"Host is the host address of the sftp server."},"port":{"type":"integer","format":"int32","description":"port is the port number that gets used when connecting to the sftp server."},"password_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"password":{"type":"string","description":"Password is the password of the user."}},"description":"SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."},"ssh_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"ssh_key":{"type":"string","description":"SshKey is the ssh key of the user."}},"description":"SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."},"host_keys":{"description":"HostKeys contains options for providing a public key to verify the host.","type":"object","properties":{"authorized_keys":{"type":"array","items":{"type":"string"},"description":"AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."},"known_hosts":{"type":"array","items":{"type":"string"},"description":"KnownHosts are the host public keys in OpenSSH known_hosts format."},"public_key_pem":{"type":"string","description":"PublicKeyPem is the servers public PEM key."}}},"gpg_public_key":{"type":"string","description":"GpgPublicKey is the GPG public key to use in encrypting the data. Optional."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"SftpConnector is the information required to define a destination pushing to a sftp server."},"creator_id":{"type":"string","description":"Output only. CreatorId is the ID of the user who created the destination.","readOnly":true},"created_time":{"type":"string","format":"date-time","description":"Output only. CreatedTime is the date and time the destination was created.","readOnly":true},"updated_time":{"type":"string","format":"date-time","description":"Output only. UpdatedTime is the date and time the destination was last updated.","readOnly":true},"connector_type":{"description":"Output only. ConnectorType states the type of connector used by the destination.","readOnly":true,"type":"string","enum":["S3_ACCESS_KEYS","PUBMATIC","S3_CROSS_ACCOUNT","SFTP"],"default":"S3_ACCESS_KEYS"}},"description":"Destination is the information required to define destinations."}},"description":"UpdateDestinationResponse is the output of the UpdateDestination method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the right to update the Destination.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Destination could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"destination.id","description":"Output only. ID is the globally unique ID of the destination.","in":"path","required":true,"schema":{"type":"string"}},{"name":"update_mask","description":"UpdateMask is a field mask, allowing partial resource update.\\nThe update mask applies to the Allocation resource. For the `FieldMask` definition,\\nsee https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask","in":"query","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"owner_id":{"type":"string","description":"Output only. OwnerId is the user or company ID of the owner of the destination.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this destination."},"description":{"type":"string","description":"Description is an optional description given to this destination."},"s3":{"type":"object","properties":{"bucket_name":{"type":"string","description":"BucketName is the name of the S3 Bucket."},"region":{"description":"Region is the region of the S3 Bucket.","type":"string","enum":["UNKNOWN_REGION","US_EAST_1","US_EAST_2","US_WEST_1","US_WEST_2","CA_CENTRAL_1","EU_WEST_1","EU_WEST_2","EU_CENTRAL_1","AP_SOUTHEAST_1","AP_SOUTHEAST_2","AP_SOUTH_1","AP_NORTHEAST_1","AP_NORTHEAST_2","SA_EAST_1","CN_NORTH_1"],"default":"UNKNOWN_REGION"},"path":{"type":"string","description":"Path is the path in the bucket to export data to."},"default_push_overrides":{"title":"DefaultPushOverrides","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the s3 bucket to export data to."}},"description":"S3Overrides are the values that can be overridden when pushing to s3."},"access_key":{"type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKeyId is the id of the access key to authenticate with AWS."},"secret":{"type":"string","description":"Secret is the access key secret for authentication."},"session_token":{"type":"string","description":"SessionToken is an optional STS session token.\\nLeave blank if using an IAM User access key."}},"description":"S3AccessKeyAuth holds the details needed for access key / secret authentication."},"cross_account":{"type":"object","properties":{"push_role_arn":{"type":"string","description":"PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."},"session_name":{"type":"string","description":"SessionName is the name of the IAM role session."},"external_id":{"type":"string","description":"ExternalId is the aws ExternalId that must be set in your role\'s trust policy to enable cross account access. Output only.","readOnly":true}},"description":"S3CrossAccount holds the details needed for cross account authentication."}},"description":"S3Connector is the information required to define a destination using an S3 bucket."},"pubmatic":{"type":"object","properties":{"dpid":{"type":"integer","format":"int32","description":"DPID is your PubMatic data partner ID."}},"description":"PubmaticConnector is the information required to define a destination pushing to PubMatic."},"sftp":{"type":"object","properties":{"host":{"type":"string","description":"Host is the host address of the sftp server."},"port":{"type":"integer","format":"int32","description":"port is the port number that gets used when connecting to the sftp server."},"password_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"password":{"type":"string","description":"Password is the password of the user."}},"description":"SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."},"ssh_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"ssh_key":{"type":"string","description":"SshKey is the ssh key of the user."}},"description":"SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."},"host_keys":{"description":"HostKeys contains options for providing a public key to verify the host.","type":"object","properties":{"authorized_keys":{"type":"array","items":{"type":"string"},"description":"AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."},"known_hosts":{"type":"array","items":{"type":"string"},"description":"KnownHosts are the host public keys in OpenSSH known_hosts format."},"public_key_pem":{"type":"string","description":"PublicKeyPem is the servers public PEM key."}}},"gpg_public_key":{"type":"string","description":"GpgPublicKey is the GPG public key to use in encrypting the data. Optional."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"SftpConnector is the information required to define a destination pushing to a sftp server."},"creator_id":{"type":"string","description":"Output only. CreatorId is the ID of the user who created the destination.","readOnly":true},"created_time":{"type":"string","format":"date-time","description":"Output only. CreatedTime is the date and time the destination was created.","readOnly":true},"updated_time":{"type":"string","format":"date-time","description":"Output only. UpdatedTime is the date and time the destination was last updated.","readOnly":true},"connector_type":{"description":"Output only. ConnectorType states the type of connector used by the destination.","readOnly":true,"type":"string","enum":["S3_ACCESS_KEYS","PUBMATIC","S3_CROSS_ACCOUNT","SFTP"],"default":"S3_ACCESS_KEYS"}},"description":"Destination is the information required to define destinations."}}},"required":true},"tags":["Destinations"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/export/destinations/{destination_id}":{"get":{"summary":"Get a Destination","description":"Gets a specific Destination.","operationId":"DestinationsGetDestination","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"destination":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the globally unique ID of the destination.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the user or company ID of the owner of the destination.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this destination."},"description":{"type":"string","description":"Description is an optional description given to this destination."},"s3":{"type":"object","properties":{"bucket_name":{"type":"string","description":"BucketName is the name of the S3 Bucket."},"region":{"description":"Region is the region of the S3 Bucket.","type":"string","enum":["UNKNOWN_REGION","US_EAST_1","US_EAST_2","US_WEST_1","US_WEST_2","CA_CENTRAL_1","EU_WEST_1","EU_WEST_2","EU_CENTRAL_1","AP_SOUTHEAST_1","AP_SOUTHEAST_2","AP_SOUTH_1","AP_NORTHEAST_1","AP_NORTHEAST_2","SA_EAST_1","CN_NORTH_1"],"default":"UNKNOWN_REGION"},"path":{"type":"string","description":"Path is the path in the bucket to export data to."},"default_push_overrides":{"title":"DefaultPushOverrides","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the s3 bucket to export data to."}},"description":"S3Overrides are the values that can be overridden when pushing to s3."},"access_key":{"type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKeyId is the id of the access key to authenticate with AWS."},"secret":{"type":"string","description":"Secret is the access key secret for authentication."},"session_token":{"type":"string","description":"SessionToken is an optional STS session token.\\nLeave blank if using an IAM User access key."}},"description":"S3AccessKeyAuth holds the details needed for access key / secret authentication."},"cross_account":{"type":"object","properties":{"push_role_arn":{"type":"string","description":"PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."},"session_name":{"type":"string","description":"SessionName is the name of the IAM role session."},"external_id":{"type":"string","description":"ExternalId is the aws ExternalId that must be set in your role\'s trust policy to enable cross account access. Output only.","readOnly":true}},"description":"S3CrossAccount holds the details needed for cross account authentication."}},"description":"S3Connector is the information required to define a destination using an S3 bucket."},"pubmatic":{"type":"object","properties":{"dpid":{"type":"integer","format":"int32","description":"DPID is your PubMatic data partner ID."}},"description":"PubmaticConnector is the information required to define a destination pushing to PubMatic."},"sftp":{"type":"object","properties":{"host":{"type":"string","description":"Host is the host address of the sftp server."},"port":{"type":"integer","format":"int32","description":"port is the port number that gets used when connecting to the sftp server."},"password_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"password":{"type":"string","description":"Password is the password of the user."}},"description":"SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."},"ssh_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"ssh_key":{"type":"string","description":"SshKey is the ssh key of the user."}},"description":"SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."},"host_keys":{"description":"HostKeys contains options for providing a public key to verify the host.","type":"object","properties":{"authorized_keys":{"type":"array","items":{"type":"string"},"description":"AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."},"known_hosts":{"type":"array","items":{"type":"string"},"description":"KnownHosts are the host public keys in OpenSSH known_hosts format."},"public_key_pem":{"type":"string","description":"PublicKeyPem is the servers public PEM key."}}},"gpg_public_key":{"type":"string","description":"GpgPublicKey is the GPG public key to use in encrypting the data. Optional."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"SftpConnector is the information required to define a destination pushing to a sftp server."},"creator_id":{"type":"string","description":"Output only. CreatorId is the ID of the user who created the destination.","readOnly":true},"created_time":{"type":"string","format":"date-time","description":"Output only. CreatedTime is the date and time the destination was created.","readOnly":true},"updated_time":{"type":"string","format":"date-time","description":"Output only. UpdatedTime is the date and time the destination was last updated.","readOnly":true},"connector_type":{"description":"Output only. ConnectorType states the type of connector used by the destination.","readOnly":true,"type":"string","enum":["S3_ACCESS_KEYS","PUBMATIC","S3_CROSS_ACCOUNT","SFTP"],"default":"S3_ACCESS_KEYS"}},"description":"Destination is the information required to define destinations."}},"description":"GetDestinationResponse is the output of the GetDestination method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the right to view Destinations.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Destination could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"destination_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Destinations"],"security":[{"API_Keys":[]}]},"delete":{"summary":"Delete a Destination","description":"Deletes a specific Destination.","operationId":"DestinationsDeleteDestination","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the right to delete the Destination.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"destination_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Destinations"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/export/execute":{"post":{"summary":"Push to a destination","description":"Pushes a result into a destination.","operationId":"DestinationsPushResults","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"push_id":{"type":"string","description":"PushId is the unique identifier for the requested push."}},"description":"PushResultsResponse is the output of the PushResults request."}}}},"400":{"description":"Returned when the request is invalid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the right to push to the Destinations.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the destination, query or the dataset does not exist.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"destination_id":{"type":"string","description":"DestinationID is the unique identifier for destination."},"dataset_id":{"type":"string","description":"DatasetId is the id of the dataset used for the query."},"activation_query_id":{"type":"string","description":"ActivationQueryId is the id of the activation query."},"cohort_version":{"type":"string","description":"CohortVersion is the version of the cohort to push."},"s3":{"description":"S3 are the push time variable for the s3 connector type.","type":"object","properties":{"filename":{"type":"string","description":"Filename is the name used for file when pushing the results to a destination."},"overrides":{"description":"Overrides contains the fields that can be overridden when pushing to s3.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the s3 bucket to export data to."}}}}},"pubmatic":{"description":"Pubmatic are the overrides for the PubMatic connector type.","type":"object","properties":{"user_id_column":{"type":"string","description":"UserIDColumn is the name of the output column you want mapping to PubMatic userid field."},"uid_type":{"description":"UIDType is a value that determines what the identity partner\'s PubMatic user ID represents.","type":"string","enum":["COOKIE_ID","DEVICE_ID","BOUNCE_X","TTD","ID5","CRITEO_RTUS","IDENTITY_LINK","PUB_COMMON_ID","FIRST_PARTY_ID","LIVE_INTENT","BRITEPOOL","PARRABLE","CRITEO_ID","MERKLE_M1","TTD_UID","LOTAME_PANORAMA","QUANTCAST_ID","FABRICK_ID","NET_ID","ZEOTAP","SHARED_ID","NUID","IMUID"],"default":"COOKIE_ID"},"country_code":{"description":"CountryCode is the country code that the users belong to.","type":"string","enum":["US","AT","BE","CA","CN","CY","DK","EG","FJ","FI","FR","DE","GR","HK","HU","IS","IN","IE","IT","JP","LU","NL","NZ","NO","PL","PT","SG","ES","SE","CH","GB","AU"],"default":"US"},"addseg":{"type":"array","items":{"type":"string"},"description":"Addseg is a  list of audiences to add users to."}}},"sftp":{"description":"Sftp are the overrides for the sftp connector type.","type":"object","properties":{"filename":{"type":"string","description":"Filename is the name used for file when pushing the results to a destination."},"overrides":{"description":"Overrides contains the fields that can be overridden when pushing to a sftp server.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}}}},"description":"PushResultsRequest is input to the PushResult request."}}},"required":true},"tags":["Destinations"],"security":[{"API_Keys":[]}]}},"/api/v2/files/{file_vault_id}":{"get":{"summary":"List files","description":"List available files with any metadata","operationId":"FilesServicelistFiles","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"files":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The name of the file.","readOnly":true},"size":{"type":"string","format":"int64","description":"The size of the file in bytes.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"The AWS timestamp for when this file was created","readOnly":true},"metadata":{"description":"The metadata associated with this file.","readOnly":true,"type":"object","properties":{"origin":{"type":"object","description":"The details of the origin of the file.","readOnly":true},"user_settings":{"type":"object","description":"The user settings associated with this file.","readOnly":true},"last_modified_date_time":{"type":"string","format":"date-time","description":"The time at which we most recently updated (or created) this Metadata.","readOnly":true}}}},"description":"File is the combination of File attributes and File metadata."},"description":"Files are a list of data for files matching the list request."},"pagination":{"description":"Pagination is the information on how the results were paginated.","type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}}}},"description":"ListFilesResponse is the output of the List method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"file_vault_id","description":"FileVaultId is the id of the File Vault to list files from.","in":"path","required":true,"schema":{"type":"string"}},{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order_by","description":"OrderBy is a comma seperated value to define sorting.\\ne.g \'name,created_time DESC\'.\\nThe values are sperated by space, \'{column} {ASC/DESC}\'.\\nThese are the values that are sortable:\\n  name\\n  size\\n  created_date_time (in RFC3339 format)\\n  metadata.user_settings.origin_type\\n  metadata.user_settings.hidden","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter","description":"Filter is a string containing logic that can specify a restricted set of\\nFiles to be returned. e.g. `name co \'Test\' or name co \'Acme\'`. These are\\nthe supported fields for filtering:\\n  name\\n  size\\n  created_date_time (in RFC3339 format)\\n  metadata.user_settings.hidden\\n  metadata.user_settings.origin_type","in":"query","required":false,"schema":{"type":"string"}}],"tags":["FilesService"],"security":[{"API_Keys":[]}]}},"/api/v2/files/{file_vault_id}/{name}":{"get":{"summary":"Get information about a specific file","description":"Gets information about a file along with any metadata","operationId":"FilesServicegetFile","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"The name of the file.","readOnly":true},"size":{"type":"string","format":"int64","description":"The size of the file in bytes.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"The AWS timestamp for when this file was created","readOnly":true},"metadata":{"description":"The metadata associated with this file.","readOnly":true,"type":"object","properties":{"origin":{"type":"object","description":"The details of the origin of the file.","readOnly":true},"user_settings":{"type":"object","description":"The user settings associated with this file.","readOnly":true},"last_modified_date_time":{"type":"string","format":"date-time","description":"The time at which we most recently updated (or created) this Metadata.","readOnly":true}}}},"description":"File is the combination of File attributes and File metadata."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"file_vault_id","description":"FileVaultId is the id of the File Vault where the file to get data about is\\nstored.","in":"path","required":true,"schema":{"type":"string"}},{"name":"name","description":"Name is the name of the file to get data about.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["FilesService"],"security":[{"API_Keys":[]}]},"delete":{"summary":"Delete file","description":"Delete the specified file","operationId":"FilesServicedeleteFile","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"file_vault_id","description":"The globally unique identifier for the File Vault where the file to delete is.","in":"path","required":true,"schema":{"type":"string"}},{"name":"name","description":"The name of the file to be deleted.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["FilesService"],"security":[{"API_Keys":[]}]},"patch":{"summary":"Updates metadata for a file.","description":"Updates the metadata for a file on a specific File Vault.","operationId":"FilesServiceupdateFileMetadata","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"The name of the file.","readOnly":true},"size":{"type":"string","format":"int64","description":"The size of the file in bytes.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"The AWS timestamp for when this file was created","readOnly":true},"metadata":{"description":"The metadata associated with this file.","readOnly":true,"type":"object","properties":{"origin":{"type":"object","description":"The details of the origin of the file.","readOnly":true},"user_settings":{"type":"object","description":"The user settings associated with this file.","readOnly":true},"last_modified_date_time":{"type":"string","format":"date-time","description":"The time at which we most recently updated (or created) this Metadata.","readOnly":true}}}},"description":"File is the combination of File attributes and File metadata."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the File Vault could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"file_vault_id","description":"The globally unique identifier for the File Vault where the file to delete is.","in":"path","required":true,"schema":{"type":"string"}},{"name":"name","description":"The name of the file to be deleted.","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","description":"A map of string to any value that can be used for any user specific tags or metadata. Some settings such as \'hidden\' are interpreted by the UI. An update replaces all all previous values."}}},"description":"UserSettings contains the new user settings to associate with the file.","required":true},"tags":["FilesService"],"security":[{"API_Keys":[]}]}},"/api/v2/files/{update_bulk.file_vault_id}":{"patch":{"summary":"Update or add metadata to multiple files in a filevault.","description":"Update or add metadata to multiple files in a filevault.","operationId":"FilesServiceupdateBulkFileMetadata","responses":{"200":{"description":"Returned when the request is accepted","content":{"application/json":{"schema":{"type":"object","description":"UpdateBulkMetadataResponse is an empty response for the UpdateBulk request."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"update_bulk.file_vault_id","description":"The globally unique identifier for the File Vault where the files to bulk apply metadata to are.","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"filenames":{"type":"array","items":{"type":"string"},"description":"A list of the files in the File Vault to bulk apply metadata to."},"user_settings":{"type":"object","description":"A map of string to any value that can be used for any user specific tags or metadata. Some settings such as \'hidden\' are interpreted by the UI. An update replaces all all previous values."}},"title":"UpdateBulkMetadata is the bulk update request."}}},"description":"UpdateBulkMetadata is the bulk update request.","required":true},"tags":["FilesService"],"security":[{"API_Keys":[]}]}}},"tags":[{"name":"ImportConnectorConfigs","description":"Define templates for the importing of data from various remote systems into the InfoSum platform."},{"name":"Imports","description":"Create, Run and Manage import tasks; which are used to import data from a 3rd party system into a File Vault."},{"name":"TransformService","description":"Run transformation scripts against data stored in a File Vault."},{"name":"FileVaults","description":"Create and manage File Vaults which allow the storage of raw data."},{"name":"Destinations","description":"Define how and where to send data when it is exported from the InfoSum platform."},{"name":"FilesService","description":"List, Delete and Manage metadata about files within a File Vault."}],"components":{"securitySchemes":{"API_Keys":{"type":"apiKey","description":"Your API key.","name":"Authorization","in":"header"}}}}}},"docusaurus-theme-redoc":{"theme-redoc":{"lightTheme":{"typography":{"fontFamily":"var(--ifm-font-family-base)","fontSize":"var(--ifm-font-size-base)","lineHeight":"var(--ifm-line-height-base)","fontWeightLight":"var(--ifm-font-weight-light)","fontWeightRegular":"var(--ifm-font-weight-base)","fontWeightBold":"var(--ifm-font-weight-bold)","headings":{"fontFamily":"var(--ifm-heading-font-family)","fontWeight":"var(--ifm-heading-font-weight)","lineHeight":"var(--ifm-heading-line-height)"},"code":{"fontFamily":"var(--ifm-font-family-monospace)","lineHeight":"var(--ifm-pre-line-height)"}},"sidebar":{"width":"300px","backgroundColor":"#ffffff"},"rightPanel":{"backgroundColor":"#303846"},"colors":{"primary":{"main":"#25c2a0"}},"theme":{"prism":{"additionalLanguages":["scala"]}}},"darkTheme":{"typography":{"fontFamily":"var(--ifm-font-family-base)","fontSize":"var(--ifm-font-size-base)","lineHeight":"var(--ifm-line-height-base)","fontWeightLight":"var(--ifm-font-weight-light)","fontWeightRegular":"var(--ifm-font-weight-base)","fontWeightBold":"var(--ifm-font-weight-bold)","headings":{"fontFamily":"var(--ifm-heading-font-family)","fontWeight":"var(--ifm-heading-font-weight)","lineHeight":"var(--ifm-heading-line-height)"},"code":{"fontFamily":"var(--ifm-font-family-monospace)","lineHeight":"var(--ifm-pre-line-height)"}},"sidebar":{"width":"300px","backgroundColor":"rgb(24, 25, 26)","textColor":"#f5f6f7","arrow":{"color":"#f5f6f7"}},"colors":{"text":{"primary":"#f5f6f7","secondary":"rgba(255, 255, 255, 1)"},"gray":{"50":"#FAFAFA","100":"#F5F5F5"},"border":{"dark":"#ffffff","light":"rgba(0,0,0, 0.1)"},"primary":{"main":"#25c2a0"}},"schema":{"nestedBackground":"rgb(24, 25, 26)","typeNameColor":"rgba(255, 255, 255, 1)","typeTitleColor":"rgba(255, 255, 255, 1)"},"theme":{"prism":{"additionalLanguages":["scala"]}}},"options":{"scrollYOffset":"nav.navbar","expandSingleSchemaField":true,"menuToggle":true,"suppressWarnings":true}}},"docusaurus-plugin-content-docs":{"default":{"path":"/docs","versions":[{"name":"current","label":"Next","isLast":true,"path":"/docs","mainDocId":"intro","docs":[{"id":"intro","path":"/docs/intro","sidebar":"tutorialSidebar"}],"draftIds":[],"sidebars":{"tutorialSidebar":{"link":{"path":"/docs/intro","label":"intro"}}}}],"breadcrumbs":true}}}'),a=JSON.parse('{"defaultLocale":"en","locales":["en"],"currentLocale":"en","localeConfigs":{"en":{"label":"English","direction":"ltr","htmlLang":"en","calendar":"gregory"}}}'),i=t(7529),T=JSON.parse('{"docusaurusVersion":"2.0.0-beta.21","siteVersion":"0.0.0","pluginVersions":{"docusaurus-plugin-content-docs":{"type":"package","name":"@docusaurus/plugin-content-docs","version":"2.0.0-beta.21"},"docusaurus-plugin-content-blog":{"type":"package","name":"@docusaurus/plugin-content-blog","version":"2.0.0-beta.21"},"docusaurus-plugin-content-pages":{"type":"package","name":"@docusaurus/plugin-content-pages","version":"2.0.0-beta.21"},"docusaurus-plugin-sitemap":{"type":"package","name":"@docusaurus/plugin-sitemap","version":"2.0.0-beta.21"},"docusaurus-plugin-redoc":{"type":"package","name":"docusaurus-plugin-redoc","version":"1.2.1"},"docusaurus-theme-classic":{"type":"package","name":"@docusaurus/theme-classic","version":"2.0.0-beta.21"},"docusaurus-theme-redoc":{"type":"package","name":"docusaurus-theme-redoc","version":"1.2.2"},"docusaurus-plugin-pwa":{"type":"package","name":"@docusaurus/plugin-pwa","version":"2.0.0-beta.21"}}}'),s={siteConfig:_.default,siteMetadata:T,globalData:E,i18n:a,codeTranslations:i},o=r.createContext(s);function d(e){var n=e.children;return r.createElement(o.Provider,{value:s},n)}},4763:function(e,n,t){"use strict";t.d(n,{Z:function(){return d}});var r=t(4578),_=t(7294),E=t(412),a=t(5742),i=t(5257);function T(e){var n=e.error,t=e.tryAgain;return _.createElement("div",{style:{display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center",height:"50vh",width:"100%",fontSize:"20px"}},_.createElement("h1",null,"This page crashed."),_.createElement("p",null,n.message),_.createElement("button",{type:"button",onClick:t},"Try again"))}function s(e){var n=e.error,t=e.tryAgain;return _.createElement(d,{fallback:function(){return _.createElement(T,{error:n,tryAgain:t})}},_.createElement(a.Z,null,_.createElement("title",null,"Page Error")),_.createElement(i.Z,null,_.createElement(T,{error:n,tryAgain:t})))}var o=function(e){return _.createElement(s,e)},d=function(e){function n(n){var t;return(t=e.call(this,n)||this).state={error:null},t}(0,r.Z)(n,e);var t=n.prototype;return t.componentDidCatch=function(e){E.default.canUseDOM&&this.setState({error:e})},t.render=function(){var e=this,n=this.props.children,t=this.state.error;if(t){var r,_={error:t,tryAgain:function(){return e.setState({error:null})}};return(null!=(r=this.props.fallback)?r:o)(_)}return null!=n?n:null},n}(_.Component)},412:function(e,n,t){"use strict";t.r(n);var r=!("undefined"==typeof window||!window.document||!window.document.createElement),_={canUseDOM:r,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseIntersectionObserver:r&&"IntersectionObserver"in window,canUseViewport:r&&!!window.screen};n.default=_},5742:function(e,n,t){"use strict";t.d(n,{Z:function(){return E}});var r=t(7294),_=t(405);function E(e){return r.createElement(_.ql,e)}},9960:function(e,n,t){"use strict";t.d(n,{Z:function(){return R}});var r=t(7462),_=t(3366),E=t(7294),a=t(3727),i=t(8780),T=t(2263),s=t(3919),o=t(412),d=E.createContext({collectLink:function(){}});var I=t(4996),N=["isNavLink","to","href","activeClassName","isActive","data-noBrokenLinkCheck","autoAddBaseUrl"];function O(e,n){var t,O,R=e.isNavLink,u=e.to,A=e.href,D=e.activeClassName,S=e.isActive,l=e["data-noBrokenLinkCheck"],h=e.autoAddBaseUrl,C=void 0===h||h,P=(0,_.Z)(e,N),U=(0,T.Z)().siteConfig,c=U.trailingSlash,p=U.baseUrl,L=(0,I.C)().withBaseUrl,f=(0,E.useContext)(d),F=(0,E.useRef)(null);(0,E.useImperativeHandle)(n,(function(){return F.current}));var M=u||A;var m,w=(0,s.Z)(M),b=null==M?void 0:M.replace("pathname://",""),X=void 0!==b?(m=b,C&&function(e){return e.startsWith("/")}(m)?L(m):m):void 0;X&&w&&(X=(0,i.applyTrailingSlash)(X,{trailingSlash:c,baseUrl:p}));var g=(0,E.useRef)(!1),v=R?a.OL:a.rU,V=o.default.canUseIntersectionObserver,B=(0,E.useRef)();(0,E.useEffect)((function(){return!V&&w&&null!=X&&window.docusaurus.prefetch(X),function(){V&&B.current&&B.current.disconnect()}}),[B,X,V,w]);var y=null!=(t=null==(O=X)?void 0:O.startsWith("#"))&&t,Y=!X||!w||y;return Y||l||f.collectLink(X),Y?E.createElement("a",(0,r.Z)({ref:F,href:X},M&&!w&&{target:"_blank",rel:"noopener noreferrer"},P)):E.createElement(v,(0,r.Z)({},P,{onMouseEnter:function(){g.current||null==X||(window.docusaurus.preload(X),g.current=!0)},innerRef:function(e){F.current=e,V&&e&&w&&(B.current=new window.IntersectionObserver((function(n){n.forEach((function(n){e===n.target&&(n.isIntersecting||n.intersectionRatio>0)&&(B.current.unobserve(e),B.current.disconnect(),null!=X&&window.docusaurus.prefetch(X))}))})),B.current.observe(e))},to:X},R&&{isActive:S,activeClassName:D}))}var R=E.forwardRef(O)},5999:function(e,n,t){"use strict";t.d(n,{Z:function(){return T},I:function(){return i}});var r=t(7294);function _(e,n){var t=e.split(/(\{\w+\})/).map((function(e,t){if(t%2==1){var r=null==n?void 0:n[e.slice(1,-1)];if(void 0!==r)return r}return e}));return t.some((function(e){return(0,r.isValidElement)(e)}))?t.map((function(e,n){return(0,r.isValidElement)(e)?r.cloneElement(e,{key:n}):e})).filter((function(e){return""!==e})):t.join("")}var E=t(7529);function a(e){var n,t,r=e.id,_=e.message;if(void 0===r&&void 0===_)throw new Error("Docusaurus translation declarations must have at least a translation id or a default translation message");return null!=(n=null!=(t=E[null!=r?r:_])?t:_)?n:r}function i(e,n){return _(a({message:e.message,id:e.id}),n)}function T(e){var n=e.children,t=e.id,E=e.values;if(n&&"string"!=typeof n)throw console.warn("Illegal <Translate> children",n),new Error("The Docusaurus <Translate> component only accept simple string values");var i=a({message:n,id:t});return r.createElement(r.Fragment,null,_(i,E))}},9935:function(e,n,t){"use strict";t.d(n,{m:function(){return r}});var r="default"},3919:function(e,n,t){"use strict";function r(e){return/^(?:\w*:|\/\/)/.test(e)}function _(e){return void 0!==e&&!r(e)}t.d(n,{Z:function(){return _},b:function(){return r}})},4996:function(e,n,t){"use strict";t.d(n,{C:function(){return E},Z:function(){return a}});var r=t(2263),_=t(3919);function E(){var e=(0,r.Z)().siteConfig,n=e.baseUrl,t=e.url;return{withBaseUrl:function(e,r){return function(e,n,t,r){var E=void 0===r?{}:r,a=E.forcePrependBaseUrl,i=void 0!==a&&a,T=E.absolute,s=void 0!==T&&T;if(!t||t.startsWith("#")||(0,_.b)(t))return t;if(i)return n+t.replace(/^\//,"");if(t===n.replace(/\/$/,""))return n;var o=t.startsWith(n)?t:n+t.replace(/^\//,"");return s?e+o:o}(t,n,e,r)}}}function a(e,n){return void 0===n&&(n={}),(0,E().withBaseUrl)(e,n)}},2263:function(e,n,t){"use strict";t.d(n,{Z:function(){return E}});var r=t(7294),_=t(8940);function E(){return(0,r.useContext)(_._)}},8084:function(e,n,t){"use strict";t.d(n,{OD:function(){return E},eZ:function(){return a}});var r=t(2263),_=t(9935);function E(e,n){void 0===n&&(n={});var t=(0,r.Z)().globalData[e];if(!t&&n.failfast)throw new Error('Docusaurus plugin global data not found for "'+e+'" plugin.');return t}function a(e,n,t){void 0===n&&(n=_.m),void 0===t&&(t={});var r=E(e),a=null==r?void 0:r[n];if(!a&&t.failfast)throw new Error('Docusaurus plugin global data not found for "'+e+'" plugin with id "'+n+'".');return a}},2389:function(e,n,t){"use strict";t.d(n,{Z:function(){return E}});var r=t(7294),_=t(8934);function E(){return(0,r.useContext)(_._)}},9670:function(e,n,t){"use strict";t.d(n,{Z:function(){return r}});function r(e){var n={};return function e(t,r){Object.entries(t).forEach((function(t){var _,E=t[0],a=t[1],i=r?r+"."+E:E;"object"==typeof(_=a)&&_&&Object.keys(_).length>0?e(a,i):n[i]=a}))}(e),n}},226:function(e,n,t){"use strict";t.d(n,{_:function(){return _},z:function(){return E}});var r=t(7294),_=r.createContext(null);function E(e){var n=e.children,t=e.value,E=r.useContext(_),a=(0,r.useMemo)((function(){return function(e){var n=e.parent,t=e.value;if(!n){if(!t)throw new Error("Unexpected: no Docusaurus route context found");if(!("plugin"in t))throw new Error("Unexpected: Docusaurus topmost route context has no `plugin` attribute");return t}var r=Object.assign({},n.data,null==t?void 0:t.data);return{plugin:n.plugin,data:r}}({parent:E,value:t})}),[E,t]);return r.createElement(_.Provider,{value:a},n)}},4104:function(e,n,t){"use strict";t.d(n,{Iw:function(){return N},gA:function(){return o},_r:function(){return T},Jo:function(){return O},zh:function(){return s},yW:function(){return I},gB:function(){return d}});var r=t(6775),_=t(8084);var E=function(e){return e.versions.find((function(e){return e.isLast}))};function a(e,n){var t,_,a=function(e,n){var t=E(e);return[].concat(e.versions.filter((function(e){return e!==t})),[t]).find((function(e){return!!(0,r.LX)(n,{path:e.path,exact:!1,strict:!1})}))}(e,n),i=null==a?void 0:a.docs.find((function(e){return!!(0,r.LX)(n,{path:e.path,exact:!0,strict:!1})}));return{activeVersion:a,activeDoc:i,alternateDocVersions:i?(t=i.id,_={},e.versions.forEach((function(e){e.docs.forEach((function(n){n.id===t&&(_[e.name]=n)}))})),_):{}}}var i={},T=function(){var e;return null!=(e=(0,_.OD)("docusaurus-plugin-content-docs"))?e:i},s=function(e){return(0,_.eZ)("docusaurus-plugin-content-docs",e,{failfast:!0})};function o(e){return void 0===e&&(e={}),function(e,n,t){void 0===t&&(t={});var _=Object.entries(e).sort((function(e,n){return n[1].path.localeCompare(e[1].path)})).find((function(e){var t=e[1];return!!(0,r.LX)(n,{path:t.path,exact:!1,strict:!1})})),E=_?{pluginId:_[0],pluginData:_[1]}:void 0;if(!E&&t.failfast)throw new Error("Can't find active docs plugin for \""+n+'" pathname, while it was expected to be found. Maybe you tried to use a docs feature that can only be used on a docs-related page? Existing docs plugin paths are: '+Object.values(e).map((function(e){return e.path})).join(", "));return E}(T(),(0,r.TH)().pathname,e)}function d(e){return s(e).versions}function I(e){var n=s(e);return E(n)}function N(e){return a(s(e),(0,r.TH)().pathname)}function O(e){return function(e,n){var t=E(e);return{latestDocSuggestion:a(e,n).alternateDocVersions[t.name],latestVersionSuggestion:t}}(s(e),(0,r.TH)().pathname)}},8968:function(e,n,t){"use strict";t.r(n);var r=t(4165),_=t(5861),E=t(12),a=["appInstalled","standalone","queryString"],i=!1,T=(0,E.W)("docusaurus.pwa.event.appInstalled.fired");function s(){return o.apply(this,arguments)}function o(){return o=(0,_.Z)((0,r.Z)().mark((function e(){var n;return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,navigator.serviceWorker.getRegistrations();case 2:return n=e.sent,e.next=6,Promise.all(n.map(function(){var e=(0,_.Z)((0,r.Z)().mark((function e(n){return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n.unregister();case 2:e.sent;case 4:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}()));case 6:i,window.location.reload();case 8:case"end":return e.stop()}}),e)}))),o.apply(this,arguments)}function d(){return I.apply(this,arguments)}function I(){return(I=(0,_.Z)((0,r.Z)().mark((function e(){return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return","true"===T.get());case 1:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function N(){return O.apply(this,arguments)}function O(){return(O=(0,_.Z)((0,r.Z)().mark((function e(){var n;return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!("getInstalledRelatedApps"in window.navigator)){e.next=5;break}return e.next=3,navigator.getInstalledRelatedApps();case 3:return n=e.sent,e.abrupt("return",n.some((function(e){return"webapp"===e.platform})));case 5:return e.abrupt("return",!1);case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var R,u={always:function(){return!0},mobile:function(){return window.innerWidth<=940},saveData:function(){var e;return!(null==(e=navigator.connection)||!e.saveData)},appInstalled:(R=(0,_.Z)((0,r.Z)().mark((function e(){var n,t;return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,d();case 2:return n=e.sent,e.next=5,N();case 5:return t=e.sent,e.abrupt("return",n||t);case 7:case"end":return e.stop()}}),e)}))),function(){return R.apply(this,arguments)}),standalone:function(){return window.matchMedia("(display-mode: standalone)").matches},queryString:function(){return"true"===new URLSearchParams(window.location.search).get("offlineMode")}};function A(e){return D.apply(this,arguments)}function D(){return(D=(0,_.Z)((0,r.Z)().mark((function e(n){return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",u[n]());case 1:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function S(){return l.apply(this,arguments)}function l(){return l=(0,_.Z)((0,r.Z)().mark((function e(){var n;return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.all(a.map(function(){var e=(0,_.Z)((0,r.Z)().mark((function e(n){var t;return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,A(n);case 2:return t=e.sent,e.abrupt("return",t?n:void 0);case 4:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}()));case 2:return n=e.sent,e.abrupt("return",n.filter(Boolean));case 4:case"end":return e.stop()}}),e)}))),l.apply(this,arguments)}function h(){return C.apply(this,arguments)}function C(){return(C=(0,_.Z)((0,r.Z)().mark((function e(){var n,t;return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,S();case 2:return n=e.sent,t=n.length>0,e.abrupt("return",t);case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function P(e){var n=JSON.stringify(e),t="/sw.js?params="+encodeURIComponent(n);return t}function U(){return U=(0,_.Z)((0,r.Z)().mark((function e(){var n,E,a,T,s,o,d,I;return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(131).then(t.bind(t,5131));case 2:return n=e.sent,E=n.Workbox,e.next=6,h();case 6:return a=e.sent,T=P({offlineMode:a,debug:i}),s=new E(T),e.next=11,s.register();case 11:if(o=e.sent,d=function(){return s.messageSW({type:"SKIP_WAITING"})},I=function(){var e=(0,_.Z)((0,r.Z)().mark((function e(){var n;return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(a){e.next=5;break}d(),e.next=10;break;case 5:return e.next=7,t.e(283).then(t.bind(t,5283));case 7:return n=e.sent.default,e.next=10,n({onReload:function(){s.addEventListener("controlling",(function(){window.location.reload()})),d()}});case 10:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),s.addEventListener("waiting",(function(e){I()})),s.addEventListener("externalwaiting",(function(e){I()})),null==o||!o.waiting){e.next=20;break}return e.next=20,I();case 20:case"end":return e.stop()}}),e)}))),U.apply(this,arguments)}"undefined"!=typeof window&&"serviceWorker"in navigator&&("undefined"!=typeof window&&(window.addEventListener("appinstalled",function(){var e=(0,_.Z)((0,r.Z)().mark((function e(n){return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return T.set("true"),e.next=5,s();case 5:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}()),window.addEventListener("beforeinstallprompt",function(){var e=(0,_.Z)((0,r.Z)().mark((function e(n){return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!T.get()){e.next=7;break}return T.del(),e.next=7,s();case 7:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}())),function(){return U.apply(this,arguments)}().catch((function(e){return console.error("registerSW failed",e)})))},8320:function(e,n,t){"use strict";t.r(n);var r=t(4865),_=t.n(r);_().configure({showSpinner:!1});var E={onRouteUpdate:function(e){var n=e.location,t=e.previousLocation;if(t&&n.pathname!==t.pathname){var r=window.setTimeout((function(){_().start()}),200);return function(){return window.clearTimeout(r)}}},onRouteDidUpdate:function(){_().done()}};n.default=E},3310:function(e,n,t){"use strict";t.r(n);var r,_,E=t(7410),a=t(6809);r=E.Z,_=a.default.themeConfig.prism.additionalLanguages,globalThis.Prism=r,_.forEach((function(e){t(6726)("./prism-"+e)})),delete globalThis.Prism},8483:function(e,n,t){"use strict";t.d(n,{Z:function(){return E}});var r=t(7294),_="iconExternalLink_lCJq";function E(e){var n=e.width,t=void 0===n?13.5:n,E=e.height,a=void 0===E?13.5:E;return r.createElement("svg",{width:t,height:a,"aria-hidden":"true",viewBox:"0 0 24 24",className:_},r.createElement("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"}))}},5257:function(e,n,t){"use strict";t.d(n,{Z:function(){return Cn}});var r=t(7294),_=t(6010),E=t(4763),a=t(9727),i=t(1944),T=t(5281),s=t(5999),o=t(6775),d=t(5936);function I(e){e.setAttribute("tabindex","-1"),e.focus(),e.removeAttribute("tabindex")}var N="skipToContent_fXgn";function O(){var e=function(){var e=(0,r.useRef)(null),n=(0,o.k6)().action,t=(0,r.useCallback)((function(e){var n;e.preventDefault();var t=null!=(n=document.querySelector("main:first-of-type"))?n:document.querySelector("."+T.k.wrapper.main);t&&I(t)}),[]);return(0,d.S)((function(t){var r=t.location;e.current&&!r.hash&&"PUSH"===n&&I(e.current)})),{containerRef:e,handleSkip:t}}(),n=e.containerRef,t=e.handleSkip;return r.createElement("div",{ref:n,role:"region"},r.createElement("a",{href:"#",className:N,onClick:t},r.createElement(s.Z,{id:"theme.common.skipToMainContent",description:"The skip to content label used for accessibility, allowing to rapidly navigate to main content with keyboard tab/enter navigation"},"Skip to main content")))}var R=t(9689),u=t(6668),A=t(7462),D=t(3366),S=["width","height","color","strokeWidth","className"];function l(e){var n=e.width,t=void 0===n?21:n,_=e.height,E=void 0===_?21:_,a=e.color,i=void 0===a?"currentColor":a,T=e.strokeWidth,s=void 0===T?1.2:T,o=(e.className,(0,D.Z)(e,S));return r.createElement("svg",(0,A.Z)({viewBox:"0 0 15 15",width:t,height:E},o),r.createElement("g",{stroke:i,strokeWidth:s},r.createElement("path",{d:"M.75.75l13.5 13.5M14.25.75L.75 14.25"})))}var h="announcementBar_mb4j",C="announcementBarPlaceholder_vyr4",P="announcementBarClose_gvF7",U="announcementBarContent_xLdY";function c(){var e=(0,R.nT)(),n=e.isActive,t=e.close,E=(0,u.L)().announcementBar;if(!n)return null;var a=E.content,i=E.backgroundColor,T=E.textColor,o=E.isCloseable;return r.createElement("div",{className:h,style:{backgroundColor:i,color:T},role:"banner"},o&&r.createElement("div",{className:C}),r.createElement("div",{className:U,dangerouslySetInnerHTML:{__html:a}}),o?r.createElement("button",{type:"button",className:(0,_.Z)("clean-btn close",P),onClick:t,"aria-label":(0,s.I)({id:"theme.AnnouncementBar.closeButtonAriaLabel",message:"Close",description:"The ARIA label for close button of announcement bar"})},r.createElement(l,{width:14,height:14,strokeWidth:3.1})):null)}var p=t(2961),L=t(2466);var f=t(902),F=t(3102),M=r.createContext(null);function m(e){var n,t,_,E,a,i,T,s=e.children,o=(n=(0,p.e)(),t=(0,F.HY)(),_=(0,r.useState)(!1),E=_[0],a=_[1],i=null!==t.component,T=(0,f.D9)(i),(0,r.useEffect)((function(){i&&!T&&a(!0)}),[i,T]),(0,r.useEffect)((function(){i?n.shown||a(!0):a(!1)}),[n.shown,i]),(0,r.useMemo)((function(){return[E,a]}),[E]));return r.createElement(M.Provider,{value:o},s)}function w(e){if(e.component){var n=e.component;return r.createElement(n,e.props)}}function b(){var e=(0,r.useContext)(M);if(!e)throw new f.i6("NavbarSecondaryMenuDisplayProvider");var n=e[0],t=e[1],_=(0,r.useCallback)((function(){return t(!1)}),[t]),E=(0,F.HY)();return(0,r.useMemo)((function(){return{shown:n,hide:_,content:w(E)}}),[_,E,n])}function X(e){var n=e.header,t=e.primaryMenu,E=e.secondaryMenu,a=b().shown;return r.createElement("div",{className:"navbar-sidebar"},n,r.createElement("div",{className:(0,_.Z)("navbar-sidebar__items",{"navbar-sidebar__items--show-secondary":a})},r.createElement("div",{className:"navbar-sidebar__item menu"},t),r.createElement("div",{className:"navbar-sidebar__item menu"},E)))}var g=t(2949),v=t(2389);function V(e){return r.createElement("svg",(0,A.Z)({viewBox:"0 0 24 24",width:24,height:24},e),r.createElement("path",{fill:"currentColor",d:"M12,9c1.65,0,3,1.35,3,3s-1.35,3-3,3s-3-1.35-3-3S10.35,9,12,9 M12,7c-2.76,0-5,2.24-5,5s2.24,5,5,5s5-2.24,5-5 S14.76,7,12,7L12,7z M2,13l2,0c0.55,0,1-0.45,1-1s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S1.45,13,2,13z M20,13l2,0c0.55,0,1-0.45,1-1 s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S19.45,13,20,13z M11,2v2c0,0.55,0.45,1,1,1s1-0.45,1-1V2c0-0.55-0.45-1-1-1S11,1.45,11,2z M11,20v2c0,0.55,0.45,1,1,1s1-0.45,1-1v-2c0-0.55-0.45-1-1-1C11.45,19,11,19.45,11,20z M5.99,4.58c-0.39-0.39-1.03-0.39-1.41,0 c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0s0.39-1.03,0-1.41L5.99,4.58z M18.36,16.95 c-0.39-0.39-1.03-0.39-1.41,0c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0c0.39-0.39,0.39-1.03,0-1.41 L18.36,16.95z M19.42,5.99c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06c-0.39,0.39-0.39,1.03,0,1.41 s1.03,0.39,1.41,0L19.42,5.99z M7.05,18.36c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06 c-0.39,0.39-0.39,1.03,0,1.41s1.03,0.39,1.41,0L7.05,18.36z"}))}function B(e){return r.createElement("svg",(0,A.Z)({viewBox:"0 0 24 24",width:24,height:24},e),r.createElement("path",{fill:"currentColor",d:"M9.37,5.51C9.19,6.15,9.1,6.82,9.1,7.5c0,4.08,3.32,7.4,7.4,7.4c0.68,0,1.35-0.09,1.99-0.27C17.45,17.19,14.93,19,12,19 c-3.86,0-7-3.14-7-7C5,9.07,6.81,6.55,9.37,5.51z M12,3c-4.97,0-9,4.03-9,9s4.03,9,9,9s9-4.03,9-9c0-0.46-0.04-0.92-0.1-1.36 c-0.98,1.37-2.58,2.26-4.4,2.26c-2.98,0-5.4-2.42-5.4-5.4c0-1.81,0.89-3.42,2.26-4.4C12.92,3.04,12.46,3,12,3L12,3z"}))}var y={toggle:"toggle_vylO",toggleButton:"toggleButton_gllP",darkToggleIcon:"darkToggleIcon_wfgR",lightToggleIcon:"lightToggleIcon_pyhR",toggleButtonDisabled:"toggleButtonDisabled_aARS"};function Y(e){var n=e.className,t=e.value,E=e.onChange,a=(0,v.Z)(),i=(0,s.I)({message:"Switch between dark and light mode (currently {mode})",id:"theme.colorToggle.ariaLabel",description:"The ARIA label for the navbar color mode toggle"},{mode:"dark"===t?(0,s.I)({message:"dark mode",id:"theme.colorToggle.ariaLabel.mode.dark",description:"The name for the dark color mode"}):(0,s.I)({message:"light mode",id:"theme.colorToggle.ariaLabel.mode.light",description:"The name for the light color mode"})});return r.createElement("div",{className:(0,_.Z)(y.toggle,n)},r.createElement("button",{className:(0,_.Z)("clean-btn",y.toggleButton,!a&&y.toggleButtonDisabled),type:"button",onClick:function(){return E("dark"===t?"light":"dark")},disabled:!a,title:i,"aria-label":i},r.createElement(V,{className:(0,_.Z)(y.toggleIcon,y.lightToggleIcon)}),r.createElement(B,{className:(0,_.Z)(y.toggleIcon,y.darkToggleIcon)})))}var K=r.memo(Y);function G(e){var n=e.className,t=(0,u.L)().colorMode.disableSwitch,_=(0,g.I)(),E=_.colorMode,a=_.setColorMode;return t?null:r.createElement(K,{className:n,value:E,onChange:a})}var q=t(1327);function k(){return r.createElement(q.Z,{className:"navbar__brand",imageClassName:"navbar__logo",titleClassName:"navbar__title text--truncate"})}function x(){var e=(0,p.e)();return r.createElement("button",{type:"button",className:"clean-btn navbar-sidebar__close",onClick:function(){return e.toggle()}},r.createElement(l,{color:"var(--ifm-color-emphasis-600)"}))}function H(){return r.createElement("div",{className:"navbar-sidebar__brand"},r.createElement(k,null),r.createElement(G,{className:"margin-right--md"}),r.createElement(x,null))}var Q=t(9960),W=t(4996),j=t(3919);function Z(e,n){return void 0!==e&&void 0!==n&&new RegExp(e,"gi").test(n)}var z=t(8483),$=["activeBasePath","activeBaseRegex","to","href","label","html","isDropdownLink","prependBaseUrlToHref"];function J(e){var n=e.activeBasePath,t=e.activeBaseRegex,_=e.to,E=e.href,a=e.label,i=e.html,T=e.isDropdownLink,s=e.prependBaseUrlToHref,o=(0,D.Z)(e,$),d=(0,W.Z)(_),I=(0,W.Z)(n),N=(0,W.Z)(E,{forcePrependBaseUrl:!0}),O=a&&E&&!(0,j.Z)(E),R=i?{dangerouslySetInnerHTML:{__html:i}}:{children:r.createElement(r.Fragment,null,a,O&&r.createElement(z.Z,T&&{width:12,height:12}))};return E?r.createElement(Q.Z,(0,A.Z)({href:s?N:E},o,R)):r.createElement(Q.Z,(0,A.Z)({to:d,isNavLink:!0},(n||t)&&{isActive:function(e,n){return t?Z(t,n.pathname):n.pathname.startsWith(I)}},o,R))}var ee=["className","isDropdownItem"],ne=["className","isDropdownItem"],te=["mobile","position"];function re(e){var n=e.className,t=e.isDropdownItem,E=void 0!==t&&t,a=(0,D.Z)(e,ee),i=r.createElement(J,(0,A.Z)({className:(0,_.Z)(E?"dropdown__link":"navbar__item navbar__link",n),isDropdownLink:E},a));return E?r.createElement("li",null,i):i}function _e(e){var n=e.className,t=(e.isDropdownItem,(0,D.Z)(e,ne));return r.createElement("li",{className:"menu__list-item"},r.createElement(J,(0,A.Z)({className:(0,_.Z)("menu__link",n)},t)))}function Ee(e){var n,t=e.mobile,_=void 0!==t&&t,E=(e.position,(0,D.Z)(e,te)),a=_?_e:re;return r.createElement(a,(0,A.Z)({},E,{activeClassName:null!=(n=E.activeClassName)?n:_?"menu__link--active":"navbar__link--active"}))}var ae=t(8596),ie=t(2263);var Te=t(6043),se=["items","position","className","onClick"],oe=["items","className","position","onClick"],de=["mobile"];function Ie(e,n){return e.some((function(e){return function(e,n){return!!(0,ae.Mg)(e.to,n)||!!Z(e.activeBaseRegex,n)||!(!e.activeBasePath||!n.startsWith(e.activeBasePath))}(e,n)}))}function Ne(e){var n,t=e.items,E=e.position,a=e.className,i=(e.onClick,(0,D.Z)(e,se)),T=(0,r.useRef)(null),s=(0,r.useState)(!1),o=s[0],d=s[1];return(0,r.useEffect)((function(){var e=function(e){T.current&&!T.current.contains(e.target)&&d(!1)};return document.addEventListener("mousedown",e),document.addEventListener("touchstart",e),function(){document.removeEventListener("mousedown",e),document.removeEventListener("touchstart",e)}}),[T]),r.createElement("div",{ref:T,className:(0,_.Z)("navbar__item","dropdown","dropdown--hoverable",{"dropdown--right":"right"===E,"dropdown--show":o})},r.createElement(J,(0,A.Z)({"aria-haspopup":"true","aria-expanded":o,role:"button",href:i.to?void 0:"#",className:(0,_.Z)("navbar__link",a)},i,{onClick:i.to?void 0:function(e){return e.preventDefault()},onKeyDown:function(e){"Enter"===e.key&&(e.preventDefault(),d(!o))}}),null!=(n=i.children)?n:i.label),r.createElement("ul",{className:"dropdown__menu"},t.map((function(e,n){return r.createElement(Xe,(0,A.Z)({isDropdownItem:!0,onKeyDown:function(e){if(n===t.length-1&&"Tab"===e.key){e.preventDefault(),d(!1);var r=T.current.nextElementSibling;if(r)(r instanceof HTMLAnchorElement?r:r.querySelector("a")).focus()}},activeClassName:"dropdown__link--active"},e,{key:n}))}))))}function Oe(e){var n,t,E=e.items,a=e.className,i=(e.position,e.onClick),T=(0,D.Z)(e,oe),s=(t=(0,ie.Z)().siteConfig.baseUrl,(0,o.TH)().pathname.replace(t,"/")),d=Ie(E,s),I=(0,Te.u)({initialState:function(){return!d}}),N=I.collapsed,O=I.toggleCollapsed,R=I.setCollapsed;return(0,r.useEffect)((function(){d&&R(!d)}),[s,d,R]),r.createElement("li",{className:(0,_.Z)("menu__list-item",{"menu__list-item--collapsed":N})},r.createElement(J,(0,A.Z)({role:"button",className:(0,_.Z)("menu__link menu__link--sublist menu__link--sublist-caret",a)},T,{onClick:function(e){e.preventDefault(),O()}}),null!=(n=T.children)?n:T.label),r.createElement(Te.z,{lazy:!0,as:"ul",className:"menu__list",collapsed:N},E.map((function(e,n){return r.createElement(Xe,(0,A.Z)({mobile:!0,isDropdownItem:!0,onClick:i,activeClassName:"menu__link--active"},e,{key:n}))}))))}function Re(e){var n=e.mobile,t=void 0!==n&&n,_=(0,D.Z)(e,de),E=t?Oe:Ne;return r.createElement(E,_)}var ue=t(4711),Ae=["width","height"];function De(e){var n=e.width,t=void 0===n?20:n,_=e.height,E=void 0===_?20:_,a=(0,D.Z)(e,Ae);return r.createElement("svg",(0,A.Z)({viewBox:"0 0 24 24",width:t,height:E,"aria-hidden":!0},a),r.createElement("path",{fill:"currentColor",d:"M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z"}))}var Se="iconLanguage_nlXk",le=["mobile","dropdownItemsBefore","dropdownItemsAfter"];var he=function(){return null},Ce="searchBox_ZlJk";function Pe(e){var n=e.children,t=e.className;return r.createElement("div",{className:(0,_.Z)(t,Ce)},n)}var Ue=t(4104),ce=t(8425),pe=["docId","label","docsPluginId"];var Le=["sidebarId","label","docsPluginId"];var fe=["label","to","docsPluginId"];var Fe=t(373),Me=["mobile","docsPluginId","dropdownActiveClassDisabled","dropdownItemsBefore","dropdownItemsAfter"],me=function(e){return e.docs.find((function(n){return n.id===e.mainDocId}))};var we={default:Ee,localeDropdown:function(e){var n=e.mobile,t=e.dropdownItemsBefore,_=e.dropdownItemsAfter,E=(0,D.Z)(e,le),a=(0,ie.Z)().i18n,i=a.currentLocale,T=a.locales,o=a.localeConfigs,d=(0,ue.l)(),I=T.map((function(e){var t="pathname://"+d.createUrl({locale:e,fullyQualified:!1});return{label:o[e].label,to:t,target:"_self",autoAddBaseUrl:!1,className:e===i?n?"menu__link--active":"dropdown__link--active":""}})),N=[].concat(t,I,_),O=n?(0,s.I)({message:"Languages",id:"theme.navbar.mobileLanguageDropdown.label",description:"The label for the mobile language switcher dropdown"}):o[i].label;return r.createElement(Re,(0,A.Z)({},E,{mobile:n,label:r.createElement(r.Fragment,null,r.createElement(De,{className:Se}),O),items:N}))},search:function(e){var n=e.mobile,t=e.className;return n?null:r.createElement(Pe,{className:t},r.createElement(he,null))},dropdown:Re,html:function(e){var n=e.value,t=e.className,E=e.mobile,a=void 0!==E&&E,i=e.isDropdownItem,T=void 0!==i&&i,s=T?"li":"div";return r.createElement(s,{className:(0,_.Z)({navbar__item:!a&&!T,"menu__list-item":a},t),dangerouslySetInnerHTML:{__html:n}})},doc:function(e){var n=e.docId,t=e.label,_=e.docsPluginId,E=(0,D.Z)(e,pe),a=(0,Ue.Iw)(_).activeDoc,i=(0,ce.vY)(n,_);return null===i?null:r.createElement(Ee,(0,A.Z)({exact:!0},E,{isActive:function(){return(null==a?void 0:a.path)===i.path||!(null==a||!a.sidebar)&&a.sidebar===i.sidebar},label:null!=t?t:i.id,to:i.path}))},docSidebar:function(e){var n=e.sidebarId,t=e.label,_=e.docsPluginId,E=(0,D.Z)(e,Le),a=(0,Ue.Iw)(_).activeDoc,i=(0,ce.oz)(n,_).link;if(!i)throw new Error('DocSidebarNavbarItem: Sidebar with ID "'+n+"\" doesn't have anything to be linked to.");return r.createElement(Ee,(0,A.Z)({exact:!0},E,{isActive:function(){return(null==a?void 0:a.sidebar)===n},label:null!=t?t:i.label,to:i.path}))},docsVersion:function(e){var n=e.label,t=e.to,_=e.docsPluginId,E=(0,D.Z)(e,fe),a=(0,ce.lO)(_)[0],i=null!=n?n:a.label,T=null!=t?t:function(e){return e.docs.find((function(n){return n.id===e.mainDocId}))}(a).path;return r.createElement(Ee,(0,A.Z)({},E,{label:i,to:T}))},docsVersionDropdown:function(e){var n=e.mobile,t=e.docsPluginId,_=e.dropdownActiveClassDisabled,E=e.dropdownItemsBefore,a=e.dropdownItemsAfter,i=(0,D.Z)(e,Me),T=(0,Ue.Iw)(t),o=(0,Ue.gB)(t),d=(0,Fe.J)(t).savePreferredVersionName,I=o.map((function(e){var n,t=null!=(n=T.alternateDocVersions[e.name])?n:me(e);return{label:e.label,to:t.path,isActive:function(){return e===T.activeVersion},onClick:function(){return d(e.name)}}})),N=[].concat(E,I,a),O=(0,ce.lO)(t)[0],R=n&&N.length>1?(0,s.I)({id:"theme.navbar.mobileVersionsDropdown.label",message:"Versions",description:"The label for the navbar versions dropdown on mobile view"}):O.label,u=n&&N.length>1?void 0:me(O).path;return N.length<=1?r.createElement(Ee,(0,A.Z)({},i,{mobile:n,label:R,to:u,isActive:_?function(){return!1}:void 0})):r.createElement(Re,(0,A.Z)({},i,{mobile:n,label:R,to:u,items:N,isActive:_?function(){return!1}:void 0}))}},be=["type"];function Xe(e){var n=e.type,t=(0,D.Z)(e,be),_=function(e,n){return e&&"default"!==e?e:"items"in n?"dropdown":"default"}(n,t),E=we[_];if(!E)throw new Error('No NavbarItem component found for type "'+n+'".');return r.createElement(E,t)}function ge(){var e=(0,p.e)(),n=(0,u.L)().navbar.items;return r.createElement("ul",{className:"menu__list"},n.map((function(n,t){return r.createElement(Xe,(0,A.Z)({mobile:!0},n,{onClick:function(){return e.toggle()},key:t}))})))}function ve(e){return r.createElement("button",(0,A.Z)({},e,{type:"button",className:"clean-btn navbar-sidebar__back"}),r.createElement(s.Z,{id:"theme.navbar.mobileSidebarSecondaryMenu.backButtonLabel",description:"The label of the back button to return to main menu, inside the mobile navbar sidebar secondary menu (notably used to display the docs sidebar)"},"\u2190 Back to main menu"))}function Ve(){var e=0===(0,u.L)().navbar.items.length,n=b();return r.createElement(r.Fragment,null,!e&&r.createElement(ve,{onClick:function(){return n.hide()}}),n.content)}function Be(){var e,n=(0,p.e)();return void 0===(e=n.shown)&&(e=!0),(0,r.useEffect)((function(){return document.body.style.overflow=e?"hidden":"visible",function(){document.body.style.overflow="visible"}}),[e]),n.shouldRender?r.createElement(X,{header:r.createElement(H,null),primaryMenu:r.createElement(ge,null),secondaryMenu:r.createElement(Ve,null)}):null}var ye="navbarHideable_m1mJ",Ye="navbarHidden_jGov";function Ke(e){return r.createElement("div",(0,A.Z)({role:"presentation"},e,{className:(0,_.Z)("navbar-sidebar__backdrop",e.className)}))}function Ge(e){var n=e.children,t=(0,u.L)().navbar,E=t.hideOnScroll,a=t.style,i=(0,p.e)(),T=function(e){var n=(0,r.useState)(e),t=n[0],_=n[1],E=(0,r.useRef)(!1),a=(0,r.useRef)(0),i=(0,r.useCallback)((function(e){null!==e&&(a.current=e.getBoundingClientRect().height)}),[]);return(0,L.RF)((function(n,t){var r=n.scrollY;if(e)if(r<a.current)_(!0);else if(E.current)E.current=!1;else{var i=null==t?void 0:t.scrollY,T=document.documentElement.scrollHeight-a.current,s=window.innerHeight;i&&r>=i?_(!1):r+s<T&&_(!0)}})),(0,d.S)((function(n){if(e)return n.location.hash?(E.current=!0,void _(!1)):void _(!0)})),{navbarRef:i,isNavbarVisible:t}}(E),s=T.navbarRef,o=T.isNavbarVisible;return r.createElement("nav",{ref:s,className:(0,_.Z)("navbar","navbar--fixed-top",E&&[ye,!o&&Ye],{"navbar--dark":"dark"===a,"navbar--primary":"primary"===a,"navbar-sidebar--show":i.shown})},n,r.createElement(Ke,{onClick:i.toggle}),r.createElement(Be,null))}function qe(e){var n=e.children;return r.createElement(F.n2,null,r.createElement(p.M,null,r.createElement(m,null,n)))}var ke=["width","height","className"];function xe(e){var n=e.width,t=void 0===n?30:n,_=e.height,E=void 0===_?30:_,a=e.className,i=(0,D.Z)(e,ke);return r.createElement("svg",(0,A.Z)({className:a,width:t,height:E,viewBox:"0 0 30 30","aria-hidden":"true"},i),r.createElement("path",{stroke:"currentColor",strokeLinecap:"round",strokeMiterlimit:"10",strokeWidth:"2",d:"M4 7h22M4 15h22M4 23h22"}))}function He(){var e=(0,p.e)();return r.createElement("button",{onClick:e.toggle,onKeyDown:e.toggle,"aria-label":"Navigation bar toggle",className:"navbar__toggle clean-btn",type:"button",tabIndex:0},r.createElement(xe,null))}var Qe="colorModeToggle_DEke";function We(e){var n=e.items;return r.createElement(r.Fragment,null,n.map((function(e,n){return r.createElement(Xe,(0,A.Z)({},e,{key:n}))})))}function je(e){var n=e.left,t=e.right;return r.createElement("div",{className:"navbar__inner"},r.createElement("div",{className:"navbar__items"},n),r.createElement("div",{className:"navbar__items navbar__items--right"},t))}function Ze(){var e=(0,p.e)(),n=(0,u.L)().navbar.items,t=function(e){function n(e){var n;return"left"===(null!=(n=e.position)?n:"right")}return[e.filter(n),e.filter((function(e){return!n(e)}))]}(n),_=t[0],E=t[1],a=n.find((function(e){return"search"===e.type}));return r.createElement(je,{left:r.createElement(r.Fragment,null,!e.disabled&&r.createElement(He,null),r.createElement(k,null),r.createElement(We,{items:_})),right:r.createElement(r.Fragment,null,r.createElement(We,{items:E}),r.createElement(G,{className:Qe}),!a&&r.createElement(Pe,null,r.createElement(he,null)))})}function ze(){return r.createElement(Ge,null,r.createElement(Ze,null))}var $e=["to","href","label","prependBaseUrlToHref"];function Je(e){var n=e.item,t=n.to,_=n.href,E=n.label,a=n.prependBaseUrlToHref,i=(0,D.Z)(n,$e),T=(0,W.Z)(t),s=(0,W.Z)(_,{forcePrependBaseUrl:!0});return r.createElement(Q.Z,(0,A.Z)({className:"footer__link-item"},_?{href:a?s:_}:{to:T},i),E,_&&!(0,j.Z)(_)&&r.createElement(z.Z,null))}function en(e){var n,t=e.item;return t.html?r.createElement("li",{className:"footer__item",dangerouslySetInnerHTML:{__html:t.html}}):r.createElement("li",{key:null!=(n=t.href)?n:t.to,className:"footer__item"},r.createElement(Je,{item:t}))}function nn(e){var n=e.column;return r.createElement("div",{className:"col footer__col"},r.createElement("div",{className:"footer__title"},n.title),r.createElement("ul",{className:"footer__items clean-list"},n.items.map((function(e,n){return r.createElement(en,{key:n,item:e})}))))}function tn(e){var n=e.columns;return r.createElement("div",{className:"row footer__links"},n.map((function(e,n){return r.createElement(nn,{key:n,column:e})})))}function rn(){return r.createElement("span",{className:"footer__link-separator"},"\xb7")}function _n(e){var n=e.item;return n.html?r.createElement("span",{className:"footer__link-item",dangerouslySetInnerHTML:{__html:n.html}}):r.createElement(Je,{item:n})}function En(e){var n=e.links;return r.createElement("div",{className:"footer__links text--center"},r.createElement("div",{className:"footer__links"},n.map((function(e,t){return r.createElement(r.Fragment,{key:t},r.createElement(_n,{item:e}),n.length!==t+1&&r.createElement(rn,null))}))))}function an(e){var n=e.links;return function(e){return"title"in e[0]}(n)?r.createElement(tn,{columns:n}):r.createElement(En,{links:n})}var Tn=t(941),sn="footerLogoLink_BH7S";function on(e){var n,t=e.logo,_=(0,W.C)().withBaseUrl,E={light:_(t.src),dark:_(null!=(n=t.srcDark)?n:t.src)};return r.createElement(Tn.Z,{className:"footer__logo",alt:t.alt,sources:E,width:t.width,height:t.height})}function dn(e){var n=e.logo;return n.href?r.createElement(Q.Z,{href:n.href,className:sn},r.createElement(on,{logo:n})):r.createElement(on,{logo:n})}function In(e){var n=e.copyright;return r.createElement("div",{className:"footer__copyright",dangerouslySetInnerHTML:{__html:n}})}function Nn(e){var n=e.style,t=e.links,E=e.logo,a=e.copyright;return r.createElement("footer",{className:(0,_.Z)("footer",{"footer--dark":"dark"===n})},r.createElement("div",{className:"container container-fluid"},t,(E||a)&&r.createElement("div",{className:"footer__bottom text--center"},E&&r.createElement("div",{className:"margin-bottom--sm"},E),a)))}function On(){var e=(0,u.L)().footer;if(!e)return null;var n=e.copyright,t=e.links,_=e.logo,E=e.style;return r.createElement(Nn,{style:E,links:t&&t.length>0&&r.createElement(an,{links:t}),logo:_&&r.createElement(dn,{logo:_}),copyright:n&&r.createElement(In,{copyright:n})})}var Rn=r.memo(On),un=t(12),An="docusaurus.tab.",Dn=r.createContext(void 0);function Sn(e){var n=e.children,t=function(){var e=(0,r.useState)({}),n=e[0],t=e[1],_=(0,r.useCallback)((function(e,n){(0,un.W)("docusaurus.tab."+e).set(n)}),[]);(0,r.useEffect)((function(){try{var e={};(0,un._)().forEach((function(n){if(n.startsWith(An)){var t=n.substring(An.length);e[t]=(0,un.W)(n).get()}})),t(e)}catch(n){console.error(n)}}),[]);var E=(0,r.useCallback)((function(e,n){t((function(t){var r;return Object.assign({},t,((r={})[e]=n,r))})),_(e,n)}),[_]);return(0,r.useMemo)((function(){return{tabGroupChoices:n,setTabGroupChoices:E}}),[n,E])}();return r.createElement(Dn.Provider,{value:t},n)}function ln(e){var n=e.children;return r.createElement(g.S,null,r.createElement(R.pl,null,r.createElement(Sn,null,r.createElement(L.OC,null,r.createElement(Fe.L5,null,r.createElement(i.VC,null,r.createElement(qe,null,n)))))))}function hn(e){var n=e.error,t=e.tryAgain;return r.createElement("main",{className:"container margin-vert--xl"},r.createElement("div",{className:"row"},r.createElement("div",{className:"col col--6 col--offset-3"},r.createElement("h1",{className:"hero__title"},r.createElement(s.Z,{id:"theme.ErrorPageContent.title",description:"The title of the fallback page when the page crashed"},"This page crashed.")),r.createElement("p",null,n.message),r.createElement("div",null,r.createElement("button",{type:"button",onClick:t},r.createElement(s.Z,{id:"theme.ErrorPageContent.tryAgain",description:"The label of the button to try again when the page crashed"},"Try again"))))))}function Cn(e){var n=e.children,t=e.noFooter,s=e.wrapperClassName,o=e.title,d=e.description;return(0,a.t)(),r.createElement(ln,null,r.createElement(i.d,{title:o,description:d}),r.createElement(O,null),r.createElement(c,null),r.createElement(ze,null),r.createElement("div",{className:(0,_.Z)(T.k.wrapper.main,s)},r.createElement(E.Z,{fallback:function(e){return r.createElement(hn,e)}},n)),!t&&r.createElement(Rn,null))}},1327:function(e,n,t){"use strict";t.d(n,{Z:function(){return I}});var r=t(7462),_=t(3366),E=t(7294),a=t(9960),i=t(4996),T=t(2263),s=t(6668),o=t(941),d=["imageClassName","titleClassName"];function I(e){var n=(0,T.Z)().siteConfig.title,t=(0,s.L)().navbar,I=t.title,N=t.logo,O=void 0===N?{src:""}:N,R=e.imageClassName,u=e.titleClassName,A=(0,_.Z)(e,d),D=(0,i.Z)(O.href||"/"),S={light:(0,i.Z)(O.src),dark:(0,i.Z)(O.srcDark||O.src)},l=E.createElement(o.Z,{sources:S,height:O.height,width:O.width,alt:O.alt||I||n});return E.createElement(a.Z,(0,r.Z)({to:D},A,O.target&&{target:O.target}),O.src&&(R?E.createElement("div",{className:R},l):l),null!=I&&E.createElement("b",{className:u},I))}},197:function(e,n,t){"use strict";t.d(n,{Z:function(){return E}});var r=t(7294),_=t(5742);function E(e){var n=e.locale,t=e.version,E=e.tag,a=n;return r.createElement(_.Z,null,n&&r.createElement("meta",{name:"docusaurus_locale",content:n}),t&&r.createElement("meta",{name:"docusaurus_version",content:t}),E&&r.createElement("meta",{name:"docusaurus_tag",content:E}),a&&r.createElement("meta",{name:"docsearch:language",content:a}),t&&r.createElement("meta",{name:"docsearch:version",content:t}),E&&r.createElement("meta",{name:"docsearch:docusaurus_tag",content:E}))}},941:function(e,n,t){"use strict";t.d(n,{Z:function(){return d}});var r=t(7462),_=t(3366),E=t(7294),a=t(6010),i=t(2389),T=t(2949),s={themedImage:"themedImage_ToTc","themedImage--light":"themedImage--light_HNdA","themedImage--dark":"themedImage--dark_i4oU"},o=["sources","className","alt"];function d(e){var n=(0,i.Z)(),t=(0,T.I)().colorMode,d=e.sources,I=e.className,N=e.alt,O=(0,_.Z)(e,o),R=n?"dark"===t?["dark"]:["light"]:["light","dark"];return E.createElement(E.Fragment,null,R.map((function(e){return E.createElement("img",(0,r.Z)({key:e,src:d[e],alt:N,className:(0,a.Z)(s.themedImage,s["themedImage--"+e],I)},O))})))}},6043:function(e,n,t){"use strict";t.d(n,{u:function(){return s},z:function(){return A}});var r=t(7462),_=t(3366),E=t(7294),a=t(412),i=["collapsed"],T=["lazy"];function s(e){var n=e.initialState,t=(0,E.useState)(null!=n&&n),r=t[0],_=t[1],a=(0,E.useCallback)((function(){_((function(e){return!e}))}),[]);return{collapsed:r,setCollapsed:_,toggleCollapsed:a}}var o={display:"none",overflow:"hidden",height:"0px"},d={display:"block",overflow:"visible",height:"auto"};function I(e,n){var t=n?o:d;e.style.display=t.display,e.style.overflow=t.overflow,e.style.height=t.height}function N(e){var n=e.collapsibleRef,t=e.collapsed,r=e.animation,_=(0,E.useRef)(!1);(0,E.useEffect)((function(){var e,E=n.current;function a(){var e,n,t=E.scrollHeight,_=null!=(e=null==r?void 0:r.duration)?e:function(e){var n=e/36;return Math.round(10*(4+15*Math.pow(n,.25)+n/5))}(t);return{transition:"height "+_+"ms "+(null!=(n=null==r?void 0:r.easing)?n:"ease-in-out"),height:t+"px"}}function i(){var e=a();E.style.transition=e.transition,E.style.height=e.height}if(!_.current)return I(E,t),void(_.current=!0);return E.style.willChange="height",e=requestAnimationFrame((function(){t?(i(),requestAnimationFrame((function(){E.style.height=o.height,E.style.overflow=o.overflow}))):(E.style.display="block",requestAnimationFrame((function(){i()})))})),function(){return cancelAnimationFrame(e)}}),[n,t,r])}function O(e){if(!a.default.canUseDOM)return e?o:d}function R(e){var n=e.as,t=void 0===n?"div":n,r=e.collapsed,_=e.children,a=e.animation,i=e.onCollapseTransitionEnd,T=e.className,s=e.disableSSRStyle,o=(0,E.useRef)(null);return N({collapsibleRef:o,collapsed:r,animation:a}),E.createElement(t,{ref:o,style:s?void 0:O(r),onTransitionEnd:function(e){"height"===e.propertyName&&(I(o.current,r),null==i||i(r))},className:T},_)}function u(e){var n=e.collapsed,t=(0,_.Z)(e,i),a=(0,E.useState)(!n),T=a[0],s=a[1],o=(0,E.useState)(n),d=o[0],I=o[1];return(0,E.useLayoutEffect)((function(){n||s(!0)}),[n]),(0,E.useLayoutEffect)((function(){T&&I(n)}),[T,n]),T?E.createElement(R,(0,r.Z)({},t,{collapsed:d})):null}function A(e){var n=e.lazy,t=(0,_.Z)(e,T),r=n?u:R;return E.createElement(r,t)}},9689:function(e,n,t){"use strict";t.d(n,{nT:function(){return O},pl:function(){return N}});var r=t(7294),_=t(2389),E=t(12),a=t(902),i=t(6668),T=(0,E.W)("docusaurus.announcement.dismiss"),s=(0,E.W)("docusaurus.announcement.id"),o=function(){return"true"===T.get()},d=function(e){return T.set(String(e))},I=r.createContext(null);function N(e){var n=e.children,t=function(){var e=(0,i.L)().announcementBar,n=(0,_.Z)(),t=(0,r.useState)((function(){return!!n&&o()})),E=t[0],a=t[1];(0,r.useEffect)((function(){a(o())}),[]);var T=(0,r.useCallback)((function(){d(!0),a(!0)}),[]);return(0,r.useEffect)((function(){if(e){var n=e.id,t=s.get();"annoucement-bar"===t&&(t="announcement-bar");var r=n!==t;s.set(n),r&&d(!1),!r&&o()||a(!1)}}),[e]),(0,r.useMemo)((function(){return{isActive:!!e&&!E,close:T}}),[e,E,T])}();return r.createElement(I.Provider,{value:t},n)}function O(){var e=(0,r.useContext)(I);if(!e)throw new a.i6("AnnouncementBarProvider");return e}},2949:function(e,n,t){"use strict";t.d(n,{I:function(){return u},S:function(){return R}});var r=t(7294),_=t(412),E=t(902),a=t(12),i=t(6668),T=r.createContext(void 0),s="theme",o=(0,a.W)(s),d="light",I="dark",N=function(e){return e===I?I:d};function O(){var e=(0,i.L)().colorMode,n=e.defaultMode,t=e.disableSwitch,E=e.respectPrefersColorScheme,a=(0,r.useState)(function(e){return _.default.canUseDOM?N(document.documentElement.getAttribute("data-theme")):N(e)}(n)),T=a[0],O=a[1];(0,r.useEffect)((function(){t&&o.del()}),[t]);var R=(0,r.useCallback)((function(e,t){void 0===t&&(t={});var r=t.persist,_=void 0===r||r;e?(O(e),_&&function(e){o.set(N(e))}(e)):(O(E?window.matchMedia("(prefers-color-scheme: dark)").matches?I:d:n),o.del())}),[E,n]);(0,r.useEffect)((function(){document.documentElement.setAttribute("data-theme",N(T))}),[T]),(0,r.useEffect)((function(){if(!t){var e=function(e){if(e.key===s){var n=o.get();null!==n&&R(N(n))}};return window.addEventListener("storage",e),function(){return window.removeEventListener("storage",e)}}}),[t,R]);var u=(0,r.useRef)(!1);return(0,r.useEffect)((function(){if(!t||E){var e=window.matchMedia("(prefers-color-scheme: dark)"),n=function(){window.matchMedia("print").matches||u.current?u.current=window.matchMedia("print").matches:R(null)};return e.addListener(n),function(){return e.removeListener(n)}}}),[R,t,E]),(0,r.useMemo)((function(){return{colorMode:T,setColorMode:R,get isDarkTheme(){return T===I},setLightTheme:function(){R(d)},setDarkTheme:function(){R(I)}}}),[T,R])}function R(e){var n=e.children,t=O();return r.createElement(T.Provider,{value:t},n)}function u(){var e=(0,r.useContext)(T);if(null==e)throw new E.i6("ColorModeProvider","Please see https://docusaurus.io/docs/api/themes/configuration#use-color-mode.");return e}},373:function(e,n,t){"use strict";t.d(n,{J:function(){return S},L5:function(){return A}});var r=t(7294),_=t(4104),E=t(9935),a=t(6668),i=t(8425),T=t(902),s=t(12),o=function(e){return"docs-preferred-version-"+e},d=function(e,n,t){(0,s.W)(o(e),{persistence:n}).set(t)},I=function(e,n){return(0,s.W)(o(e),{persistence:n}).get()},N=function(e,n){(0,s.W)(o(e),{persistence:n}).del()};var O=r.createContext(null);function R(){var e=(0,_._r)(),n=(0,a.L)().docs.versionPersistence,t=(0,r.useMemo)((function(){return Object.keys(e)}),[e]),E=(0,r.useState)((function(){return function(e){return Object.fromEntries(e.map((function(e){return[e,{preferredVersionName:null}]})))}(t)})),i=E[0],T=E[1];return(0,r.useEffect)((function(){T(function(e){var n=e.pluginIds,t=e.versionPersistence,r=e.allDocsData;return Object.fromEntries(n.map((function(e){return[e,(n=e,_=I(n,t),r[n].versions.some((function(e){return e.name===_}))?{preferredVersionName:_}:(N(n,t),{preferredVersionName:null}))];var n,_})))}({allDocsData:e,versionPersistence:n,pluginIds:t}))}),[e,n,t]),[i,(0,r.useMemo)((function(){return{savePreferredVersion:function(e,t){d(e,n,t),T((function(n){var r;return Object.assign({},n,((r={})[e]={preferredVersionName:t},r))}))}}}),[n])]}function u(e){var n=e.children,t=R();return r.createElement(O.Provider,{value:t},n)}function A(e){var n=e.children;return i.cE?r.createElement(u,null,n):n}function D(){var e=(0,r.useContext)(O);if(!e)throw new T.i6("DocsPreferredVersionContextProvider");return e}function S(e){var n;void 0===e&&(e=E.m);var t=(0,_.zh)(e),a=D(),i=a[0],T=a[1],s=i[e].preferredVersionName;return{preferredVersion:null!=(n=t.versions.find((function(e){return e.name===s})))?n:null,savePreferredVersionName:(0,r.useCallback)((function(n){T.savePreferredVersion(e,n)}),[T,e])}}},1116:function(e,n,t){"use strict";t.d(n,{V:function(){return T},b:function(){return i}});var r=t(7294),_=t(902),E=Symbol("EmptyContext"),a=r.createContext(E);function i(e){var n=e.children,t=e.name,_=e.items,E=(0,r.useMemo)((function(){return t&&_?{name:t,items:_}:null}),[t,_]);return r.createElement(a.Provider,{value:E},n)}function T(){var e=(0,r.useContext)(a);if(e===E)throw new _.i6("DocsSidebarProvider");return e}},2961:function(e,n,t){"use strict";t.d(n,{M:function(){return I},e:function(){return N}});var r=t(7294),_=t(3102),E=t(7524),a=t(6775),i=t(902);function T(e){!function(e){var n=(0,a.k6)().block,t=(0,i.ed)(e);(0,r.useEffect)((function(){return n((function(e,n){return t(e,n)}))}),[n,t])}((function(n,t){if("POP"===t)return e(n,t)}))}var s=t(6668),o=r.createContext(void 0);function d(){var e,n=(e=(0,_.HY)(),0===(0,s.L)().navbar.items.length&&!e.component),t=(0,E.i)(),a=!n&&"mobile"===t,i=(0,r.useState)(!1),o=i[0],d=i[1];T((function(){if(o)return d(!1),!1}));var I=(0,r.useCallback)((function(){d((function(e){return!e}))}),[]);return(0,r.useEffect)((function(){"desktop"===t&&d(!1)}),[t]),(0,r.useMemo)((function(){return{disabled:n,shouldRender:a,toggle:I,shown:o}}),[n,a,I,o])}function I(e){var n=e.children,t=d();return r.createElement(o.Provider,{value:t},n)}function N(){var e=r.useContext(o);if(void 0===e)throw new i.i6("NavbarMobileSidebarProvider");return e}},3102:function(e,n,t){"use strict";t.d(n,{HY:function(){return i},Zo:function(){return T},n2:function(){return a}});var r=t(7294),_=t(902),E=r.createContext(null);function a(e){var n=e.children,t=(0,r.useState)({component:null,props:null});return r.createElement(E.Provider,{value:t},n)}function i(){var e=(0,r.useContext)(E);if(!e)throw new _.i6("NavbarSecondaryMenuContentProvider");return e[0]}function T(e){var n=e.component,t=e.props,a=(0,r.useContext)(E);if(!a)throw new _.i6("NavbarSecondaryMenuContentProvider");var i,T=a[1],s=(i=t,(0,r.useMemo)((function(){return i}),[].concat(Object.keys(i),Object.values(i))));return(0,r.useEffect)((function(){T({component:n,props:s})}),[T,n,s]),(0,r.useEffect)((function(){return function(){return T({component:null,props:null})}}),[T]),null}},9727:function(e,n,t){"use strict";t.d(n,{h:function(){return _},t:function(){return E}});var r=t(7294),_="navigation-with-keyboard";function E(){(0,r.useEffect)((function(){function e(e){"keydown"===e.type&&"Tab"===e.key&&document.body.classList.add(_),"mousedown"===e.type&&document.body.classList.remove(_)}return document.addEventListener("keydown",e),document.addEventListener("mousedown",e),function(){document.body.classList.remove(_),document.removeEventListener("keydown",e),document.removeEventListener("mousedown",e)}}),[])}},7524:function(e,n,t){"use strict";t.d(n,{i:function(){return s}});var r=t(7294),_=t(412),E="desktop",a="mobile",i="ssr";function T(){return _.default.canUseDOM?window.innerWidth>996?E:a:i}function s(){var e=(0,r.useState)((function(){return T()})),n=e[0],t=e[1];return(0,r.useEffect)((function(){function e(){t(T())}return window.addEventListener("resize",e),function(){window.removeEventListener("resize",e),clearTimeout(undefined)}}),[]),n}},5281:function(e,n,t){"use strict";t.d(n,{k:function(){return r}});var r={page:{blogListPage:"blog-list-page",blogPostPage:"blog-post-page",blogTagsListPage:"blog-tags-list-page",blogTagPostListPage:"blog-tags-post-list-page",docsDocPage:"docs-doc-page",docsTagsListPage:"docs-tags-list-page",docsTagDocListPage:"docs-tags-doc-list-page",mdxPage:"mdx-page"},wrapper:{main:"main-wrapper",blogPages:"blog-wrapper",docsPages:"docs-wrapper",mdxPages:"mdx-wrapper"},common:{editThisPage:"theme-edit-this-page",lastUpdated:"theme-last-updated",backToTopButton:"theme-back-to-top-button",codeBlock:"theme-code-block"},layout:{},docs:{docVersionBanner:"theme-doc-version-banner",docVersionBadge:"theme-doc-version-badge",docBreadcrumbs:"theme-doc-breadcrumbs",docMarkdown:"theme-doc-markdown",docTocMobile:"theme-doc-toc-mobile",docTocDesktop:"theme-doc-toc-desktop",docFooter:"theme-doc-footer",docFooterTagsRow:"theme-doc-footer-tags-row",docFooterEditMetaRow:"theme-doc-footer-edit-meta-row",docSidebarContainer:"theme-doc-sidebar-container",docSidebarMenu:"theme-doc-sidebar-menu",docSidebarItemCategory:"theme-doc-sidebar-item-category",docSidebarItemLink:"theme-doc-sidebar-item-link",docSidebarItemCategoryLevel:function(e){return"theme-doc-sidebar-item-category-level-"+e},docSidebarItemLinkLevel:function(e){return"theme-doc-sidebar-item-link-level-"+e}},blog:{}}},8425:function(e,n,t){"use strict";function r(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function _(e,n){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,n){if(e){if("string"==typeof e)return r(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?r(e,n):void 0}}(e))||n&&e&&"number"==typeof e.length){t&&(e=t);var _=0;return function(){return _>=e.length?{done:!0}:{done:!1,value:e[_++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}t.d(n,{Wl:function(){return O},_F:function(){return u},cE:function(){return N},hI:function(){return h},lO:function(){return D},vY:function(){return l},oz:function(){return S},s1:function(){return A}});var E=t(7294),a=t(6775),i=t(8790),T=t(4104),s=t(373),o=t(1116);function d(e){return Array.from(new Set(e))}var I=t(8596),N=!!T._r;function O(e){if(e.href)return e.href;for(var n,t=_(e.items);!(n=t()).done;){var r=n.value;if("link"===r.type)return r.href;if("category"===r.type){var E=O(r);if(E)return E}}}var R=function(e,n){return void 0!==e&&(0,I.Mg)(e,n)};function u(e,n){return"link"===e.type?R(e.href,n):"category"===e.type&&(R(e.href,n)||function(e,n){return e.some((function(e){return u(e,n)}))}(e.items,n))}function A(){var e,n=(0,o.V)(),t=(0,a.TH)().pathname;if(!1===(null==(e=(0,T.gA)())?void 0:e.pluginData.breadcrumbs)||!n)return null;var r=[];return function e(n){for(var E,a=_(n);!(E=a()).done;){var i=E.value;if("category"===i.type&&((0,I.Mg)(i.href,t)||e(i.items))||"link"===i.type&&(0,I.Mg)(i.href,t))return r.push(i),!0}return!1}(n.items),r.reverse()}function D(e){var n=(0,T.Iw)(e).activeVersion,t=(0,s.J)(e).preferredVersion,r=(0,T.yW)(e);return(0,E.useMemo)((function(){return d([n,t,r].filter(Boolean))}),[n,t,r])}function S(e,n){var t=D(n);return(0,E.useMemo)((function(){var n=t.flatMap((function(e){return e.sidebars?Object.entries(e.sidebars):[]})),r=n.find((function(n){return n[0]===e}));if(!r)throw new Error("Can't find any sidebar with id \""+e+'" in version'+(t.length>1?"s":"")+" "+t.map((function(e){return e.name})).join(", ")+'".\n  Available sidebar ids are:\n  - '+Object.keys(n).join("\n- "));return r[1]}),[e,t])}function l(e,n){var t=D(n);return(0,E.useMemo)((function(){var n=t.flatMap((function(e){return e.docs})),r=n.find((function(n){return n.id===e}));if(!r){if(t.flatMap((function(e){return e.draftIds})).includes(e))return null;throw new Error("DocNavbarItem: couldn't find any doc with id \""+e+'" in version'+(t.length>1?"s":"")+" "+t.map((function(e){return e.name})).join(", ")+'".\nAvailable doc ids are:\n- '+d(n.map((function(e){return e.id}))).join("\n- "))}return r}),[e,t])}function h(e){var n=e.route,t=e.versionMetadata,r=(0,a.TH)(),_=n.routes,E=_.find((function(e){return(0,a.LX)(r.pathname,e)}));if(!E)return null;var T=E.sidebar,s=T?t.docsSidebars[T]:void 0;return{docElement:(0,i.H)(_,{versionMetadata:t}),sidebarName:T,sidebarItems:s}}},1944:function(e,n,t){"use strict";t.d(n,{FG:function(){return I},d:function(){return o},VC:function(){return N}});var r=t(7294),_=t(6010),E=t(5742),a=t(226);function i(){var e=r.useContext(a._);if(!e)throw new Error("Unexpected: no Docusaurus route context found");return e}var T=t(4996),s=t(2263);function o(e){var n=e.title,t=e.description,_=e.keywords,a=e.image,i=e.children,o=function(e){var n=(0,s.Z)().siteConfig,t=n.title,r=n.titleDelimiter;return null!=e&&e.trim().length?e.trim()+" "+r+" "+t:t}(n),d=(0,T.C)().withBaseUrl,I=a?d(a,{absolute:!0}):void 0;return r.createElement(E.Z,null,n&&r.createElement("title",null,o),n&&r.createElement("meta",{property:"og:title",content:o}),t&&r.createElement("meta",{name:"description",content:t}),t&&r.createElement("meta",{property:"og:description",content:t}),_&&r.createElement("meta",{name:"keywords",content:Array.isArray(_)?_.join(","):_}),I&&r.createElement("meta",{property:"og:image",content:I}),I&&r.createElement("meta",{name:"twitter:image",content:I}),i)}var d=r.createContext(void 0);function I(e){var n=e.className,t=e.children,a=r.useContext(d),i=(0,_.Z)(a,n);return r.createElement(d.Provider,{value:i},r.createElement(E.Z,null,r.createElement("html",{className:i})),t)}function N(e){var n=e.children,t=i(),E="plugin-"+t.plugin.name.replace(/docusaurus-(?:plugin|theme)-(?:content-)?/gi,""),a="plugin-id-"+t.plugin.id;return r.createElement(I,{className:(0,_.Z)(E,a)},n)}},902:function(e,n,t){"use strict";t.d(n,{D9:function(){return s},ed:function(){return T},i6:function(){return o}});var r=t(7099),_=t(4578),E=t(4542),a=t(7294),i=t(412).default.canUseDOM?a.useLayoutEffect:a.useEffect;function T(e){var n=(0,a.useRef)(e);return i((function(){n.current=e}),[e]),(0,a.useCallback)((function(){return n.current.apply(n,arguments)}),[])}function s(e){var n=(0,a.useRef)();return i((function(){n.current=e})),n.current}var o=function(e){function n(n,t){var _,E,a,i,T;return(T=e.call(this)||this).name="ReactContextError",T.message="Hook "+(null!=(_=null==(E=T.stack)||null==(a=E.split("\n")[1])||null==(i=a.match((0,r.Z)(/at (?:\w+\.)?(\w+)/,{name:1})))?void 0:i.groups.name)?_:"")+" is called outside the <"+n+">. "+(null!=t?t:""),T}return(0,_.Z)(n,e),n}((0,E.Z)(Error))},8596:function(e,n,t){"use strict";t.d(n,{Mg:function(){return a},Ns:function(){return i}});var r=t(7294),_=t(723),E=t(2263);function a(e,n){var t=function(e){var n;return null==(n=!e||e.endsWith("/")?e:e+"/")?void 0:n.toLowerCase()};return t(e)===t(n)}function i(){var e=(0,E.Z)().siteConfig.baseUrl;return(0,r.useMemo)((function(){return function(e){var n=e.baseUrl;function t(e){return e.path===n&&!0===e.exact}function r(e){return e.path===n&&!e.exact}return function e(n){if(0!==n.length)return n.find(t)||e(n.filter(r).flatMap((function(e){var n;return null!=(n=e.routes)?n:[]})))}(e.routes)}({routes:_.Z,baseUrl:e})}),[e])}},2466:function(e,n,t){"use strict";t.d(n,{Ct:function(){return I},OC:function(){return T},RF:function(){return d}});var r=t(7294),_=t(412),E=t(2389),a=t(902);var i=r.createContext(void 0);function T(e){var n,t=e.children,_=(n=(0,r.useRef)(!0),(0,r.useMemo)((function(){return{scrollEventsEnabledRef:n,enableScrollEvents:function(){n.current=!0},disableScrollEvents:function(){n.current=!1}}}),[]));return r.createElement(i.Provider,{value:_},t)}function s(){var e=(0,r.useContext)(i);if(null==e)throw new a.i6("ScrollControllerProvider");return e}var o=function(){return _.default.canUseDOM?{scrollX:window.pageXOffset,scrollY:window.pageYOffset}:null};function d(e,n){void 0===n&&(n=[]);var t=s().scrollEventsEnabledRef,_=(0,r.useRef)(o()),E=(0,a.ed)(e);(0,r.useEffect)((function(){var e=function(){if(t.current){var e=o();E(e,_.current),_.current=e}},n={passive:!0};return e(),window.addEventListener("scroll",e,n),function(){return window.removeEventListener("scroll",e,n)}}),[E,t].concat(n))}function I(){var e=(0,r.useRef)(null),n=(0,E.Z)()&&"smooth"===getComputedStyle(document.documentElement).scrollBehavior;return{startScroll:function(t){e.current=n?function(e){return window.scrollTo({top:e,behavior:"smooth"}),function(){}}(t):function(e){var n=null,t=document.documentElement.scrollTop>e;return function r(){var _=document.documentElement.scrollTop;(t&&_>e||!t&&_<e)&&(n=requestAnimationFrame(r),window.scrollTo(0,Math.floor(.85*(_-e))+e))}(),function(){return n&&cancelAnimationFrame(n)}}(t)},cancelScroll:function(){return null==e.current?void 0:e.current()}}}},3320:function(e,n,t){"use strict";t.d(n,{HX:function(){return r},os:function(){return _}});t(2263);var r="default";function _(e,n){return"docs-"+e+"-"+n}},12:function(e,n,t){"use strict";t.d(n,{W:function(){return i},_:function(){return T}});var r="localStorage";function _(e){if(void 0===e&&(e=r),"undefined"==typeof window)throw new Error("Browser storage is not available on Node.js/Docusaurus SSR process.");if("none"===e)return null;try{return window[e]}catch(t){return n=t,E||(console.warn("Docusaurus browser storage is not available.\nPossible reasons: running Docusaurus in an iframe, in an incognito browser session, or using too strict browser privacy settings.",n),E=!0),null}var n}var E=!1;var a={get:function(){return null},set:function(){},del:function(){}};function i(e,n){if("undefined"==typeof window)return function(e){function n(){throw new Error('Illegal storage API usage for storage key "'+e+'".\nDocusaurus storage APIs are not supposed to be called on the server-rendering process.\nPlease only call storage APIs in effects and event handlers.')}return{get:n,set:n,del:n}}(e);var t=_(null==n?void 0:n.persistence);return null===t?a:{get:function(){try{return t.getItem(e)}catch(n){return console.error("Docusaurus storage error, can't get key="+e,n),null}},set:function(n){try{t.setItem(e,n)}catch(r){console.error("Docusaurus storage error, can't set "+e+"="+n,r)}},del:function(){try{t.removeItem(e)}catch(n){console.error("Docusaurus storage error, can't delete key="+e,n)}}}}function T(e){void 0===e&&(e=r);var n=_(e);if(!n)return[];for(var t=[],E=0;E<n.length;E+=1){var a=n.key(E);null!==a&&t.push(a)}return t}},4711:function(e,n,t){"use strict";t.d(n,{l:function(){return E}});var r=t(2263),_=t(6775);function E(){var e=(0,r.Z)(),n=e.siteConfig,t=n.baseUrl,E=n.url,a=e.i18n,i=a.defaultLocale,T=a.currentLocale,s=(0,_.TH)().pathname,o=T===i?t:t.replace("/"+T+"/","/"),d=s.replace(t,"");return{createUrl:function(e){var n=e.locale;return""+(e.fullyQualified?E:"")+function(e){return e===i?""+o:""+o+e+"/"}(n)+d}}}},5936:function(e,n,t){"use strict";t.d(n,{S:function(){return a}});var r=t(7294),_=t(6775),E=t(902);function a(e){var n=(0,_.TH)(),t=(0,E.D9)(n),a=(0,E.ed)(e);(0,r.useEffect)((function(){t&&n!==t&&a({location:n,previousLocation:t})}),[a,n,t])}},6668:function(e,n,t){"use strict";t.d(n,{L:function(){return _}});var r=t(2263);function _(){return(0,r.Z)().siteConfig.themeConfig}},8802:function(e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n){var t=n.trailingSlash,r=n.baseUrl;if(e.startsWith("#"))return e;if(void 0===t)return e;var _,E=e.split(/[#?]/)[0],a="/"===E||E===r?E:(_=E,t?function(e){return e.endsWith("/")?e:e+"/"}(_):function(e){return e.endsWith("/")?e.slice(0,-1):e}(_));return e.replace(E,a)}},8780:function(e,n,t){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.applyTrailingSlash=n.blogPostContainerID=void 0,n.blogPostContainerID="post-content";var _=t(8802);Object.defineProperty(n,"applyTrailingSlash",{enumerable:!0,get:function(){return r(_).default}})},4750:function(e,n,t){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),r(t(412)).default.canUseDOM&&(window.Prism=window.Prism||{},window.Prism.manual=!0)},6010:function(e,n,t){"use strict";function r(e){var n,t,_="";if("string"==typeof e||"number"==typeof e)_+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=r(e[n]))&&(_&&(_+=" "),_+=t);else for(n in e)e[n]&&(_&&(_+=" "),_+=n);return _}function _(){for(var e,n,t=0,_="";t<arguments.length;)(e=arguments[t++])&&(n=r(e))&&(_&&(_+=" "),_+=n);return _}t.d(n,{Z:function(){return _}})},9318:function(e,n,t){"use strict";t.d(n,{lX:function(){return l},q_:function(){return p},ob:function(){return N},PP:function(){return f},Ep:function(){return I}});var r=t(7462);function _(e){return"/"===e.charAt(0)}function E(e,n){for(var t=n,r=t+1,_=e.length;r<_;t+=1,r+=1)e[t]=e[r];e.pop()}var a=function(e,n){void 0===n&&(n="");var t,r=e&&e.split("/")||[],a=n&&n.split("/")||[],i=e&&_(e),T=n&&_(n),s=i||T;if(e&&_(e)?a=r:r.length&&(a.pop(),a=a.concat(r)),!a.length)return"/";if(a.length){var o=a[a.length-1];t="."===o||".."===o||""===o}else t=!1;for(var d=0,I=a.length;I>=0;I--){var N=a[I];"."===N?E(a,I):".."===N?(E(a,I),d++):d&&(E(a,I),d--)}if(!s)for(;d--;d)a.unshift("..");!s||""===a[0]||a[0]&&_(a[0])||a.unshift("");var O=a.join("/");return t&&"/"!==O.substr(-1)&&(O+="/"),O},i=t(2177);function T(e){return"/"===e.charAt(0)?e:"/"+e}function s(e){return"/"===e.charAt(0)?e.substr(1):e}function o(e,n){return function(e,n){return 0===e.toLowerCase().indexOf(n.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(n.length))}(e,n)?e.substr(n.length):e}function d(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function I(e){var n=e.pathname,t=e.search,r=e.hash,_=n||"/";return t&&"?"!==t&&(_+="?"===t.charAt(0)?t:"?"+t),r&&"#"!==r&&(_+="#"===r.charAt(0)?r:"#"+r),_}function N(e,n,t,_){var E;"string"==typeof e?(E=function(e){var n=e||"/",t="",r="",_=n.indexOf("#");-1!==_&&(r=n.substr(_),n=n.substr(0,_));var E=n.indexOf("?");return-1!==E&&(t=n.substr(E),n=n.substr(0,E)),{pathname:n,search:"?"===t?"":t,hash:"#"===r?"":r}}(e),E.state=n):(void 0===(E=(0,r.Z)({},e)).pathname&&(E.pathname=""),E.search?"?"!==E.search.charAt(0)&&(E.search="?"+E.search):E.search="",E.hash?"#"!==E.hash.charAt(0)&&(E.hash="#"+E.hash):E.hash="",void 0!==n&&void 0===E.state&&(E.state=n));try{E.pathname=decodeURI(E.pathname)}catch(i){throw i instanceof URIError?new URIError('Pathname "'+E.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):i}return t&&(E.key=t),_?E.pathname?"/"!==E.pathname.charAt(0)&&(E.pathname=a(E.pathname,_.pathname)):E.pathname=_.pathname:E.pathname||(E.pathname="/"),E}function O(){var e=null;var n=[];return{setPrompt:function(n){return e=n,function(){e===n&&(e=null)}},confirmTransitionTo:function(n,t,r,_){if(null!=e){var E="function"==typeof e?e(n,t):e;"string"==typeof E?"function"==typeof r?r(E,_):_(!0):_(!1!==E)}else _(!0)},appendListener:function(e){var t=!0;function r(){t&&e.apply(void 0,arguments)}return n.push(r),function(){t=!1,n=n.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.forEach((function(e){return e.apply(void 0,t)}))}}}var R=!("undefined"==typeof window||!window.document||!window.document.createElement);function u(e,n){n(window.confirm(e))}var A="popstate",D="hashchange";function S(){try{return window.history.state||{}}catch(e){return{}}}function l(e){void 0===e&&(e={}),R||(0,i.Z)(!1);var n,t=window.history,_=(-1===(n=window.navigator.userAgent).indexOf("Android 2.")&&-1===n.indexOf("Android 4.0")||-1===n.indexOf("Mobile Safari")||-1!==n.indexOf("Chrome")||-1!==n.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,E=!(-1===window.navigator.userAgent.indexOf("Trident")),a=e,s=a.forceRefresh,l=void 0!==s&&s,h=a.getUserConfirmation,C=void 0===h?u:h,P=a.keyLength,U=void 0===P?6:P,c=e.basename?d(T(e.basename)):"";function p(e){var n=e||{},t=n.key,r=n.state,_=window.location,E=_.pathname+_.search+_.hash;return c&&(E=o(E,c)),N(E,r,t)}function L(){return Math.random().toString(36).substr(2,U)}var f=O();function F(e){(0,r.Z)(K,e),K.length=t.length,f.notifyListeners(K.location,K.action)}function M(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||b(p(e.state))}function m(){b(p(S()))}var w=!1;function b(e){if(w)w=!1,F();else{f.confirmTransitionTo(e,"POP",C,(function(n){n?F({action:"POP",location:e}):function(e){var n=K.location,t=g.indexOf(n.key);-1===t&&(t=0);var r=g.indexOf(e.key);-1===r&&(r=0);var _=t-r;_&&(w=!0,V(_))}(e)}))}}var X=p(S()),g=[X.key];function v(e){return c+I(e)}function V(e){t.go(e)}var B=0;function y(e){1===(B+=e)&&1===e?(window.addEventListener(A,M),E&&window.addEventListener(D,m)):0===B&&(window.removeEventListener(A,M),E&&window.removeEventListener(D,m))}var Y=!1;var K={length:t.length,action:"POP",location:X,createHref:v,push:function(e,n){var r="PUSH",E=N(e,n,L(),K.location);f.confirmTransitionTo(E,r,C,(function(e){if(e){var n=v(E),a=E.key,i=E.state;if(_)if(t.pushState({key:a,state:i},null,n),l)window.location.href=n;else{var T=g.indexOf(K.location.key),s=g.slice(0,T+1);s.push(E.key),g=s,F({action:r,location:E})}else window.location.href=n}}))},replace:function(e,n){var r="REPLACE",E=N(e,n,L(),K.location);f.confirmTransitionTo(E,r,C,(function(e){if(e){var n=v(E),a=E.key,i=E.state;if(_)if(t.replaceState({key:a,state:i},null,n),l)window.location.replace(n);else{var T=g.indexOf(K.location.key);-1!==T&&(g[T]=E.key),F({action:r,location:E})}else window.location.replace(n)}}))},go:V,goBack:function(){V(-1)},goForward:function(){V(1)},block:function(e){void 0===e&&(e=!1);var n=f.setPrompt(e);return Y||(y(1),Y=!0),function(){return Y&&(Y=!1,y(-1)),n()}},listen:function(e){var n=f.appendListener(e);return y(1),function(){y(-1),n()}}};return K}var h="hashchange",C={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+s(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:s,decodePath:T},slash:{encodePath:T,decodePath:T}};function P(e){var n=e.indexOf("#");return-1===n?e:e.slice(0,n)}function U(){var e=window.location.href,n=e.indexOf("#");return-1===n?"":e.substring(n+1)}function c(e){window.location.replace(P(window.location.href)+"#"+e)}function p(e){void 0===e&&(e={}),R||(0,i.Z)(!1);var n=window.history,t=(window.navigator.userAgent.indexOf("Firefox"),e),_=t.getUserConfirmation,E=void 0===_?u:_,a=t.hashType,s=void 0===a?"slash":a,A=e.basename?d(T(e.basename)):"",D=C[s],S=D.encodePath,l=D.decodePath;function p(){var e=l(U());return A&&(e=o(e,A)),N(e)}var L=O();function f(e){(0,r.Z)(Y,e),Y.length=n.length,L.notifyListeners(Y.location,Y.action)}var F=!1,M=null;function m(){var e,n,t=U(),r=S(t);if(t!==r)c(r);else{var _=p(),a=Y.location;if(!F&&(n=_,(e=a).pathname===n.pathname&&e.search===n.search&&e.hash===n.hash))return;if(M===I(_))return;M=null,function(e){if(F)F=!1,f();else{var n="POP";L.confirmTransitionTo(e,n,E,(function(t){t?f({action:n,location:e}):function(e){var n=Y.location,t=g.lastIndexOf(I(n));-1===t&&(t=0);var r=g.lastIndexOf(I(e));-1===r&&(r=0);var _=t-r;_&&(F=!0,v(_))}(e)}))}}(_)}}var w=U(),b=S(w);w!==b&&c(b);var X=p(),g=[I(X)];function v(e){n.go(e)}var V=0;function B(e){1===(V+=e)&&1===e?window.addEventListener(h,m):0===V&&window.removeEventListener(h,m)}var y=!1;var Y={length:n.length,action:"POP",location:X,createHref:function(e){var n=document.querySelector("base"),t="";return n&&n.getAttribute("href")&&(t=P(window.location.href)),t+"#"+S(A+I(e))},push:function(e,n){var t="PUSH",r=N(e,void 0,void 0,Y.location);L.confirmTransitionTo(r,t,E,(function(e){if(e){var n=I(r),_=S(A+n);if(U()!==_){M=n,function(e){window.location.hash=e}(_);var E=g.lastIndexOf(I(Y.location)),a=g.slice(0,E+1);a.push(n),g=a,f({action:t,location:r})}else f()}}))},replace:function(e,n){var t="REPLACE",r=N(e,void 0,void 0,Y.location);L.confirmTransitionTo(r,t,E,(function(e){if(e){var n=I(r),_=S(A+n);U()!==_&&(M=n,c(_));var E=g.indexOf(I(Y.location));-1!==E&&(g[E]=n),f({action:t,location:r})}}))},go:v,goBack:function(){v(-1)},goForward:function(){v(1)},block:function(e){void 0===e&&(e=!1);var n=L.setPrompt(e);return y||(B(1),y=!0),function(){return y&&(y=!1,B(-1)),n()}},listen:function(e){var n=L.appendListener(e);return B(1),function(){B(-1),n()}}};return Y}function L(e,n,t){return Math.min(Math.max(e,n),t)}function f(e){void 0===e&&(e={});var n=e,t=n.getUserConfirmation,_=n.initialEntries,E=void 0===_?["/"]:_,a=n.initialIndex,i=void 0===a?0:a,T=n.keyLength,s=void 0===T?6:T,o=O();function d(e){(0,r.Z)(l,e),l.length=l.entries.length,o.notifyListeners(l.location,l.action)}function R(){return Math.random().toString(36).substr(2,s)}var u=L(i,0,E.length-1),A=E.map((function(e){return N(e,void 0,"string"==typeof e?R():e.key||R())})),D=I;function S(e){var n=L(l.index+e,0,l.entries.length-1),r=l.entries[n];o.confirmTransitionTo(r,"POP",t,(function(e){e?d({action:"POP",location:r,index:n}):d()}))}var l={length:A.length,action:"POP",location:A[u],index:u,entries:A,createHref:D,push:function(e,n){var r="PUSH",_=N(e,n,R(),l.location);o.confirmTransitionTo(_,r,t,(function(e){if(e){var n=l.index+1,t=l.entries.slice(0);t.length>n?t.splice(n,t.length-n,_):t.push(_),d({action:r,location:_,index:n,entries:t})}}))},replace:function(e,n){var r="REPLACE",_=N(e,n,R(),l.location);o.confirmTransitionTo(_,r,t,(function(e){e&&(l.entries[l.index]=_,d({action:r,location:_}))}))},go:S,goBack:function(){S(-1)},goForward:function(){S(1)},canGo:function(e){var n=l.index+e;return n>=0&&n<l.entries.length},block:function(e){return void 0===e&&(e=!1),o.setPrompt(e)},listen:function(e){return o.appendListener(e)}};return l}},8679:function(e,n,t){"use strict";var r=t(9864),_={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},E={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},i={};function T(e){return r.isMemo(e)?a:i[e.$$typeof]||_}i[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},i[r.Memo]=a;var s=Object.defineProperty,o=Object.getOwnPropertyNames,d=Object.getOwnPropertySymbols,I=Object.getOwnPropertyDescriptor,N=Object.getPrototypeOf,O=Object.prototype;e.exports=function e(n,t,r){if("string"!=typeof t){if(O){var _=N(t);_&&_!==O&&e(n,_,r)}var a=o(t);d&&(a=a.concat(d(t)));for(var i=T(n),R=T(t),u=0;u<a.length;++u){var A=a[u];if(!(E[A]||r&&r[A]||R&&R[A]||i&&i[A])){var D=I(t,A);try{s(n,A,D)}catch(S){}}}}return n}},1143:function(e){"use strict";e.exports=function(e,n,t,r,_,E,a,i){if(!e){var T;if(void 0===n)T=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[t,r,_,E,a,i],o=0;(T=new Error(n.replace(/%s/g,(function(){return s[o++]})))).name="Invariant Violation"}throw T.framesToPop=1,T}}},5826:function(e){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},6743:function(e,n,t){"use strict";t.r(n)},1304:function(e,n,t){"use strict";t.r(n)},2497:function(e,n,t){"use strict";t.r(n)},2295:function(e,n,t){"use strict";t.r(n)},4865:function(e,n,t){var r,_;r=function(){var e,n,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function _(e,n,t){return e<n?n:e>t?t:e}function E(e){return 100*(-1+e)}function a(e,n,t){var _;return(_="translate3d"===r.positionUsing?{transform:"translate3d("+E(e)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+E(e)+"%,0)"}:{"margin-left":E(e)+"%"}).transition="all "+n+"ms "+t,_}t.configure=function(e){var n,t;for(n in e)void 0!==(t=e[n])&&e.hasOwnProperty(n)&&(r[n]=t);return this},t.status=null,t.set=function(e){var n=t.isStarted();e=_(e,r.minimum,1),t.status=1===e?null:e;var E=t.render(!n),s=E.querySelector(r.barSelector),o=r.speed,d=r.easing;return E.offsetWidth,i((function(n){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),T(s,a(e,o,d)),1===e?(T(E,{transition:"none",opacity:1}),E.offsetWidth,setTimeout((function(){T(E,{transition:"all "+o+"ms linear",opacity:0}),setTimeout((function(){t.remove(),n()}),o)}),o)):setTimeout(n,o)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var e=function(){setTimeout((function(){t.status&&(t.trickle(),e())}),r.trickleSpeed)};return r.trickle&&e(),this},t.done=function(e){return e||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(e){var n=t.status;return n?("number"!=typeof e&&(e=(1-n)*_(Math.random()*n,.1,.95)),n=_(n+e,0,.994),t.set(n)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},e=0,n=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===n&&t.start(),e++,n++,r.always((function(){0==--n?(e=0,t.done()):t.set((e-n)/e)})),this):this},t.render=function(e){if(t.isRendered())return document.getElementById("nprogress");o(document.documentElement,"nprogress-busy");var n=document.createElement("div");n.id="nprogress",n.innerHTML=r.template;var _,a=n.querySelector(r.barSelector),i=e?"-100":E(t.status||0),s=document.querySelector(r.parent);return T(a,{transition:"all 0 linear",transform:"translate3d("+i+"%,0,0)"}),r.showSpinner||(_=n.querySelector(r.spinnerSelector))&&N(_),s!=document.body&&o(s,"nprogress-custom-parent"),s.appendChild(n),n},t.remove=function(){d(document.documentElement,"nprogress-busy"),d(document.querySelector(r.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&N(e)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var e=document.body.style,n="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return n+"Perspective"in e?"translate3d":n+"Transform"in e?"translate":"margin"};var i=function(){var e=[];function n(){var t=e.shift();t&&t(n)}return function(t){e.push(t),1==e.length&&n()}}(),T=function(){var e=["Webkit","O","Moz","ms"],n={};function t(e){return e.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,n){return n.toUpperCase()}))}function r(n){var t=document.body.style;if(n in t)return n;for(var r,_=e.length,E=n.charAt(0).toUpperCase()+n.slice(1);_--;)if((r=e[_]+E)in t)return r;return n}function _(e){return e=t(e),n[e]||(n[e]=r(e))}function E(e,n,t){n=_(n),e.style[n]=t}return function(e,n){var t,r,_=arguments;if(2==_.length)for(t in n)void 0!==(r=n[t])&&n.hasOwnProperty(t)&&E(e,t,r);else E(e,_[1],_[2])}}();function s(e,n){return("string"==typeof e?e:I(e)).indexOf(" "+n+" ")>=0}function o(e,n){var t=I(e),r=t+n;s(t,n)||(e.className=r.substring(1))}function d(e,n){var t,r=I(e);s(e,n)&&(t=r.replace(" "+n+" "," "),e.className=t.substring(1,t.length-1))}function I(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function N(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return t},void 0===(_="function"==typeof r?r.call(n,t,n,e):r)||(e.exports=_)},7418:function(e){"use strict";var n=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function _(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var n={},t=0;t<10;t++)n["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(n).map((function(e){return n[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(_){return!1}}()?Object.assign:function(e,E){for(var a,i,T=_(e),s=1;s<arguments.length;s++){for(var o in a=Object(arguments[s]))t.call(a,o)&&(T[o]=a[o]);if(n){i=n(a);for(var d=0;d<i.length;d++)r.call(a,i[d])&&(T[i[d]]=a[i[d]])}}return T}},4779:function(e,n,t){var r=t(5826);e.exports=N,e.exports.parse=E,e.exports.compile=function(e,n){return i(E(e,n),n)},e.exports.tokensToFunction=i,e.exports.tokensToRegExp=I;var _=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function E(e,n){for(var t,r=[],E=0,a=0,i="",o=n&&n.delimiter||"/";null!=(t=_.exec(e));){var d=t[0],I=t[1],N=t.index;if(i+=e.slice(a,N),a=N+d.length,I)i+=I[1];else{var O=e[a],R=t[2],u=t[3],A=t[4],D=t[5],S=t[6],l=t[7];i&&(r.push(i),i="");var h=null!=R&&null!=O&&O!==R,C="+"===S||"*"===S,P="?"===S||"*"===S,U=t[2]||o,c=A||D;r.push({name:u||E++,prefix:R||"",delimiter:U,optional:P,repeat:C,partial:h,asterisk:!!l,pattern:c?s(c):l?".*":"[^"+T(U)+"]+?"})}}return a<e.length&&(i+=e.substr(a)),i&&r.push(i),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function i(e,n){for(var t=new Array(e.length),_=0;_<e.length;_++)"object"==typeof e[_]&&(t[_]=new RegExp("^(?:"+e[_].pattern+")$",d(n)));return function(n,_){for(var E="",i=n||{},T=(_||{}).pretty?a:encodeURIComponent,s=0;s<e.length;s++){var o=e[s];if("string"!=typeof o){var d,I=i[o.name];if(null==I){if(o.optional){o.partial&&(E+=o.prefix);continue}throw new TypeError('Expected "'+o.name+'" to be defined')}if(r(I)){if(!o.repeat)throw new TypeError('Expected "'+o.name+'" to not repeat, but received `'+JSON.stringify(I)+"`");if(0===I.length){if(o.optional)continue;throw new TypeError('Expected "'+o.name+'" to not be empty')}for(var N=0;N<I.length;N++){if(d=T(I[N]),!t[s].test(d))throw new TypeError('Expected all "'+o.name+'" to match "'+o.pattern+'", but received `'+JSON.stringify(d)+"`");E+=(0===N?o.prefix:o.delimiter)+d}}else{if(d=o.asterisk?encodeURI(I).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):T(I),!t[s].test(d))throw new TypeError('Expected "'+o.name+'" to match "'+o.pattern+'", but received "'+d+'"');E+=o.prefix+d}}else E+=o}return E}}function T(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function o(e,n){return e.keys=n,e}function d(e){return e&&e.sensitive?"":"i"}function I(e,n,t){r(n)||(t=n||t,n=[]);for(var _=(t=t||{}).strict,E=!1!==t.end,a="",i=0;i<e.length;i++){var s=e[i];if("string"==typeof s)a+=T(s);else{var I=T(s.prefix),N="(?:"+s.pattern+")";n.push(s),s.repeat&&(N+="(?:"+I+N+")*"),a+=N=s.optional?s.partial?I+"("+N+")?":"(?:"+I+"("+N+"))?":I+"("+N+")"}}var O=T(t.delimiter||"/"),R=a.slice(-O.length)===O;return _||(a=(R?a.slice(0,-O.length):a)+"(?:"+O+"(?=$))?"),a+=E?"$":_&&R?"":"(?="+O+"|$)",o(new RegExp("^"+a,d(t)),n)}function N(e,n,t){return r(n)||(t=n||t,n=[]),t=t||{},e instanceof RegExp?function(e,n){var t=e.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)n.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return o(e,n)}(e,n):r(e)?function(e,n,t){for(var r=[],_=0;_<e.length;_++)r.push(N(e[_],n,t).source);return o(new RegExp("(?:"+r.join("|")+")",d(t)),n)}(e,n,t):function(e,n,t){return I(E(e,t),n,t)}(e,n,t)}},7410:function(e,n){"use strict";var t=function(){var e=/(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i,n=0,t={},r={util:{encode:function e(n){return n instanceof _?new _(n.type,e(n.content),n.alias):Array.isArray(n)?n.map(e):n.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++n}),e.__id},clone:function e(n,t){var _,E;switch(t=t||{},r.util.type(n)){case"Object":if(E=r.util.objId(n),t[E])return t[E];for(var a in _={},t[E]=_,n)n.hasOwnProperty(a)&&(_[a]=e(n[a],t));return _;case"Array":return E=r.util.objId(n),t[E]?t[E]:(_=[],t[E]=_,n.forEach((function(n,r){_[r]=e(n,t)})),_);default:return n}},getLanguage:function(n){for(;n;){var t=e.exec(n.className);if(t)return t[1].toLowerCase();n=n.parentElement}return"none"},setLanguage:function(n,t){n.className=n.className.replace(RegExp(e,"gi"),""),n.classList.add("language-"+t)},isActive:function(e,n,t){for(var r="no-"+n;e;){var _=e.classList;if(_.contains(n))return!0;if(_.contains(r))return!1;e=e.parentElement}return!!t}},languages:{plain:t,plaintext:t,text:t,txt:t,extend:function(e,n){var t=r.util.clone(r.languages[e]);for(var _ in n)t[_]=n[_];return t},insertBefore:function(e,n,t,_){var E=(_=_||r.languages)[e],a={};for(var i in E)if(E.hasOwnProperty(i)){if(i==n)for(var T in t)t.hasOwnProperty(T)&&(a[T]=t[T]);t.hasOwnProperty(i)||(a[i]=E[i])}var s=_[e];return _[e]=a,r.languages.DFS(r.languages,(function(n,t){t===s&&n!=e&&(this[n]=a)})),a},DFS:function e(n,t,_,E){E=E||{};var a=r.util.objId;for(var i in n)if(n.hasOwnProperty(i)){t.call(n,i,n[i],_||i);var T=n[i],s=r.util.type(T);"Object"!==s||E[a(T)]?"Array"!==s||E[a(T)]||(E[a(T)]=!0,e(T,t,i,E)):(E[a(T)]=!0,e(T,t,null,E))}}},plugins:{},highlight:function(e,n,t){var E={code:e,grammar:n,language:t};return r.hooks.run("before-tokenize",E),E.tokens=r.tokenize(E.code,E.grammar),r.hooks.run("after-tokenize",E),_.stringify(r.util.encode(E.tokens),E.language)},tokenize:function(e,n){var t=n.rest;if(t){for(var r in t)n[r]=t[r];delete n.rest}var _=new i;return T(_,_.head,e),a(e,_,n,_.head,0),function(e){var n=[],t=e.head.next;for(;t!==e.tail;)n.push(t.value),t=t.next;return n}(_)},hooks:{all:{},add:function(e,n){var t=r.hooks.all;t[e]=t[e]||[],t[e].push(n)},run:function(e,n){var t=r.hooks.all[e];if(t&&t.length)for(var _,E=0;_=t[E++];)_(n)}},Token:_};function _(e,n,t,r){this.type=e,this.content=n,this.alias=t,this.length=0|(r||"").length}function E(e,n,t,r){e.lastIndex=n;var _=e.exec(t);if(_&&r&&_[1]){var E=_[1].length;_.index+=E,_[0]=_[0].slice(E)}return _}function a(e,n,t,i,o,d){for(var I in t)if(t.hasOwnProperty(I)&&t[I]){var N=t[I];N=Array.isArray(N)?N:[N];for(var O=0;O<N.length;++O){if(d&&d.cause==I+","+O)return;var R=N[O],u=R.inside,A=!!R.lookbehind,D=!!R.greedy,S=R.alias;if(D&&!R.pattern.global){var l=R.pattern.toString().match(/[imsuy]*$/)[0];R.pattern=RegExp(R.pattern.source,l+"g")}for(var h=R.pattern||R,C=i.next,P=o;C!==n.tail&&!(d&&P>=d.reach);P+=C.value.length,C=C.next){var U=C.value;if(n.length>e.length)return;if(!(U instanceof _)){var c,p=1;if(D){if(!(c=E(h,P,e,A))||c.index>=e.length)break;var L=c.index,f=c.index+c[0].length,F=P;for(F+=C.value.length;L>=F;)F+=(C=C.next).value.length;if(P=F-=C.value.length,C.value instanceof _)continue;for(var M=C;M!==n.tail&&(F<f||"string"==typeof M.value);M=M.next)p++,F+=M.value.length;p--,U=e.slice(P,F),c.index-=P}else if(!(c=E(h,0,U,A)))continue;L=c.index;var m=c[0],w=U.slice(0,L),b=U.slice(L+m.length),X=P+U.length;d&&X>d.reach&&(d.reach=X);var g=C.prev;if(w&&(g=T(n,g,w),P+=w.length),s(n,g,p),C=T(n,g,new _(I,u?r.tokenize(m,u):m,S,m)),b&&T(n,C,b),p>1){var v={cause:I+","+O,reach:X};a(e,n,t,C.prev,P,v),d&&v.reach>d.reach&&(d.reach=v.reach)}}}}}}function i(){var e={value:null,prev:null,next:null},n={value:null,prev:e,next:null};e.next=n,this.head=e,this.tail=n,this.length=0}function T(e,n,t){var r=n.next,_={value:t,prev:n,next:r};return n.next=_,r.prev=_,e.length++,_}function s(e,n,t){for(var r=n.next,_=0;_<t&&r!==e.tail;_++)r=r.next;n.next=r,r.prev=n,e.length-=_}return _.stringify=function e(n,t){if("string"==typeof n)return n;if(Array.isArray(n)){var _="";return n.forEach((function(n){_+=e(n,t)})),_}var E={type:n.type,content:e(n.content,t),tag:"span",classes:["token",n.type],attributes:{},language:t},a=n.alias;a&&(Array.isArray(a)?Array.prototype.push.apply(E.classes,a):E.classes.push(a)),r.hooks.run("wrap",E);var i="";for(var T in E.attributes)i+=" "+T+'="'+(E.attributes[T]||"").replace(/"/g,"&quot;")+'"';return"<"+E.tag+' class="'+E.classes.join(" ")+'"'+i+">"+E.content+"</"+E.tag+">"},r}(),r=t;t.default=t,r.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},r.languages.markup.tag.inside["attr-value"].inside.entity=r.languages.markup.entity,r.languages.markup.doctype.inside["internal-subset"].inside=r.languages.markup,r.hooks.add("wrap",(function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"))})),Object.defineProperty(r.languages.markup.tag,"addInlined",{value:function(e,n){var t={};t["language-"+n]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:r.languages[n]},t.cdata=/^<!\[CDATA\[|\]\]>$/i;var _={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:t}};_["language-"+n]={pattern:/[\s\S]+/,inside:r.languages[n]};var E={};E[e]={pattern:RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g,(function(){return e})),"i"),lookbehind:!0,greedy:!0,inside:_},r.languages.insertBefore("markup","cdata",E)}}),Object.defineProperty(r.languages.markup.tag,"addAttribute",{value:function(e,n){r.languages.markup.tag.inside["special-attr"].push({pattern:RegExp(/(^|["'\s])/.source+"(?:"+e+")"+/\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,"i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[n,"language-"+n],inside:r.languages[n]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),r.languages.html=r.languages.markup,r.languages.mathml=r.languages.markup,r.languages.svg=r.languages.markup,r.languages.xml=r.languages.extend("markup",{}),r.languages.ssml=r.languages.xml,r.languages.atom=r.languages.xml,r.languages.rss=r.languages.xml,function(e){var n="\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b",t={pattern:/(^(["']?)\w+\2)[ \t]+\S.*/,lookbehind:!0,alias:"punctuation",inside:null},r={bash:t,environment:{pattern:RegExp("\\$"+n),alias:"constant"},variable:[{pattern:/\$?\(\([\s\S]+?\)\)/,greedy:!0,inside:{variable:[{pattern:/(^\$\(\([\s\S]+)\)\)/,lookbehind:!0},/^\$\(\(/],number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,operator:/--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,punctuation:/\(\(?|\)\)?|,|;/}},{pattern:/\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,greedy:!0,inside:{variable:/^\$\(|^`|\)$|`$/}},{pattern:/\$\{[^}]+\}/,greedy:!0,inside:{operator:/:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,punctuation:/[\[\]]/,environment:{pattern:RegExp("(\\{)"+n),lookbehind:!0,alias:"constant"}}},/\$(?:\w+|[#?*!@$])/],entity:/\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/};e.languages.bash={shebang:{pattern:/^#!\s*\/.*/,alias:"important"},comment:{pattern:/(^|[^"{\\$])#.*/,lookbehind:!0},"function-name":[{pattern:/(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,lookbehind:!0,alias:"function"},{pattern:/\b[\w-]+(?=\s*\(\s*\)\s*\{)/,alias:"function"}],"for-or-select":{pattern:/(\b(?:for|select)\s+)\w+(?=\s+in\s)/,alias:"variable",lookbehind:!0},"assign-left":{pattern:/(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,inside:{environment:{pattern:RegExp("(^|[\\s;|&]|[<>]\\()"+n),lookbehind:!0,alias:"constant"}},alias:"variable",lookbehind:!0},string:[{pattern:/((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,lookbehind:!0,greedy:!0,inside:r},{pattern:/((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,lookbehind:!0,greedy:!0,inside:{bash:t}},{pattern:/(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,lookbehind:!0,greedy:!0,inside:r},{pattern:/(^|[^$\\])'[^']*'/,lookbehind:!0,greedy:!0},{pattern:/\$'(?:[^'\\]|\\[\s\S])*'/,greedy:!0,inside:{entity:r.entity}}],environment:{pattern:RegExp("\\$?"+n),alias:"constant"},variable:r.variable,function:{pattern:/(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])/,lookbehind:!0},builtin:{pattern:/(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])/,lookbehind:!0,alias:"class-name"},boolean:{pattern:/(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])/,lookbehind:!0},"file-descriptor":{pattern:/\B&\d\b/,alias:"important"},operator:{pattern:/\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,inside:{"file-descriptor":{pattern:/^\d/,alias:"important"}}},punctuation:/\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,number:{pattern:/(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,lookbehind:!0}},t.inside=e.languages.bash;for(var _=["comment","function-name","for-or-select","assign-left","string","environment","function","keyword","builtin","boolean","file-descriptor","operator","punctuation","number"],E=r.variable[1].inside,a=0;a<_.length;a++)E[_[a]]=e.languages.bash[_[a]];e.languages.shell=e.languages.bash}(r),r.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},r.languages.c=r.languages.extend("clike",{comment:{pattern:/\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0},"class-name":{pattern:/(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,lookbehind:!0},keyword:/\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\b/,function:/\b[a-z_]\w*(?=\s*\()/i,number:/(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/}),r.languages.insertBefore("c","string",{char:{pattern:/'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n]){0,32}'/,greedy:!0}}),r.languages.insertBefore("c","string",{macro:{pattern:/(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,lookbehind:!0,greedy:!0,alias:"property",inside:{string:[{pattern:/^(#\s*include\s*)<[^>]+>/,lookbehind:!0},r.languages.c.string],char:r.languages.c.char,comment:r.languages.c.comment,"macro-name":[{pattern:/(^#\s*define\s+)\w+\b(?!\()/i,lookbehind:!0},{pattern:/(^#\s*define\s+)\w+\b(?=\()/i,lookbehind:!0,alias:"function"}],directive:{pattern:/^(#\s*)[a-z]+/,lookbehind:!0,alias:"keyword"},"directive-hash":/^#/,punctuation:/##|\\(?=[\r\n])/,expression:{pattern:/\S[\s\S]*/,inside:r.languages.c}}}}),r.languages.insertBefore("c","function",{constant:/\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\b/}),delete r.languages.c.boolean,function(e){var n=/\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,t=/\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(/<keyword>/g,(function(){return n.source}));e.languages.cpp=e.languages.extend("c",{"class-name":[{pattern:RegExp(/(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(/<keyword>/g,(function(){return n.source}))),lookbehind:!0},/\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/,/\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i,/\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/],keyword:n,number:{pattern:/(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,greedy:!0},operator:/>>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,boolean:/\b(?:false|true)\b/}),e.languages.insertBefore("cpp","string",{module:{pattern:RegExp(/(\b(?:import|module)\s+)/.source+"(?:"+/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source+"|"+/<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(/<mod-name>/g,(function(){return t}))+")"),lookbehind:!0,greedy:!0,inside:{string:/^[<"][\s\S]+/,operator:/:/,punctuation:/\./}},"raw-string":{pattern:/R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,alias:"string",greedy:!0}}),e.languages.insertBefore("cpp","keyword",{"generic-function":{pattern:/\b(?!operator\b)[a-z_]\w*\s*<(?:[^<>]|<[^<>]*>)*>(?=\s*\()/i,inside:{function:/^\w+/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:e.languages.cpp}}}}),e.languages.insertBefore("cpp","operator",{"double-colon":{pattern:/::/,alias:"punctuation"}}),e.languages.insertBefore("cpp","class-name",{"base-clause":{pattern:/(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,lookbehind:!0,greedy:!0,inside:e.languages.extend("cpp",{})}}),e.languages.insertBefore("inside","double-colon",{"class-name":/\b[a-z_]\w*\b(?!\s*::)/i},e.languages.cpp["base-clause"])}(r),function(e){var n=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;e.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:/@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+n.source+"|"+/(?:[^\\\r\n()"']|\\[\s\S])*/.source+")\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+n.source+"$"),alias:"url"}}},selector:{pattern:RegExp("(^|[{}\\s])[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|"+n.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:n,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css;var t=e.languages.markup;t&&(t.tag.addInlined("style","css"),t.tag.addAttribute("style","css"))}(r),function(e){var n,t=/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;e.languages.css.selector={pattern:e.languages.css.selector.pattern,lookbehind:!0,inside:n={"pseudo-element":/:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,"pseudo-class":/:[-\w]+/,class:/\.[-\w]+/,id:/#[-\w]+/,attribute:{pattern:RegExp("\\[(?:[^[\\]\"']|"+t.source+")*\\]"),greedy:!0,inside:{punctuation:/^\[|\]$/,"case-sensitivity":{pattern:/(\s)[si]$/i,lookbehind:!0,alias:"keyword"},namespace:{pattern:/^(\s*)(?:(?!\s)[-*\w\xA0-\uFFFF])*\|(?!=)/,lookbehind:!0,inside:{punctuation:/\|$/}},"attr-name":{pattern:/^(\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+/,lookbehind:!0},"attr-value":[t,{pattern:/(=\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+(?=\s*$)/,lookbehind:!0}],operator:/[|~*^$]?=/}},"n-th":[{pattern:/(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,lookbehind:!0,inside:{number:/[\dn]+/,operator:/[+-]/}},{pattern:/(\(\s*)(?:even|odd)(?=\s*\))/i,lookbehind:!0}],combinator:/>|\+|~|\|\|/,punctuation:/[(),]/}},e.languages.css.atrule.inside["selector-function-argument"].inside=n,e.languages.insertBefore("css","property",{variable:{pattern:/(^|[^-\w\xA0-\uFFFF])--(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*/i,lookbehind:!0}});var r={pattern:/(\b\d+)(?:%|[a-z]+(?![\w-]))/,lookbehind:!0},_={pattern:/(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,lookbehind:!0};e.languages.insertBefore("css","function",{operator:{pattern:/(\s)[+\-*\/](?=\s)/,lookbehind:!0},hexcode:{pattern:/\B#[\da-f]{3,8}\b/i,alias:"color"},color:[{pattern:/(^|[^\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\w-])/i,lookbehind:!0},{pattern:/\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,inside:{unit:r,number:_,function:/[\w-]+(?=\()/,punctuation:/[(),]/}}],entity:/\\[\da-f]{1,8}/i,unit:r,number:_})}(r),r.languages.javascript=r.languages.extend("clike",{"class-name":[r.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp(/(^|[^\w$])/.source+"(?:"+/NaN|Infinity/.source+"|"+/0[bB][01]+(?:_[01]+)*n?/.source+"|"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+"|"+/0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source+"|"+/\d+(?:_\d+)*n/.source+"|"+/(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source+")"+/(?![\w$])/.source),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),r.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/,r.languages.insertBefore("javascript","keyword",{regex:{pattern:/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:r.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:r.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:r.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:r.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:r.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),r.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:r.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}}),r.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}}),r.languages.markup&&(r.languages.markup.tag.addInlined("script","javascript"),r.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,"javascript")),r.languages.js=r.languages.javascript,function(e){var n=/#(?!\{).+/,t={pattern:/#\{[^}]+\}/,alias:"variable"};e.languages.coffeescript=e.languages.extend("javascript",{comment:n,string:[{pattern:/'(?:\\[\s\S]|[^\\'])*'/,greedy:!0},{pattern:/"(?:\\[\s\S]|[^\\"])*"/,greedy:!0,inside:{interpolation:t}}],keyword:/\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,"class-member":{pattern:/@(?!\d)\w+/,alias:"variable"}}),e.languages.insertBefore("coffeescript","comment",{"multiline-comment":{pattern:/###[\s\S]+?###/,alias:"comment"},"block-regex":{pattern:/\/{3}[\s\S]*?\/{3}/,alias:"regex",inside:{comment:n,interpolation:t}}}),e.languages.insertBefore("coffeescript","string",{"inline-javascript":{pattern:/`(?:\\[\s\S]|[^\\`])*`/,inside:{delimiter:{pattern:/^`|`$/,alias:"punctuation"},script:{pattern:/[\s\S]+/,alias:"language-javascript",inside:e.languages.javascript}}},"multiline-string":[{pattern:/'''[\s\S]*?'''/,greedy:!0,alias:"string"},{pattern:/"""[\s\S]*?"""/,greedy:!0,alias:"string",inside:{interpolation:t}}]}),e.languages.insertBefore("coffeescript","keyword",{property:/(?!\d)\w+(?=\s*:(?!:))/}),delete e.languages.coffeescript["template-string"],e.languages.coffee=e.languages.coffeescript}(r),function(e){var n=/[*&][^\s[\]{},]+/,t=/!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/,r="(?:"+t.source+"(?:[ \t]+"+n.source+")?|"+n.source+"(?:[ \t]+"+t.source+")?)",_=/(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g,(function(){return/[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source})),E=/"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;function a(e,n){n=(n||"").replace(/m/g,"")+"m";var t=/([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g,(function(){return r})).replace(/<<value>>/g,(function(){return e}));return RegExp(t,n)}e.languages.yaml={scalar:{pattern:RegExp(/([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(/<<prop>>/g,(function(){return r}))),lookbehind:!0,alias:"string"},comment:/#.*/,key:{pattern:RegExp(/((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g,(function(){return r})).replace(/<<key>>/g,(function(){return"(?:"+_+"|"+E+")"}))),lookbehind:!0,greedy:!0,alias:"atrule"},directive:{pattern:/(^[ \t]*)%.+/m,lookbehind:!0,alias:"important"},datetime:{pattern:a(/\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source),lookbehind:!0,alias:"number"},boolean:{pattern:a(/false|true/.source,"i"),lookbehind:!0,alias:"important"},null:{pattern:a(/null|~/.source,"i"),lookbehind:!0,alias:"important"},string:{pattern:a(E),lookbehind:!0,greedy:!0},number:{pattern:a(/[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source,"i"),lookbehind:!0},tag:t,important:n,punctuation:/---|[:[\]{}\-,|>?]|\.\.\./},e.languages.yml=e.languages.yaml}(r),function(e){var n=/(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;function t(e){return e=e.replace(/<inner>/g,(function(){return n})),RegExp(/((?:^|[^\\])(?:\\{2})*)/.source+"(?:"+e+")")}var r=/(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source,_=/\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(/__/g,(function(){return r})),E=/\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;e.languages.markdown=e.languages.extend("markup",{}),e.languages.insertBefore("markdown","prolog",{"front-matter-block":{pattern:/(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,lookbehind:!0,greedy:!0,inside:{punctuation:/^---|---$/,"front-matter":{pattern:/\S+(?:\s+\S+)*/,alias:["yaml","language-yaml"],inside:e.languages.yaml}}},blockquote:{pattern:/^>(?:[\t ]*>)*/m,alias:"punctuation"},table:{pattern:RegExp("^"+_+E+"(?:"+_+")*","m"),inside:{"table-data-rows":{pattern:RegExp("^("+_+E+")(?:"+_+")*$"),lookbehind:!0,inside:{"table-data":{pattern:RegExp(r),inside:e.languages.markdown},punctuation:/\|/}},"table-line":{pattern:RegExp("^("+_+")"+E+"$"),lookbehind:!0,inside:{punctuation:/\||:?-{3,}:?/}},"table-header-row":{pattern:RegExp("^"+_+"$"),inside:{"table-header":{pattern:RegExp(r),alias:"important",inside:e.languages.markdown},punctuation:/\|/}}}},code:[{pattern:/((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,lookbehind:!0,alias:"keyword"},{pattern:/^```[\s\S]*?^```$/m,greedy:!0,inside:{"code-block":{pattern:/^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,lookbehind:!0},"code-language":{pattern:/^(```).+/,lookbehind:!0},punctuation:/```/}}],title:[{pattern:/\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,alias:"important",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\s*)#.+/m,lookbehind:!0,alias:"important",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,lookbehind:!0,alias:"punctuation"},list:{pattern:/(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,lookbehind:!0,alias:"punctuation"},"url-reference":{pattern:/!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,inside:{variable:{pattern:/^(!?\[)[^\]]+/,lookbehind:!0},string:/(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,punctuation:/^[\[\]!:]|[<>]/},alias:"url"},bold:{pattern:t(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^..)[\s\S]+(?=..$)/,lookbehind:!0,inside:{}},punctuation:/\*\*|__/}},italic:{pattern:t(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^.)[\s\S]+(?=.$)/,lookbehind:!0,inside:{}},punctuation:/[*_]/}},strike:{pattern:t(/(~~?)(?:(?!~)<inner>)+\2/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^~~?)[\s\S]+(?=\1$)/,lookbehind:!0,inside:{}},punctuation:/~~?/}},"code-snippet":{pattern:/(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,lookbehind:!0,greedy:!0,alias:["code","keyword"]},url:{pattern:t(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source),lookbehind:!0,greedy:!0,inside:{operator:/^!/,content:{pattern:/(^\[)[^\]]+(?=\])/,lookbehind:!0,inside:{}},variable:{pattern:/(^\][ \t]?\[)[^\]]+(?=\]$)/,lookbehind:!0},url:{pattern:/(^\]\()[^\s)]+/,lookbehind:!0},string:{pattern:/(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,lookbehind:!0}}}}),["url","bold","italic","strike"].forEach((function(n){["url","bold","italic","strike","code-snippet"].forEach((function(t){n!==t&&(e.languages.markdown[n].inside.content.inside[t]=e.languages.markdown[t])}))})),e.hooks.add("after-tokenize",(function(e){"markdown"!==e.language&&"md"!==e.language||function e(n){if(n&&"string"!=typeof n)for(var t=0,r=n.length;t<r;t++){var _=n[t];if("code"===_.type){var E=_.content[1],a=_.content[3];if(E&&a&&"code-language"===E.type&&"code-block"===a.type&&"string"==typeof E.content){var i=E.content.replace(/\b#/g,"sharp").replace(/\b\+\+/g,"pp"),T="language-"+(i=(/[a-z][\w-]*/i.exec(i)||[""])[0].toLowerCase());a.alias?"string"==typeof a.alias?a.alias=[a.alias,T]:a.alias.push(T):a.alias=[T]}}else e(_.content)}}(e.tokens)})),e.hooks.add("wrap",(function(n){if("code-block"===n.type){for(var t="",r=0,_=n.classes.length;r<_;r++){var E=n.classes[r],s=/language-(.+)/.exec(E);if(s){t=s[1];break}}var o,d=e.languages[t];if(d)n.content=e.highlight((o=n.content,o.replace(a,"").replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi,(function(e,n){var t;if("#"===(n=n.toLowerCase())[0])return t="x"===n[1]?parseInt(n.slice(2),16):Number(n.slice(1)),T(t);var r=i[n];return r||e}))),d,t);else if(t&&"none"!==t&&e.plugins.autoloader){var I="md-"+(new Date).valueOf()+"-"+Math.floor(1e16*Math.random());n.attributes.id=I,e.plugins.autoloader.loadLanguages(t,(function(){var n=document.getElementById(I);n&&(n.innerHTML=e.highlight(n.textContent,e.languages[t],t))}))}}}));var a=RegExp(e.languages.markup.tag.pattern.source,"gi"),i={amp:"&",lt:"<",gt:">",quot:'"'},T=String.fromCodePoint||String.fromCharCode;e.languages.md=e.languages.markdown}(r),r.languages.graphql={comment:/#.*/,description:{pattern:/(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i,greedy:!0,alias:"string",inside:{"language-markdown":{pattern:/(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/,lookbehind:!0,inside:r.languages.markdown}}},string:{pattern:/"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/,greedy:!0},number:/(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,boolean:/\b(?:false|true)\b/,variable:/\$[a-z_]\w*/i,directive:{pattern:/@[a-z_]\w*/i,alias:"function"},"attr-name":{pattern:/\b[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,greedy:!0},"atom-input":{pattern:/\b[A-Z]\w*Input\b/,alias:"class-name"},scalar:/\b(?:Boolean|Float|ID|Int|String)\b/,constant:/\b[A-Z][A-Z_\d]*\b/,"class-name":{pattern:/(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*|:\s*|\[)[A-Z_]\w*/,lookbehind:!0},fragment:{pattern:/(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},"definition-mutation":{pattern:/(\bmutation\s+)[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},"definition-query":{pattern:/(\bquery\s+)[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},keyword:/\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/,operator:/[!=|&]|\.{3}/,"property-query":/\w+(?=\s*\()/,object:/\w+(?=\s*\{)/,punctuation:/[!(){}\[\]:=,]/,property:/\w+/},r.hooks.add("after-tokenize",(function(e){if("graphql"===e.language)for(var n=e.tokens.filter((function(e){return"string"!=typeof e&&"comment"!==e.type&&"scalar"!==e.type})),t=0;t<n.length;){var r=n[t++];if("keyword"===r.type&&"mutation"===r.content){var _=[];if(d(["definition-mutation","punctuation"])&&"("===o(1).content){t+=2;var E=I(/^\($/,/^\)$/);if(-1===E)continue;for(;t<E;t++){var a=o(0);"variable"===a.type&&(N(a,"variable-input"),_.push(a.content))}t=E+1}if(d(["punctuation","property-query"])&&"{"===o(0).content&&(t++,N(o(0),"property-mutation"),_.length>0)){var i=I(/^\{$/,/^\}$/);if(-1===i)continue;for(var T=t;T<i;T++){var s=n[T];"variable"===s.type&&_.indexOf(s.content)>=0&&N(s,"variable-input")}}}}function o(e){return n[t+e]}function d(e,n){n=n||0;for(var t=0;t<e.length;t++){var r=o(t+n);if(!r||r.type!==e[t])return!1}return!0}function I(e,r){for(var _=1,E=t;E<n.length;E++){var a=n[E],i=a.content;if("punctuation"===a.type&&"string"==typeof i)if(e.test(i))_++;else if(r.test(i)&&0===--_)return E}return-1}function N(e,n){var t=e.alias;t?Array.isArray(t)||(e.alias=t=[t]):e.alias=t=[],t.push(n)}})),r.languages.sql={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,lookbehind:!0},variable:[{pattern:/@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,greedy:!0},/@[\w.$]+/],string:{pattern:/(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,greedy:!0,lookbehind:!0},identifier:{pattern:/(^|[^@\\])`(?:\\[\s\S]|[^`\\]|``)*`/,greedy:!0,lookbehind:!0,inside:{punctuation:/^`|`$/}},function:/\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,keyword:/\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,boolean:/\b(?:FALSE|NULL|TRUE)\b/i,number:/\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,operator:/[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,punctuation:/[;[\]()`,.]/},function(e){var n=e.languages.javascript["template-string"],t=n.pattern.source,r=n.inside.interpolation,_=r.inside["interpolation-punctuation"],E=r.pattern.source;function a(n,r){if(e.languages[n])return{pattern:RegExp("((?:"+r+")\\s*)"+t),lookbehind:!0,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},"embedded-code":{pattern:/[\s\S]+/,alias:n}}}}function i(e,n){return"___"+n.toUpperCase()+"_"+e+"___"}function T(n,t,r){var _={code:n,grammar:t,language:r};return e.hooks.run("before-tokenize",_),_.tokens=e.tokenize(_.code,_.grammar),e.hooks.run("after-tokenize",_),_.tokens}function s(n){var t={};t["interpolation-punctuation"]=_;var E=e.tokenize(n,t);if(3===E.length){var a=[1,1];a.push.apply(a,T(E[1],e.languages.javascript,"javascript")),E.splice.apply(E,a)}return new e.Token("interpolation",E,r.alias,n)}function o(n,t,r){var _=e.tokenize(n,{interpolation:{pattern:RegExp(E),lookbehind:!0}}),a=0,o={},d=T(_.map((function(e){if("string"==typeof e)return e;for(var t,_=e.content;-1!==n.indexOf(t=i(a++,r)););return o[t]=_,t})).join(""),t,r),I=Object.keys(o);return a=0,function e(n){for(var t=0;t<n.length;t++){if(a>=I.length)return;var r=n[t];if("string"==typeof r||"string"==typeof r.content){var _=I[a],E="string"==typeof r?r:r.content,i=E.indexOf(_);if(-1!==i){++a;var T=E.substring(0,i),d=s(o[_]),N=E.substring(i+_.length),O=[];if(T&&O.push(T),O.push(d),N){var R=[N];e(R),O.push.apply(O,R)}"string"==typeof r?(n.splice.apply(n,[t,1].concat(O)),t+=O.length-1):r.content=O}}else{var u=r.content;Array.isArray(u)?e(u):e([u])}}}(d),new e.Token(r,d,"language-"+r,n)}e.languages.javascript["template-string"]=[a("css",/\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),a("html",/\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=/.source),a("svg",/\bsvg/.source),a("markdown",/\b(?:markdown|md)/.source),a("graphql",/\b(?:gql|graphql(?:\s*\.\s*experimental)?)/.source),a("sql",/\bsql/.source),n].filter(Boolean);var d={javascript:!0,js:!0,typescript:!0,ts:!0,jsx:!0,tsx:!0};function I(e){return"string"==typeof e?e:Array.isArray(e)?e.map(I).join(""):I(e.content)}e.hooks.add("after-tokenize",(function(n){n.language in d&&function n(t){for(var r=0,_=t.length;r<_;r++){var E=t[r];if("string"!=typeof E){var a=E.content;if(Array.isArray(a))if("template-string"===E.type){var i=a[1];if(3===a.length&&"string"!=typeof i&&"embedded-code"===i.type){var T=I(i),s=i.alias,d=Array.isArray(s)?s[0]:s,N=e.languages[d];if(!N)continue;a[1]=o(T,N,d)}}else n(a);else"string"!=typeof a&&n([a])}}}(n.tokens)}))}(r),function(e){e.languages.typescript=e.languages.extend("javascript",{"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,lookbehind:!0,greedy:!0,inside:null},builtin:/\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/}),e.languages.typescript.keyword.push(/\b(?:abstract|declare|is|keyof|readonly|require)\b/,/\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/,/\btype\b(?=\s*(?:[\{*]|$))/),delete e.languages.typescript.parameter,delete e.languages.typescript["literal-property"];var n=e.languages.extend("typescript",{});delete n["class-name"],e.languages.typescript["class-name"].inside=n,e.languages.insertBefore("typescript","function",{decorator:{pattern:/@[$\w\xA0-\uFFFF]+/,inside:{at:{pattern:/^@/,alias:"operator"},function:/^[\s\S]+/}},"generic-function":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,greedy:!0,inside:{function:/^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:n}}}}),e.languages.ts=e.languages.typescript}(r),function(e){function n(e,n){return RegExp(e.replace(/<ID>/g,(function(){return/(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/.source})),n)}e.languages.insertBefore("javascript","function-variable",{"method-variable":{pattern:RegExp("(\\.\\s*)"+e.languages.javascript["function-variable"].pattern.source),lookbehind:!0,alias:["function-variable","method","function","property-access"]}}),e.languages.insertBefore("javascript","function",{method:{pattern:RegExp("(\\.\\s*)"+e.languages.javascript.function.source),lookbehind:!0,alias:["function","property-access"]}}),e.languages.insertBefore("javascript","constant",{"known-class-name":[{pattern:/\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\b/,alias:"class-name"},{pattern:/\b(?:[A-Z]\w*)Error\b/,alias:"class-name"}]}),e.languages.insertBefore("javascript","keyword",{imports:{pattern:n(/(\bimport\b\s*)(?:<ID>(?:\s*,\s*(?:\*\s*as\s+<ID>|\{[^{}]*\}))?|\*\s*as\s+<ID>|\{[^{}]*\})(?=\s*\bfrom\b)/.source),lookbehind:!0,inside:e.languages.javascript},exports:{pattern:n(/(\bexport\b\s*)(?:\*(?:\s*as\s+<ID>)?(?=\s*\bfrom\b)|\{[^{}]*\})/.source),lookbehind:!0,inside:e.languages.javascript}}),e.languages.javascript.keyword.unshift({pattern:/\b(?:as|default|export|from|import)\b/,alias:"module"},{pattern:/\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\b/,alias:"control-flow"},{pattern:/\bnull\b/,alias:["null","nil"]},{pattern:/\bundefined\b/,alias:"nil"}),e.languages.insertBefore("javascript","operator",{spread:{pattern:/\.{3}/,alias:"operator"},arrow:{pattern:/=>/,alias:"operator"}}),e.languages.insertBefore("javascript","punctuation",{"property-access":{pattern:n(/(\.\s*)#?<ID>/.source),lookbehind:!0},"maybe-class-name":{pattern:/(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,lookbehind:!0},dom:{pattern:/\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\b/,alias:"variable"},console:{pattern:/\bconsole(?=\s*\.)/,alias:"class-name"}});for(var t=["function","function-variable","method","method-variable","property-access"],r=0;r<t.length;r++){var _=t[r],E=e.languages.javascript[_];"RegExp"===e.util.type(E)&&(E=e.languages.javascript[_]={pattern:E});var a=E.inside||{};E.inside=a,a["maybe-class-name"]=/^[A-Z][\s\S]*/}}(r),function(e){var n=e.util.clone(e.languages.javascript),t=/(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source,r=/(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source,_=/(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;function E(e,n){return e=e.replace(/<S>/g,(function(){return t})).replace(/<BRACES>/g,(function(){return r})).replace(/<SPREAD>/g,(function(){return _})),RegExp(e,n)}_=E(_).source,e.languages.jsx=e.languages.extend("markup",n),e.languages.jsx.tag.pattern=E(/<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source),e.languages.jsx.tag.inside.tag.pattern=/^<\/?[^\s>\/]*/,e.languages.jsx.tag.inside["attr-value"].pattern=/=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/,e.languages.jsx.tag.inside.tag.inside["class-name"]=/^[A-Z]\w*(?:\.[A-Z]\w*)*$/,e.languages.jsx.tag.inside.comment=n.comment,e.languages.insertBefore("inside","attr-name",{spread:{pattern:E(/<SPREAD>/.source),inside:e.languages.jsx}},e.languages.jsx.tag),e.languages.insertBefore("inside","special-attr",{script:{pattern:E(/=<BRACES>/.source),alias:"language-javascript",inside:{"script-punctuation":{pattern:/^=(?=\{)/,alias:"punctuation"},rest:e.languages.jsx}}},e.languages.jsx.tag);var a=function(e){return e?"string"==typeof e?e:"string"==typeof e.content?e.content:e.content.map(a).join(""):""},i=function(n){for(var t=[],r=0;r<n.length;r++){var _=n[r],E=!1;if("string"!=typeof _&&("tag"===_.type&&_.content[0]&&"tag"===_.content[0].type?"</"===_.content[0].content[0].content?t.length>0&&t[t.length-1].tagName===a(_.content[0].content[1])&&t.pop():"/>"===_.content[_.content.length-1].content||t.push({tagName:a(_.content[0].content[1]),openedBraces:0}):t.length>0&&"punctuation"===_.type&&"{"===_.content?t[t.length-1].openedBraces++:t.length>0&&t[t.length-1].openedBraces>0&&"punctuation"===_.type&&"}"===_.content?t[t.length-1].openedBraces--:E=!0),(E||"string"==typeof _)&&t.length>0&&0===t[t.length-1].openedBraces){var T=a(_);r<n.length-1&&("string"==typeof n[r+1]||"plain-text"===n[r+1].type)&&(T+=a(n[r+1]),n.splice(r+1,1)),r>0&&("string"==typeof n[r-1]||"plain-text"===n[r-1].type)&&(T=a(n[r-1])+T,n.splice(r-1,1),r--),n[r]=new e.Token("plain-text",T,null,T)}_.content&&"string"!=typeof _.content&&i(_.content)}};e.hooks.add("after-tokenize",(function(e){"jsx"!==e.language&&"tsx"!==e.language||i(e.tokens)}))}(r),function(e){e.languages.diff={coord:[/^(?:\*{3}|-{3}|\+{3}).*$/m,/^@@.*@@$/m,/^\d.*$/m]};var n={"deleted-sign":"-","deleted-arrow":"<","inserted-sign":"+","inserted-arrow":">",unchanged:" ",diff:"!"};Object.keys(n).forEach((function(t){var r=n[t],_=[];/^\w+$/.test(t)||_.push(/\w+/.exec(t)[0]),"diff"===t&&_.push("bold"),e.languages.diff[t]={pattern:RegExp("^(?:["+r+"].*(?:\r\n?|\n|(?![\\s\\S])))+","m"),alias:_,inside:{line:{pattern:/(.)(?=[\s\S]).*(?:\r\n?|\n)?/,lookbehind:!0},prefix:{pattern:/[\s\S]/,alias:/\w+/.exec(t)[0]}}}})),Object.defineProperty(e.languages.diff,"PREFIXES",{value:n})}(r),r.languages.git={comment:/^#.*/m,deleted:/^[-\u2013].*/m,inserted:/^\+.*/m,string:/("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,command:{pattern:/^.*\$ git .*$/m,inside:{parameter:/\s--?\w+/}},coord:/^@@.*@@$/m,"commit-sha1":/^commit \w{40}$/m},r.languages.go=r.languages.extend("clike",{string:{pattern:/(^|[^\\])"(?:\\.|[^"\\\r\n])*"|`[^`]*`/,lookbehind:!0,greedy:!0},keyword:/\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,boolean:/\b(?:_|false|iota|nil|true)\b/,number:[/\b0(?:b[01_]+|o[0-7_]+)i?\b/i,/\b0x(?:[a-f\d_]+(?:\.[a-f\d_]*)?|\.[a-f\d_]+)(?:p[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,/(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?[\d_]+)?i?(?!\w)/i],operator:/[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,builtin:/\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\b/}),r.languages.insertBefore("go","string",{char:{pattern:/'(?:\\.|[^'\\\r\n]){0,10}'/,greedy:!0}}),delete r.languages.go["class-name"],function(e){function n(e,n){return"___"+e.toUpperCase()+n+"___"}Object.defineProperties(e.languages["markup-templating"]={},{buildPlaceholders:{value:function(t,r,_,E){if(t.language===r){var a=t.tokenStack=[];t.code=t.code.replace(_,(function(e){if("function"==typeof E&&!E(e))return e;for(var _,i=a.length;-1!==t.code.indexOf(_=n(r,i));)++i;return a[i]=e,_})),t.grammar=e.languages.markup}}},tokenizePlaceholders:{value:function(t,r){if(t.language===r&&t.tokenStack){t.grammar=e.languages[r];var _=0,E=Object.keys(t.tokenStack);!function a(i){for(var T=0;T<i.length&&!(_>=E.length);T++){var s=i[T];if("string"==typeof s||s.content&&"string"==typeof s.content){var o=E[_],d=t.tokenStack[o],I="string"==typeof s?s:s.content,N=n(r,o),O=I.indexOf(N);if(O>-1){++_;var R=I.substring(0,O),u=new e.Token(r,e.tokenize(d,t.grammar),"language-"+r,d),A=I.substring(O+N.length),D=[];R&&D.push.apply(D,a([R])),D.push(u),A&&D.push.apply(D,a([A])),"string"==typeof s?i.splice.apply(i,[T,1].concat(D)):s.content=D}}else s.content&&a(s.content)}return i}(t.tokens)}}}})}(r),function(e){e.languages.handlebars={comment:/\{\{![\s\S]*?\}\}/,delimiter:{pattern:/^\{\{\{?|\}\}\}?$/,alias:"punctuation"},string:/(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][+-]?\d+)?/,boolean:/\b(?:false|true)\b/,block:{pattern:/^(\s*(?:~\s*)?)[#\/]\S+?(?=\s*(?:~\s*)?$|\s)/,lookbehind:!0,alias:"keyword"},brackets:{pattern:/\[[^\]]+\]/,inside:{punctuation:/\[|\]/,variable:/[\s\S]+/}},punctuation:/[!"#%&':()*+,.\/;<=>@\[\\\]^`{|}~]/,variable:/[^!"#%&'()*+,\/;<=>@\[\\\]^`{|}~\s]+/},e.hooks.add("before-tokenize",(function(n){e.languages["markup-templating"].buildPlaceholders(n,"handlebars",/\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g)})),e.hooks.add("after-tokenize",(function(n){e.languages["markup-templating"].tokenizePlaceholders(n,"handlebars")})),e.languages.hbs=e.languages.handlebars}(r),r.languages.json={property:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,lookbehind:!0,greedy:!0},string:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,lookbehind:!0,greedy:!0},comment:{pattern:/\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},number:/-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,punctuation:/[{}[\],]/,operator:/:/,boolean:/\b(?:false|true)\b/,null:{pattern:/\bnull\b/,alias:"keyword"}},r.languages.webmanifest=r.languages.json,r.languages.less=r.languages.extend("css",{comment:[/\/\*[\s\S]*?\*\//,{pattern:/(^|[^\\])\/\/.*/,lookbehind:!0}],atrule:{pattern:/@[\w-](?:\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};\s]|\s+(?!\s))*?(?=\s*\{)/,inside:{punctuation:/[:()]/}},selector:{pattern:/(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};@\s]|\s+(?!\s))*?(?=\s*\{)/,inside:{variable:/@+[\w-]+/}},property:/(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/,operator:/[+\-*\/]/}),r.languages.insertBefore("less","property",{variable:[{pattern:/@[\w-]+\s*:/,inside:{punctuation:/:/}},/@@?[\w-]+/],"mixin-usage":{pattern:/([{;]\s*)[.#](?!\d)[\w-].*?(?=[(;])/,lookbehind:!0,alias:"function"}}),r.languages.makefile={comment:{pattern:/(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,lookbehind:!0},string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"builtin-target":{pattern:/\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,alias:"builtin"},target:{pattern:/^(?:[^:=\s]|[ \t]+(?![\s:]))+(?=\s*:(?!=))/m,alias:"symbol",inside:{variable:/\$+(?:(?!\$)[^(){}:#=\s]+|(?=[({]))/}},variable:/\$+(?:(?!\$)[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,keyword:/-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,function:{pattern:/(\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \t])/,lookbehind:!0},operator:/(?:::|[?:+!])?=|[|@]/,punctuation:/[:;(){}]/},r.languages.objectivec=r.languages.extend("c",{string:{pattern:/@?"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0},keyword:/\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,operator:/-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/}),delete r.languages.objectivec["class-name"],r.languages.objc=r.languages.objectivec,r.languages.ocaml={comment:{pattern:/\(\*[\s\S]*?\*\)/,greedy:!0},char:{pattern:/'(?:[^\\\r\n']|\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,greedy:!0},string:[{pattern:/"(?:\\(?:[\s\S]|\r\n)|[^\\\r\n"])*"/,greedy:!0},{pattern:/\{([a-z_]*)\|[\s\S]*?\|\1\}/,greedy:!0}],number:[/\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\b/i,/\b0x[a-f0-9][a-f0-9_]*(?:\.[a-f0-9_]*)?(?:p[+-]?\d[\d_]*)?(?!\w)/i,/\b\d[\d_]*(?:\.[\d_]*)?(?:e[+-]?\d[\d_]*)?(?!\w)/i],directive:{pattern:/\B#\w+/,alias:"property"},label:{pattern:/\B~\w+/,alias:"property"},"type-variable":{pattern:/\B'\w+/,alias:"function"},variant:{pattern:/`\w+/,alias:"symbol"},keyword:/\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\b/,boolean:/\b(?:false|true)\b/,"operator-like-punctuation":{pattern:/\[[<>|]|[>|]\]|\{<|>\}/,alias:"punctuation"},operator:/\.[.~]|:[=>]|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\b/,punctuation:/;;|::|[(){}\[\].,:;#]|\b_\b/},r.languages.python={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0,greedy:!0},"string-interpolation":{pattern:/(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,lookbehind:!0,inside:{"format-spec":{pattern:/(:)[^:(){}]+(?=\}$)/,lookbehind:!0},"conversion-option":{pattern:/![sra](?=[:}]$)/,alias:"punctuation"},rest:null}},string:/[\s\S]+/}},"triple-quoted-string":{pattern:/(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,greedy:!0,alias:"string"},string:{pattern:/(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,greedy:!0},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bclass\s+)\w+/i,lookbehind:!0},decorator:{pattern:/(^[\t ]*)@\w+(?:\.\w+)*/m,lookbehind:!0,alias:["annotation","punctuation"],inside:{punctuation:/\./}},keyword:/\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,boolean:/\b(?:False|None|True)\b/,number:/\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,operator:/[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\];(),.:]/},r.languages.python["string-interpolation"].inside.interpolation.inside.rest=r.languages.python,r.languages.py=r.languages.python,r.languages.reason=r.languages.extend("clike",{string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,greedy:!0},"class-name":/\b[A-Z]\w*/,keyword:/\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,operator:/\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:asr|land|lor|lsl|lsr|lxor|mod)\b/}),r.languages.insertBefore("reason","class-name",{char:{pattern:/'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,greedy:!0},constructor:/\b[A-Z]\w*\b(?!\s*\.)/,label:{pattern:/\b[a-z]\w*(?=::)/,alias:"symbol"}}),delete r.languages.reason.function,function(e){e.languages.sass=e.languages.extend("css",{comment:{pattern:/^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t].+)*/m,lookbehind:!0,greedy:!0}}),e.languages.insertBefore("sass","atrule",{"atrule-line":{pattern:/^(?:[ \t]*)[@+=].+/m,greedy:!0,inside:{atrule:/(?:@[\w-]+|[+=])/}}}),delete e.languages.sass.atrule;var n=/\$[-\w]+|#\{\$[-\w]+\}/,t=[/[+*\/%]|[=!]=|<=?|>=?|\b(?:and|not|or)\b/,{pattern:/(\s)-(?=\s)/,lookbehind:!0}];e.languages.insertBefore("sass","property",{"variable-line":{pattern:/^[ \t]*\$.+/m,greedy:!0,inside:{punctuation:/:/,variable:n,operator:t}},"property-line":{pattern:/^[ \t]*(?:[^:\s]+ *:.*|:[^:\s].*)/m,greedy:!0,inside:{property:[/[^:\s]+(?=\s*:)/,{pattern:/(:)[^:\s]+/,lookbehind:!0}],punctuation:/:/,variable:n,operator:t,important:e.languages.sass.important}}}),delete e.languages.sass.property,delete e.languages.sass.important,e.languages.insertBefore("sass","punctuation",{selector:{pattern:/^([ \t]*)\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*)*/m,lookbehind:!0,greedy:!0}})}(r),r.languages.scss=r.languages.extend("css",{comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},atrule:{pattern:/@[\w-](?:\([^()]+\)|[^()\s]|\s+(?!\s))*?(?=\s+[{;])/,inside:{rule:/@[\w-]+/}},url:/(?:[-a-z]+-)?url(?=\()/i,selector:{pattern:/(?=\S)[^@;{}()]?(?:[^@;{}()\s]|\s+(?!\s)|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}][^:{}]*[:{][^}]))/,inside:{parent:{pattern:/&/,alias:"important"},placeholder:/%[-\w]+/,variable:/\$[-\w]+|#\{\$[-\w]+\}/}},property:{pattern:/(?:[-\w]|\$[-\w]|#\{\$[-\w]+\})+(?=\s*:)/,inside:{variable:/\$[-\w]+|#\{\$[-\w]+\}/}}}),r.languages.insertBefore("scss","atrule",{keyword:[/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\b/i,{pattern:/( )(?:from|through)(?= )/,lookbehind:!0}]}),r.languages.insertBefore("scss","important",{variable:/\$[-\w]+|#\{\$[-\w]+\}/}),r.languages.insertBefore("scss","function",{"module-modifier":{pattern:/\b(?:as|hide|show|with)\b/i,alias:"keyword"},placeholder:{pattern:/%[-\w]+/,alias:"selector"},statement:{pattern:/\B!(?:default|optional)\b/i,alias:"keyword"},boolean:/\b(?:false|true)\b/,null:{pattern:/\bnull\b/,alias:"keyword"},operator:{pattern:/(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|not|or)(?=\s)/,lookbehind:!0}}),r.languages.scss.atrule.inside.rest=r.languages.scss,function(e){var n={pattern:/(\b\d+)(?:%|[a-z]+)/,lookbehind:!0},t={pattern:/(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,lookbehind:!0},r={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},url:{pattern:/\burl\((["']?).*?\1\)/i,greedy:!0},string:{pattern:/("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,greedy:!0},interpolation:null,func:null,important:/\B!(?:important|optional)\b/i,keyword:{pattern:/(^|\s+)(?:(?:else|for|if|return|unless)(?=\s|$)|@[\w-]+)/,lookbehind:!0},hexcode:/#[\da-f]{3,6}/i,color:[/\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\b/i,{pattern:/\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,inside:{unit:n,number:t,function:/[\w-]+(?=\()/,punctuation:/[(),]/}}],entity:/\\[\da-f]{1,8}/i,unit:n,boolean:/\b(?:false|true)\b/,operator:[/~|[+!\/%<>?=]=?|[-:]=|\*[*=]?|\.{2,3}|&&|\|\||\B-\B|\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\b/],number:t,punctuation:/[{}()\[\];:,]/};r.interpolation={pattern:/\{[^\r\n}:]+\}/,alias:"variable",inside:{delimiter:{pattern:/^\{|\}$/,alias:"punctuation"},rest:r}},r.func={pattern:/[\w-]+\([^)]*\).*/,inside:{function:/^[^(]+/,rest:r}},e.languages.stylus={"atrule-declaration":{pattern:/(^[ \t]*)@.+/m,lookbehind:!0,inside:{atrule:/^@[\w-]+/,rest:r}},"variable-declaration":{pattern:/(^[ \t]*)[\w$-]+\s*.?=[ \t]*(?:\{[^{}]*\}|\S.*|$)/m,lookbehind:!0,inside:{variable:/^\S+/,rest:r}},statement:{pattern:/(^[ \t]*)(?:else|for|if|return|unless)[ \t].+/m,lookbehind:!0,inside:{keyword:/^\S+/,rest:r}},"property-declaration":{pattern:/((?:^|\{)([ \t]*))(?:[\w-]|\{[^}\r\n]+\})+(?:\s*:\s*|[ \t]+)(?!\s)[^{\r\n]*(?:;|[^{\r\n,]$(?!(?:\r?\n|\r)(?:\{|\2[ \t])))/m,lookbehind:!0,inside:{property:{pattern:/^[^\s:]+/,inside:{interpolation:r.interpolation}},rest:r}},selector:{pattern:/(^[ \t]*)(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)(?:(?:\r?\n|\r)(?:\1(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)))*(?:,$|\{|(?=(?:\r?\n|\r)(?:\{|\1[ \t])))/m,lookbehind:!0,inside:{interpolation:r.interpolation,comment:r.comment,punctuation:/[{},]/}},func:r.func,string:r.string,comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0,greedy:!0},interpolation:r.interpolation,punctuation:/[{}()\[\];:.]/}}(r),function(e){var n=e.util.clone(e.languages.typescript);e.languages.tsx=e.languages.extend("jsx",n),delete e.languages.tsx.parameter,delete e.languages.tsx["literal-property"];var t=e.languages.tsx.tag;t.pattern=RegExp(/(^|[^\w$]|(?=<\/))/.source+"(?:"+t.pattern.source+")",t.pattern.flags),t.lookbehind=!0}(r),r.languages.wasm={comment:[/\(;[\s\S]*?;\)/,{pattern:/;;.*/,greedy:!0}],string:{pattern:/"(?:\\[\s\S]|[^"\\])*"/,greedy:!0},keyword:[{pattern:/\b(?:align|offset)=/,inside:{operator:/=/}},{pattern:/\b(?:(?:f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))?|memory\.(?:grow|size))\b/,inside:{punctuation:/\./}},/\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\b/],variable:/\$[\w!#$%&'*+\-./:<=>?@\\^`|~]+/,number:/[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/,punctuation:/[()]/},n.Z=r},9901:function(e){e.exports&&(e.exports={core:{meta:{path:"components/prism-core.js",option:"mandatory"},core:"Core"},themes:{meta:{path:"themes/{id}.css",link:"index.html?theme={id}",exclusive:!0},prism:{title:"Default",option:"default"},"prism-dark":"Dark","prism-funky":"Funky","prism-okaidia":{title:"Okaidia",owner:"ocodia"},"prism-twilight":{title:"Twilight",owner:"remybach"},"prism-coy":{title:"Coy",owner:"tshedor"},"prism-solarizedlight":{title:"Solarized Light",owner:"hectormatos2011 "},"prism-tomorrow":{title:"Tomorrow Night",owner:"Rosey"}},languages:{meta:{path:"components/prism-{id}",noCSS:!0,examplesPath:"examples/prism-{id}",addCheckAll:!0},markup:{title:"Markup",alias:["html","xml","svg","mathml","ssml","atom","rss"],aliasTitles:{html:"HTML",xml:"XML",svg:"SVG",mathml:"MathML",ssml:"SSML",atom:"Atom",rss:"RSS"},option:"default"},css:{title:"CSS",option:"default",modify:"markup"},clike:{title:"C-like",option:"default"},javascript:{title:"JavaScript",require:"clike",modify:"markup",optional:"regex",alias:"js",option:"default"},abap:{title:"ABAP",owner:"dellagustin"},abnf:{title:"ABNF",owner:"RunDevelopment"},actionscript:{title:"ActionScript",require:"javascript",modify:"markup",owner:"Golmote"},ada:{title:"Ada",owner:"Lucretia"},agda:{title:"Agda",owner:"xy-ren"},al:{title:"AL",owner:"RunDevelopment"},antlr4:{title:"ANTLR4",alias:"g4",owner:"RunDevelopment"},apacheconf:{title:"Apache Configuration",owner:"GuiTeK"},apex:{title:"Apex",require:["clike","sql"],owner:"RunDevelopment"},apl:{title:"APL",owner:"ngn"},applescript:{title:"AppleScript",owner:"Golmote"},aql:{title:"AQL",owner:"RunDevelopment"},arduino:{title:"Arduino",require:"cpp",alias:"ino",owner:"dkern"},arff:{title:"ARFF",owner:"Golmote"},armasm:{title:"ARM Assembly",alias:"arm-asm",owner:"RunDevelopment"},arturo:{title:"Arturo",alias:"art",optional:["bash","css","javascript","markup","markdown","sql"],owner:"drkameleon"},asciidoc:{alias:"adoc",title:"AsciiDoc",owner:"Golmote"},aspnet:{title:"ASP.NET (C#)",require:["markup","csharp"],owner:"nauzilus"},asm6502:{title:"6502 Assembly",owner:"kzurawel"},asmatmel:{title:"Atmel AVR Assembly",owner:"cerkit"},autohotkey:{title:"AutoHotkey",owner:"aviaryan"},autoit:{title:"AutoIt",owner:"Golmote"},avisynth:{title:"AviSynth",alias:"avs",owner:"Zinfidel"},"avro-idl":{title:"Avro IDL",alias:"avdl",owner:"RunDevelopment"},awk:{title:"AWK",alias:"gawk",aliasTitles:{gawk:"GAWK"},owner:"RunDevelopment"},bash:{title:"Bash",alias:"shell",aliasTitles:{shell:"Shell"},owner:"zeitgeist87"},basic:{title:"BASIC",owner:"Golmote"},batch:{title:"Batch",owner:"Golmote"},bbcode:{title:"BBcode",alias:"shortcode",aliasTitles:{shortcode:"Shortcode"},owner:"RunDevelopment"},bicep:{title:"Bicep",owner:"johnnyreilly"},birb:{title:"Birb",require:"clike",owner:"Calamity210"},bison:{title:"Bison",require:"c",owner:"Golmote"},bnf:{title:"BNF",alias:"rbnf",aliasTitles:{rbnf:"RBNF"},owner:"RunDevelopment"},brainfuck:{title:"Brainfuck",owner:"Golmote"},brightscript:{title:"BrightScript",owner:"RunDevelopment"},bro:{title:"Bro",owner:"wayward710"},bsl:{title:"BSL (1C:Enterprise)",alias:"oscript",aliasTitles:{oscript:"OneScript"},owner:"Diversus23"},c:{title:"C",require:"clike",owner:"zeitgeist87"},csharp:{title:"C#",require:"clike",alias:["cs","dotnet"],owner:"mvalipour"},cpp:{title:"C++",require:"c",owner:"zeitgeist87"},cfscript:{title:"CFScript",require:"clike",alias:"cfc",owner:"mjclemente"},chaiscript:{title:"ChaiScript",require:["clike","cpp"],owner:"RunDevelopment"},cil:{title:"CIL",owner:"sbrl"},clojure:{title:"Clojure",owner:"troglotit"},cmake:{title:"CMake",owner:"mjrogozinski"},cobol:{title:"COBOL",owner:"RunDevelopment"},coffeescript:{title:"CoffeeScript",require:"javascript",alias:"coffee",owner:"R-osey"},concurnas:{title:"Concurnas",alias:"conc",owner:"jasontatton"},csp:{title:"Content-Security-Policy",owner:"ScottHelme"},cooklang:{title:"Cooklang",owner:"ahue"},coq:{title:"Coq",owner:"RunDevelopment"},crystal:{title:"Crystal",require:"ruby",owner:"MakeNowJust"},"css-extras":{title:"CSS Extras",require:"css",modify:"css",owner:"milesj"},csv:{title:"CSV",owner:"RunDevelopment"},cue:{title:"CUE",owner:"RunDevelopment"},cypher:{title:"Cypher",owner:"RunDevelopment"},d:{title:"D",require:"clike",owner:"Golmote"},dart:{title:"Dart",require:"clike",owner:"Golmote"},dataweave:{title:"DataWeave",owner:"machaval"},dax:{title:"DAX",owner:"peterbud"},dhall:{title:"Dhall",owner:"RunDevelopment"},diff:{title:"Diff",owner:"uranusjr"},django:{title:"Django/Jinja2",require:"markup-templating",alias:"jinja2",owner:"romanvm"},"dns-zone-file":{title:"DNS zone file",owner:"RunDevelopment",alias:"dns-zone"},docker:{title:"Docker",alias:"dockerfile",owner:"JustinBeckwith"},dot:{title:"DOT (Graphviz)",alias:"gv",optional:"markup",owner:"RunDevelopment"},ebnf:{title:"EBNF",owner:"RunDevelopment"},editorconfig:{title:"EditorConfig",owner:"osipxd"},eiffel:{title:"Eiffel",owner:"Conaclos"},ejs:{title:"EJS",require:["javascript","markup-templating"],owner:"RunDevelopment",alias:"eta",aliasTitles:{eta:"Eta"}},elixir:{title:"Elixir",owner:"Golmote"},elm:{title:"Elm",owner:"zwilias"},etlua:{title:"Embedded Lua templating",require:["lua","markup-templating"],owner:"RunDevelopment"},erb:{title:"ERB",require:["ruby","markup-templating"],owner:"Golmote"},erlang:{title:"Erlang",owner:"Golmote"},"excel-formula":{title:"Excel Formula",alias:["xlsx","xls"],owner:"RunDevelopment"},fsharp:{title:"F#",require:"clike",owner:"simonreynolds7"},factor:{title:"Factor",owner:"catb0t"},false:{title:"False",owner:"edukisto"},"firestore-security-rules":{title:"Firestore security rules",require:"clike",owner:"RunDevelopment"},flow:{title:"Flow",require:"javascript",owner:"Golmote"},fortran:{title:"Fortran",owner:"Golmote"},ftl:{title:"FreeMarker Template Language",require:"markup-templating",owner:"RunDevelopment"},gml:{title:"GameMaker Language",alias:"gamemakerlanguage",require:"clike",owner:"LiarOnce"},gap:{title:"GAP (CAS)",owner:"RunDevelopment"},gcode:{title:"G-code",owner:"RunDevelopment"},gdscript:{title:"GDScript",owner:"RunDevelopment"},gedcom:{title:"GEDCOM",owner:"Golmote"},gettext:{title:"gettext",alias:"po",owner:"RunDevelopment"},gherkin:{title:"Gherkin",owner:"hason"},git:{title:"Git",owner:"lgiraudel"},glsl:{title:"GLSL",require:"c",owner:"Golmote"},gn:{title:"GN",alias:"gni",owner:"RunDevelopment"},"linker-script":{title:"GNU Linker Script",alias:"ld",owner:"RunDevelopment"},go:{title:"Go",require:"clike",owner:"arnehormann"},"go-module":{title:"Go module",alias:"go-mod",owner:"RunDevelopment"},graphql:{title:"GraphQL",optional:"markdown",owner:"Golmote"},groovy:{title:"Groovy",require:"clike",owner:"robfletcher"},haml:{title:"Haml",require:"ruby",optional:["css","css-extras","coffeescript","erb","javascript","less","markdown","scss","textile"],owner:"Golmote"},handlebars:{title:"Handlebars",require:"markup-templating",alias:["hbs","mustache"],aliasTitles:{mustache:"Mustache"},owner:"Golmote"},haskell:{title:"Haskell",alias:"hs",owner:"bholst"},haxe:{title:"Haxe",require:"clike",optional:"regex",owner:"Golmote"},hcl:{title:"HCL",owner:"outsideris"},hlsl:{title:"HLSL",require:"c",owner:"RunDevelopment"},hoon:{title:"Hoon",owner:"matildepark"},http:{title:"HTTP",optional:["csp","css","hpkp","hsts","javascript","json","markup","uri"],owner:"danielgtaylor"},hpkp:{title:"HTTP Public-Key-Pins",owner:"ScottHelme"},hsts:{title:"HTTP Strict-Transport-Security",owner:"ScottHelme"},ichigojam:{title:"IchigoJam",owner:"BlueCocoa"},icon:{title:"Icon",owner:"Golmote"},"icu-message-format":{title:"ICU Message Format",owner:"RunDevelopment"},idris:{title:"Idris",alias:"idr",owner:"KeenS",require:"haskell"},ignore:{title:".ignore",owner:"osipxd",alias:["gitignore","hgignore","npmignore"],aliasTitles:{gitignore:".gitignore",hgignore:".hgignore",npmignore:".npmignore"}},inform7:{title:"Inform 7",owner:"Golmote"},ini:{title:"Ini",owner:"aviaryan"},io:{title:"Io",owner:"AlesTsurko"},j:{title:"J",owner:"Golmote"},java:{title:"Java",require:"clike",owner:"sherblot"},javadoc:{title:"JavaDoc",require:["markup","java","javadoclike"],modify:"java",optional:"scala",owner:"RunDevelopment"},javadoclike:{title:"JavaDoc-like",modify:["java","javascript","php"],owner:"RunDevelopment"},javastacktrace:{title:"Java stack trace",owner:"RunDevelopment"},jexl:{title:"Jexl",owner:"czosel"},jolie:{title:"Jolie",require:"clike",owner:"thesave"},jq:{title:"JQ",owner:"RunDevelopment"},jsdoc:{title:"JSDoc",require:["javascript","javadoclike","typescript"],modify:"javascript",optional:["actionscript","coffeescript"],owner:"RunDevelopment"},"js-extras":{title:"JS Extras",require:"javascript",modify:"javascript",optional:["actionscript","coffeescript","flow","n4js","typescript"],owner:"RunDevelopment"},json:{title:"JSON",alias:"webmanifest",aliasTitles:{webmanifest:"Web App Manifest"},owner:"CupOfTea696"},json5:{title:"JSON5",require:"json",owner:"RunDevelopment"},jsonp:{title:"JSONP",require:"json",owner:"RunDevelopment"},jsstacktrace:{title:"JS stack trace",owner:"sbrl"},"js-templates":{title:"JS Templates",require:"javascript",modify:"javascript",optional:["css","css-extras","graphql","markdown","markup","sql"],owner:"RunDevelopment"},julia:{title:"Julia",owner:"cdagnino"},keepalived:{title:"Keepalived Configure",owner:"dev-itsheng"},keyman:{title:"Keyman",owner:"mcdurdin"},kotlin:{title:"Kotlin",alias:["kt","kts"],aliasTitles:{kts:"Kotlin Script"},require:"clike",owner:"Golmote"},kumir:{title:"KuMir (\u041a\u0443\u041c\u0438\u0440)",alias:"kum",owner:"edukisto"},kusto:{title:"Kusto",owner:"RunDevelopment"},latex:{title:"LaTeX",alias:["tex","context"],aliasTitles:{tex:"TeX",context:"ConTeXt"},owner:"japborst"},latte:{title:"Latte",require:["clike","markup-templating","php"],owner:"nette"},less:{title:"Less",require:"css",optional:"css-extras",owner:"Golmote"},lilypond:{title:"LilyPond",require:"scheme",alias:"ly",owner:"RunDevelopment"},liquid:{title:"Liquid",require:"markup-templating",owner:"cinhtau"},lisp:{title:"Lisp",alias:["emacs","elisp","emacs-lisp"],owner:"JuanCaicedo"},livescript:{title:"LiveScript",owner:"Golmote"},llvm:{title:"LLVM IR",owner:"porglezomp"},log:{title:"Log file",optional:"javastacktrace",owner:"RunDevelopment"},lolcode:{title:"LOLCODE",owner:"Golmote"},lua:{title:"Lua",owner:"Golmote"},magma:{title:"Magma (CAS)",owner:"RunDevelopment"},makefile:{title:"Makefile",owner:"Golmote"},markdown:{title:"Markdown",require:"markup",optional:"yaml",alias:"md",owner:"Golmote"},"markup-templating":{title:"Markup templating",require:"markup",owner:"Golmote"},mata:{title:"Mata",owner:"RunDevelopment"},matlab:{title:"MATLAB",owner:"Golmote"},maxscript:{title:"MAXScript",owner:"RunDevelopment"},mel:{title:"MEL",owner:"Golmote"},mermaid:{title:"Mermaid",owner:"RunDevelopment"},mizar:{title:"Mizar",owner:"Golmote"},mongodb:{title:"MongoDB",owner:"airs0urce",require:"javascript"},monkey:{title:"Monkey",owner:"Golmote"},moonscript:{title:"MoonScript",alias:"moon",owner:"RunDevelopment"},n1ql:{title:"N1QL",owner:"TMWilds"},n4js:{title:"N4JS",require:"javascript",optional:"jsdoc",alias:"n4jsd",owner:"bsmith-n4"},"nand2tetris-hdl":{title:"Nand To Tetris HDL",owner:"stephanmax"},naniscript:{title:"Naninovel Script",owner:"Elringus",alias:"nani"},nasm:{title:"NASM",owner:"rbmj"},neon:{title:"NEON",owner:"nette"},nevod:{title:"Nevod",owner:"nezaboodka"},nginx:{title:"nginx",owner:"volado"},nim:{title:"Nim",owner:"Golmote"},nix:{title:"Nix",owner:"Golmote"},nsis:{title:"NSIS",owner:"idleberg"},objectivec:{title:"Objective-C",require:"c",alias:"objc",owner:"uranusjr"},ocaml:{title:"OCaml",owner:"Golmote"},odin:{title:"Odin",owner:"edukisto"},opencl:{title:"OpenCL",require:"c",modify:["c","cpp"],owner:"Milania1"},openqasm:{title:"OpenQasm",alias:"qasm",owner:"RunDevelopment"},oz:{title:"Oz",owner:"Golmote"},parigp:{title:"PARI/GP",owner:"Golmote"},parser:{title:"Parser",require:"markup",owner:"Golmote"},pascal:{title:"Pascal",alias:"objectpascal",aliasTitles:{objectpascal:"Object Pascal"},owner:"Golmote"},pascaligo:{title:"Pascaligo",owner:"DefinitelyNotAGoat"},psl:{title:"PATROL Scripting Language",owner:"bertysentry"},pcaxis:{title:"PC-Axis",alias:"px",owner:"RunDevelopment"},peoplecode:{title:"PeopleCode",alias:"pcode",owner:"RunDevelopment"},perl:{title:"Perl",owner:"Golmote"},php:{title:"PHP",require:"markup-templating",owner:"milesj"},phpdoc:{title:"PHPDoc",require:["php","javadoclike"],modify:"php",owner:"RunDevelopment"},"php-extras":{title:"PHP Extras",require:"php",modify:"php",owner:"milesj"},"plant-uml":{title:"PlantUML",alias:"plantuml",owner:"RunDevelopment"},plsql:{title:"PL/SQL",require:"sql",owner:"Golmote"},powerquery:{title:"PowerQuery",alias:["pq","mscript"],owner:"peterbud"},powershell:{title:"PowerShell",owner:"nauzilus"},processing:{title:"Processing",require:"clike",owner:"Golmote"},prolog:{title:"Prolog",owner:"Golmote"},promql:{title:"PromQL",owner:"arendjr"},properties:{title:".properties",owner:"Golmote"},protobuf:{title:"Protocol Buffers",require:"clike",owner:"just-boris"},pug:{title:"Pug",require:["markup","javascript"],optional:["coffeescript","ejs","handlebars","less","livescript","markdown","scss","stylus","twig"],owner:"Golmote"},puppet:{title:"Puppet",owner:"Golmote"},pure:{title:"Pure",optional:["c","cpp","fortran"],owner:"Golmote"},purebasic:{title:"PureBasic",require:"clike",alias:"pbfasm",owner:"HeX0R101"},purescript:{title:"PureScript",require:"haskell",alias:"purs",owner:"sriharshachilakapati"},python:{title:"Python",alias:"py",owner:"multipetros"},qsharp:{title:"Q#",require:"clike",alias:"qs",owner:"fedonman"},q:{title:"Q (kdb+ database)",owner:"Golmote"},qml:{title:"QML",require:"javascript",owner:"RunDevelopment"},qore:{title:"Qore",require:"clike",owner:"temnroegg"},r:{title:"R",owner:"Golmote"},racket:{title:"Racket",require:"scheme",alias:"rkt",owner:"RunDevelopment"},cshtml:{title:"Razor C#",alias:"razor",require:["markup","csharp"],optional:["css","css-extras","javascript","js-extras"],owner:"RunDevelopment"},jsx:{title:"React JSX",require:["markup","javascript"],optional:["jsdoc","js-extras","js-templates"],owner:"vkbansal"},tsx:{title:"React TSX",require:["jsx","typescript"]},reason:{title:"Reason",require:"clike",owner:"Golmote"},regex:{title:"Regex",owner:"RunDevelopment"},rego:{title:"Rego",owner:"JordanSh"},renpy:{title:"Ren'py",alias:"rpy",owner:"HyuchiaDiego"},rescript:{title:"ReScript",alias:"res",owner:"vmarcosp"},rest:{title:"reST (reStructuredText)",owner:"Golmote"},rip:{title:"Rip",owner:"ravinggenius"},roboconf:{title:"Roboconf",owner:"Golmote"},robotframework:{title:"Robot Framework",alias:"robot",owner:"RunDevelopment"},ruby:{title:"Ruby",require:"clike",alias:"rb",owner:"samflores"},rust:{title:"Rust",owner:"Golmote"},sas:{title:"SAS",optional:["groovy","lua","sql"],owner:"Golmote"},sass:{title:"Sass (Sass)",require:"css",optional:"css-extras",owner:"Golmote"},scss:{title:"Sass (Scss)",require:"css",optional:"css-extras",owner:"MoOx"},scala:{title:"Scala",require:"java",owner:"jozic"},scheme:{title:"Scheme",owner:"bacchus123"},"shell-session":{title:"Shell session",require:"bash",alias:["sh-session","shellsession"],owner:"RunDevelopment"},smali:{title:"Smali",owner:"RunDevelopment"},smalltalk:{title:"Smalltalk",owner:"Golmote"},smarty:{title:"Smarty",require:"markup-templating",optional:"php",owner:"Golmote"},sml:{title:"SML",alias:"smlnj",aliasTitles:{smlnj:"SML/NJ"},owner:"RunDevelopment"},solidity:{title:"Solidity (Ethereum)",alias:"sol",require:"clike",owner:"glachaud"},"solution-file":{title:"Solution file",alias:"sln",owner:"RunDevelopment"},soy:{title:"Soy (Closure Template)",require:"markup-templating",owner:"Golmote"},sparql:{title:"SPARQL",require:"turtle",owner:"Triply-Dev",alias:"rq"},"splunk-spl":{title:"Splunk SPL",owner:"RunDevelopment"},sqf:{title:"SQF: Status Quo Function (Arma 3)",require:"clike",owner:"RunDevelopment"},sql:{title:"SQL",owner:"multipetros"},squirrel:{title:"Squirrel",require:"clike",owner:"RunDevelopment"},stan:{title:"Stan",owner:"RunDevelopment"},stata:{title:"Stata Ado",require:["mata","java","python"],owner:"RunDevelopment"},iecst:{title:"Structured Text (IEC 61131-3)",owner:"serhioromano"},stylus:{title:"Stylus",owner:"vkbansal"},supercollider:{title:"SuperCollider",alias:"sclang",owner:"RunDevelopment"},swift:{title:"Swift",owner:"chrischares"},systemd:{title:"Systemd configuration file",owner:"RunDevelopment"},"t4-templating":{title:"T4 templating",owner:"RunDevelopment"},"t4-cs":{title:"T4 Text Templates (C#)",require:["t4-templating","csharp"],alias:"t4",owner:"RunDevelopment"},"t4-vb":{title:"T4 Text Templates (VB)",require:["t4-templating","vbnet"],owner:"RunDevelopment"},tap:{title:"TAP",owner:"isaacs",require:"yaml"},tcl:{title:"Tcl",owner:"PeterChaplin"},tt2:{title:"Template Toolkit 2",require:["clike","markup-templating"],owner:"gflohr"},textile:{title:"Textile",require:"markup",optional:"css",owner:"Golmote"},toml:{title:"TOML",owner:"RunDevelopment"},tremor:{title:"Tremor",alias:["trickle","troy"],owner:"darach",aliasTitles:{trickle:"trickle",troy:"troy"}},turtle:{title:"Turtle",alias:"trig",aliasTitles:{trig:"TriG"},owner:"jakubklimek"},twig:{title:"Twig",require:"markup-templating",owner:"brandonkelly"},typescript:{title:"TypeScript",require:"javascript",optional:"js-templates",alias:"ts",owner:"vkbansal"},typoscript:{title:"TypoScript",alias:"tsconfig",aliasTitles:{tsconfig:"TSConfig"},owner:"dkern"},unrealscript:{title:"UnrealScript",alias:["uscript","uc"],owner:"RunDevelopment"},uorazor:{title:"UO Razor Script",owner:"jaseowns"},uri:{title:"URI",alias:"url",aliasTitles:{url:"URL"},owner:"RunDevelopment"},v:{title:"V",require:"clike",owner:"taggon"},vala:{title:"Vala",require:"clike",optional:"regex",owner:"TemplarVolk"},vbnet:{title:"VB.Net",require:"basic",owner:"Bigsby"},velocity:{title:"Velocity",require:"markup",owner:"Golmote"},verilog:{title:"Verilog",owner:"a-rey"},vhdl:{title:"VHDL",owner:"a-rey"},vim:{title:"vim",owner:"westonganger"},"visual-basic":{title:"Visual Basic",alias:["vb","vba"],aliasTitles:{vba:"VBA"},owner:"Golmote"},warpscript:{title:"WarpScript",owner:"RunDevelopment"},wasm:{title:"WebAssembly",owner:"Golmote"},"web-idl":{title:"Web IDL",alias:"webidl",owner:"RunDevelopment"},wiki:{title:"Wiki markup",require:"markup",owner:"Golmote"},wolfram:{title:"Wolfram language",alias:["mathematica","nb","wl"],aliasTitles:{mathematica:"Mathematica",nb:"Mathematica Notebook"},owner:"msollami"},wren:{title:"Wren",owner:"clsource"},xeora:{title:"Xeora",require:"markup",alias:"xeoracube",aliasTitles:{xeoracube:"XeoraCube"},owner:"freakmaxi"},"xml-doc":{title:"XML doc (.net)",require:"markup",modify:["csharp","fsharp","vbnet"],owner:"RunDevelopment"},xojo:{title:"Xojo (REALbasic)",owner:"Golmote"},xquery:{title:"XQuery",require:"markup",owner:"Golmote"},yaml:{title:"YAML",alias:"yml",owner:"hason"},yang:{title:"YANG",owner:"RunDevelopment"},zig:{title:"Zig",owner:"RunDevelopment"}},plugins:{meta:{path:"plugins/{id}/prism-{id}",link:"plugins/{id}/"},"line-highlight":{title:"Line Highlight",description:"Highlights specific lines and/or line ranges."},"line-numbers":{title:"Line Numbers",description:"Line number at the beginning of code lines.",owner:"kuba-kubula"},"show-invisibles":{title:"Show Invisibles",description:"Show hidden characters such as tabs and line breaks.",optional:["autolinker","data-uri-highlight"]},autolinker:{title:"Autolinker",description:"Converts URLs and emails in code to clickable links. Parses Markdown links in comments."},wpd:{title:"WebPlatform Docs",description:'Makes tokens link to <a href="https://webplatform.github.io/docs/">WebPlatform.org documentation</a>. The links open in a new tab.'},"custom-class":{title:"Custom Class",description:"This plugin allows you to prefix Prism's default classes (<code>.comment</code> can become <code>.namespace--comment</code>) or replace them with your defined ones (like <code>.editor__comment</code>). You can even add new classes.",owner:"dvkndn",noCSS:!0},"file-highlight":{title:"File Highlight",description:"Fetch external files and highlight them with Prism. Used on the Prism website itself.",noCSS:!0},"show-language":{title:"Show Language",description:"Display the highlighted language in code blocks (inline code does not show the label).",owner:"nauzilus",noCSS:!0,require:"toolbar"},"jsonp-highlight":{title:"JSONP Highlight",description:"Fetch content with JSONP and highlight some interesting content (e.g. GitHub/Gists or Bitbucket API).",noCSS:!0,owner:"nauzilus"},"highlight-keywords":{title:"Highlight Keywords",description:"Adds special CSS classes for each keyword for fine-grained highlighting.",owner:"vkbansal",noCSS:!0},"remove-initial-line-feed":{title:"Remove initial line feed",description:"Removes the initial line feed in code blocks.",owner:"Golmote",noCSS:!0},"inline-color":{title:"Inline color",description:"Adds a small inline preview for colors in style sheets.",require:"css-extras",owner:"RunDevelopment"},previewers:{title:"Previewers",description:"Previewers for angles, colors, gradients, easing and time.",require:"css-extras",owner:"Golmote"},autoloader:{title:"Autoloader",description:"Automatically loads the needed languages to highlight the code blocks.",owner:"Golmote",noCSS:!0},"keep-markup":{title:"Keep Markup",description:"Prevents custom markup from being dropped out during highlighting.",owner:"Golmote",optional:"normalize-whitespace",noCSS:!0},"command-line":{title:"Command Line",description:"Display a command line with a prompt and, optionally, the output/response from the commands.",owner:"chriswells0"},"unescaped-markup":{title:"Unescaped Markup",description:"Write markup without having to escape anything."},"normalize-whitespace":{title:"Normalize Whitespace",description:"Supports multiple operations to normalize whitespace in code blocks.",owner:"zeitgeist87",optional:"unescaped-markup",noCSS:!0},"data-uri-highlight":{title:"Data-URI Highlight",description:"Highlights data-URI contents.",owner:"Golmote",noCSS:!0},toolbar:{title:"Toolbar",description:"Attach a toolbar for plugins to easily register buttons on the top of a code block.",owner:"mAAdhaTTah"},"copy-to-clipboard":{title:"Copy to Clipboard Button",description:"Add a button that copies the code block to the clipboard when clicked.",owner:"mAAdhaTTah",require:"toolbar",noCSS:!0},"download-button":{title:"Download Button",description:"A button in the toolbar of a code block adding a convenient way to download a code file.",owner:"Golmote",require:"toolbar",noCSS:!0},"match-braces":{title:"Match braces",description:"Highlights matching braces.",owner:"RunDevelopment"},"diff-highlight":{title:"Diff Highlight",description:"Highlights the code inside diff blocks.",owner:"RunDevelopment",require:"diff"},"filter-highlight-all":{title:"Filter highlightAll",description:"Filters the elements the <code>highlightAll</code> and <code>highlightAllUnder</code> methods actually highlight.",owner:"RunDevelopment",noCSS:!0},treeview:{title:"Treeview",description:"A language with special styles to highlight file system tree structures.",owner:"Golmote"}}})},2885:function(e,n,t){const r=t(9901),_=t(9642),E=new Set;function a(e){void 0===e?e=Object.keys(r.languages).filter((e=>"meta"!=e)):Array.isArray(e)||(e=[e]);const n=[...E,...Object.keys(Prism.languages)];_(r,e,n).load((e=>{if(!(e in r.languages))return void(a.silent||console.warn("Language does not exist: "+e));const n="./prism-"+e;delete t.c[t(6500).resolve(n)],delete Prism.languages[e],t(6500)(n),E.add(e)}))}a.silent=!1,e.exports=a},6726:function(e,n,t){var r={"./":2885};function _(e){var n=E(e);return t(n)}function E(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}_.keys=function(){return Object.keys(r)},_.resolve=E,e.exports=_,_.id=6726},6500:function(e,n,t){var r={"./":2885};function _(e){var n=E(e);return t(n)}function E(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}_.keys=function(){return Object.keys(r)},_.resolve=E,e.exports=_,_.id=6500},9642:function(e){"use strict";var n=function(){var e=function(){};function n(e,n){Array.isArray(e)?e.forEach(n):null!=e&&n(e,0)}function t(e){for(var n={},t=0,r=e.length;t<r;t++)n[e[t]]=!0;return n}function r(e){var t={},r=[];function _(r,E){if(!(r in t)){E.push(r);var a=E.indexOf(r);if(a<E.length-1)throw new Error("Circular dependency: "+E.slice(a).join(" -> "));var i={},T=e[r];if(T){function s(n){if(!(n in e))throw new Error(r+" depends on an unknown component "+n);if(!(n in i))for(var a in _(n,E),i[n]=!0,t[n])i[a]=!0}n(T.require,s),n(T.optional,s),n(T.modify,s)}t[r]=i,E.pop()}}return function(e){var n=t[e];return n||(_(e,r),n=t[e]),n}}function _(e){for(var n in e)return!0;return!1}return function(E,a,i){var T=function(e){var n={};for(var t in e){var r=e[t];for(var _ in r)if("meta"!=_){var E=r[_];n[_]="string"==typeof E?{title:E}:E}}return n}(E),s=function(e){var t;return function(r){if(r in e)return r;if(!t)for(var _ in t={},e){var E=e[_];n(E&&E.alias,(function(n){if(n in t)throw new Error(n+" cannot be alias for both "+_+" and "+t[n]);if(n in e)throw new Error(n+" cannot be alias of "+_+" because it is a component.");t[n]=_}))}return t[r]||r}}(T);a=a.map(s),i=(i||[]).map(s);var o=t(a),d=t(i);a.forEach((function e(t){var r=T[t];n(r&&r.require,(function(n){n in d||(o[n]=!0,e(n))}))}));for(var I,N=r(T),O=o;_(O);){for(var R in I={},O){var u=T[R];n(u&&u.modify,(function(e){e in d&&(I[e]=!0)}))}for(var A in d)if(!(A in o))for(var D in N(A))if(D in o){I[A]=!0;break}for(var S in O=I)o[S]=!0}var l={getIds:function(){var e=[];return l.load((function(n){e.push(n)})),e},load:function(n,t){return function(n,t,r,_){var E=_?_.series:void 0,a=_?_.parallel:e,i={},T={};function s(e){if(e in i)return i[e];T[e]=!0;var _,o=[];for(var d in n(e))d in t&&o.push(d);if(0===o.length)_=r(e);else{var I=a(o.map((function(e){var n=s(e);return delete T[e],n})));E?_=E(I,(function(){return r(e)})):r(e)}return i[e]=_}for(var o in t)s(o);var d=[];for(var I in T)d.push(i[I]);return a(d)}(N,o,n,t)}};return l}}();e.exports=n},2703:function(e,n,t){"use strict";var r=t(414);function _(){}function E(){}E.resetWarningCache=_,e.exports=function(){function e(e,n,t,_,E,a){if(a!==r){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function n(){return e}e.isRequired=e;var t={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:n,element:e,elementType:e,instanceOf:n,node:e,objectOf:n,oneOf:n,oneOfType:n,shape:n,exact:n,checkPropTypes:E,resetWarningCache:_};return t.PropTypes=t,t}},5697:function(e,n,t){e.exports=t(2703)()},414:function(e){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},4448:function(e,n,t){"use strict";var r=t(7294),_=t(7418),E=t(3840);function a(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(a(227));var i=new Set,T={};function s(e,n){o(e,n),o(e+"Capture",n)}function o(e,n){for(T[e]=n,e=0;e<n.length;e++)i.add(n[e])}var d=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),I=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,N=Object.prototype.hasOwnProperty,O={},R={};function u(e,n,t,r,_,E,a){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=_,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=E,this.removeEmptyString=a}var A={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){A[e]=new u(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var n=e[0];A[n]=new u(n,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){A[e]=new u(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){A[e]=new u(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){A[e]=new u(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){A[e]=new u(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){A[e]=new u(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){A[e]=new u(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){A[e]=new u(e,5,!1,e.toLowerCase(),null,!1,!1)}));var D=/[\-:]([a-z])/g;function S(e){return e[1].toUpperCase()}function l(e,n,t,r){var _=A.hasOwnProperty(n)?A[n]:null;(null!==_?0===_.type:!r&&(2<n.length&&("o"===n[0]||"O"===n[0])&&("n"===n[1]||"N"===n[1])))||(function(e,n,t,r){if(null==n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,_,r)&&(t=null),r||null===_?function(e){return!!N.call(R,e)||!N.call(O,e)&&(I.test(e)?R[e]=!0:(O[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):_.mustUseProperty?e[_.propertyName]=null===t?3!==_.type&&"":t:(n=_.attributeName,r=_.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(_=_.type)||4===_&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var n=e.replace(D,S);A[n]=new u(n,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var n=e.replace(D,S);A[n]=new u(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var n=e.replace(D,S);A[n]=new u(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){A[e]=new u(e,1,!1,e.toLowerCase(),null,!1,!1)})),A.xlinkHref=new u("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){A[e]=new u(e,1,!1,e.toLowerCase(),null,!0,!0)}));var h=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,C=60103,P=60106,U=60107,c=60108,p=60114,L=60109,f=60110,F=60112,M=60113,m=60120,w=60115,b=60116,X=60121,g=60128,v=60129,V=60130,B=60131;if("function"==typeof Symbol&&Symbol.for){var y=Symbol.for;C=y("react.element"),P=y("react.portal"),U=y("react.fragment"),c=y("react.strict_mode"),p=y("react.profiler"),L=y("react.provider"),f=y("react.context"),F=y("react.forward_ref"),M=y("react.suspense"),m=y("react.suspense_list"),w=y("react.memo"),b=y("react.lazy"),X=y("react.block"),y("react.scope"),g=y("react.opaque.id"),v=y("react.debug_trace_mode"),V=y("react.offscreen"),B=y("react.legacy_hidden")}var Y,K="function"==typeof Symbol&&Symbol.iterator;function G(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=K&&e[K]||e["@@iterator"])?e:null}function q(e){if(void 0===Y)try{throw Error()}catch(t){var n=t.stack.trim().match(/\n( *(at )?)/);Y=n&&n[1]||""}return"\n"+Y+e}var k=!1;function x(e,n){if(!e||k)return"";k=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(T){var r=T}Reflect.construct(e,[],n)}else{try{n.call()}catch(T){r=T}e.call(n.prototype)}else{try{throw Error()}catch(T){r=T}e()}}catch(T){if(T&&r&&"string"==typeof T.stack){for(var _=T.stack.split("\n"),E=r.stack.split("\n"),a=_.length-1,i=E.length-1;1<=a&&0<=i&&_[a]!==E[i];)i--;for(;1<=a&&0<=i;a--,i--)if(_[a]!==E[i]){if(1!==a||1!==i)do{if(a--,0>--i||_[a]!==E[i])return"\n"+_[a].replace(" at new "," at ")}while(1<=a&&0<=i);break}}}finally{k=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?q(e):""}function H(e){switch(e.tag){case 5:return q(e.type);case 16:return q("Lazy");case 13:return q("Suspense");case 19:return q("SuspenseList");case 0:case 2:case 15:return e=x(e.type,!1);case 11:return e=x(e.type.render,!1);case 22:return e=x(e.type._render,!1);case 1:return e=x(e.type,!0);default:return""}}function Q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case U:return"Fragment";case P:return"Portal";case p:return"Profiler";case c:return"StrictMode";case M:return"Suspense";case m:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case f:return(e.displayName||"Context")+".Consumer";case L:return(e._context.displayName||"Context")+".Provider";case F:var n=e.render;return n=n.displayName||n.name||"",e.displayName||(""!==n?"ForwardRef("+n+")":"ForwardRef");case w:return Q(e.type);case X:return Q(e._render);case b:n=e._payload,e=e._init;try{return Q(e(n))}catch(t){}}return null}function W(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function j(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function Z(e){e._valueTracker||(e._valueTracker=function(e){var n=j(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var _=t.get,E=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return _.call(this)},set:function(e){r=""+e,E.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function z(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=j(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function $(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function J(e,n){var t=n.checked;return _({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function ee(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=W(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function ne(e,n){null!=(n=n.checked)&&l(e,"checked",n,!1)}function te(e,n){ne(e,n);var t=W(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?_e(e,n.type,t):n.hasOwnProperty("defaultValue")&&_e(e,n.type,W(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function re(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function _e(e,n,t){"number"===n&&$(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}function Ee(e,n){return e=_({children:void 0},n),(n=function(e){var n="";return r.Children.forEach(e,(function(e){null!=e&&(n+=e)})),n}(n.children))&&(e.children=n),e}function ae(e,n,t,r){if(e=e.options,n){n={};for(var _=0;_<t.length;_++)n["$"+t[_]]=!0;for(t=0;t<e.length;t++)_=n.hasOwnProperty("$"+e[t].value),e[t].selected!==_&&(e[t].selected=_),_&&r&&(e[t].defaultSelected=!0)}else{for(t=""+W(t),n=null,_=0;_<e.length;_++){if(e[_].value===t)return e[_].selected=!0,void(r&&(e[_].defaultSelected=!0));null!==n||e[_].disabled||(n=e[_])}null!==n&&(n.selected=!0)}}function ie(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(a(91));return _({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Te(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(a(92));if(Array.isArray(t)){if(!(1>=t.length))throw Error(a(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:W(t)}}function se(e,n){var t=W(n.value),r=W(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function oe(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}var de="http://www.w3.org/1999/xhtml",Ie="http://www.w3.org/2000/svg";function Ne(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Oe(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?Ne(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var Re,ue,Ae=(ue=function(e,n){if(e.namespaceURI!==Ie||"innerHTML"in e)e.innerHTML=n;else{for((Re=Re||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=Re.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,r){MSApp.execUnsafeLocalFunction((function(){return ue(e,n)}))}:ue);function De(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var Se={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},le=["Webkit","ms","Moz","O"];function he(e,n,t){return null==n||"boolean"==typeof n||""===n?"":t||"number"!=typeof n||0===n||Se.hasOwnProperty(e)&&Se[e]?(""+n).trim():n+"px"}function Ce(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),_=he(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,_):e[t]=_}}Object.keys(Se).forEach((function(e){le.forEach((function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),Se[n]=Se[e]}))}));var Pe=_({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Ue(e,n){if(n){if(Pe[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(a(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(a(62))}}function ce(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function pe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Le=null,fe=null,Fe=null;function Me(e){if(e=r_(e)){if("function"!=typeof Le)throw Error(a(280));var n=e.stateNode;n&&(n=E_(n),Le(e.stateNode,e.type,n))}}function me(e){fe?Fe?Fe.push(e):Fe=[e]:fe=e}function we(){if(fe){var e=fe,n=Fe;if(Fe=fe=null,Me(e),n)for(e=0;e<n.length;e++)Me(n[e])}}function be(e,n){return e(n)}function Xe(e,n,t,r,_){return e(n,t,r,_)}function ge(){}var ve=be,Ve=!1,Be=!1;function ye(){null===fe&&null===Fe||(ge(),we())}function Ye(e,n){var t=e.stateNode;if(null===t)return null;var r=E_(t);if(null===r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(a(231,n,typeof t));return t}var Ke=!1;if(d)try{var Ge={};Object.defineProperty(Ge,"passive",{get:function(){Ke=!0}}),window.addEventListener("test",Ge,Ge),window.removeEventListener("test",Ge,Ge)}catch(ue){Ke=!1}function qe(e,n,t,r,_,E,a,i,T){var s=Array.prototype.slice.call(arguments,3);try{n.apply(t,s)}catch(o){this.onError(o)}}var ke=!1,xe=null,He=!1,Qe=null,We={onError:function(e){ke=!0,xe=e}};function je(e,n,t,r,_,E,a,i,T){ke=!1,xe=null,qe.apply(We,arguments)}function Ze(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!=(1026&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function ze(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&(null!==(e=e.alternate)&&(n=e.memoizedState)),null!==n)return n.dehydrated}return null}function $e(e){if(Ze(e)!==e)throw Error(a(188))}function Je(e){if(e=function(e){var n=e.alternate;if(!n){if(null===(n=Ze(e)))throw Error(a(188));return n!==e?null:e}for(var t=e,r=n;;){var _=t.return;if(null===_)break;var E=_.alternate;if(null===E){if(null!==(r=_.return)){t=r;continue}break}if(_.child===E.child){for(E=_.child;E;){if(E===t)return $e(_),e;if(E===r)return $e(_),n;E=E.sibling}throw Error(a(188))}if(t.return!==r.return)t=_,r=E;else{for(var i=!1,T=_.child;T;){if(T===t){i=!0,t=_,r=E;break}if(T===r){i=!0,r=_,t=E;break}T=T.sibling}if(!i){for(T=E.child;T;){if(T===t){i=!0,t=E,r=_;break}if(T===r){i=!0,r=E,t=_;break}T=T.sibling}if(!i)throw Error(a(189))}}if(t.alternate!==r)throw Error(a(190))}if(3!==t.tag)throw Error(a(188));return t.stateNode.current===t?e:n}(e),!e)return null;for(var n=e;;){if(5===n.tag||6===n.tag)return n;if(n.child)n.child.return=n,n=n.child;else{if(n===e)break;for(;!n.sibling;){if(!n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}}return null}function en(e,n){for(var t=e.alternate;null!==n;){if(n===e||n===t)return!0;n=n.return}return!1}var nn,tn,rn,_n,En=!1,an=[],Tn=null,sn=null,on=null,dn=new Map,In=new Map,Nn=[],On="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Rn(e,n,t,r,_){return{blockedOn:e,domEventName:n,eventSystemFlags:16|t,nativeEvent:_,targetContainers:[r]}}function un(e,n){switch(e){case"focusin":case"focusout":Tn=null;break;case"dragenter":case"dragleave":sn=null;break;case"mouseover":case"mouseout":on=null;break;case"pointerover":case"pointerout":dn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":In.delete(n.pointerId)}}function An(e,n,t,r,_,E){return null===e||e.nativeEvent!==E?(e=Rn(n,t,r,_,E),null!==n&&(null!==(n=r_(n))&&tn(n)),e):(e.eventSystemFlags|=r,n=e.targetContainers,null!==_&&-1===n.indexOf(_)&&n.push(_),e)}function Dn(e){var n=t_(e.target);if(null!==n){var t=Ze(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=ze(t)))return e.blockedOn=n,void _n(e.lanePriority,(function(){E.unstable_runWithPriority(e.priority,(function(){rn(t)}))}))}else if(3===n&&t.stateNode.hydrate)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function Sn(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=et(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t)return null!==(n=r_(t))&&tn(n),e.blockedOn=t,!1;n.shift()}return!0}function ln(e,n,t){Sn(e)&&t.delete(n)}function hn(){for(En=!1;0<an.length;){var e=an[0];if(null!==e.blockedOn){null!==(e=r_(e.blockedOn))&&nn(e);break}for(var n=e.targetContainers;0<n.length;){var t=et(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t){e.blockedOn=t;break}n.shift()}null===e.blockedOn&&an.shift()}null!==Tn&&Sn(Tn)&&(Tn=null),null!==sn&&Sn(sn)&&(sn=null),null!==on&&Sn(on)&&(on=null),dn.forEach(ln),In.forEach(ln)}function Cn(e,n){e.blockedOn===n&&(e.blockedOn=null,En||(En=!0,E.unstable_scheduleCallback(E.unstable_NormalPriority,hn)))}function Pn(e){function n(n){return Cn(n,e)}if(0<an.length){Cn(an[0],e);for(var t=1;t<an.length;t++){var r=an[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Tn&&Cn(Tn,e),null!==sn&&Cn(sn,e),null!==on&&Cn(on,e),dn.forEach(n),In.forEach(n),t=0;t<Nn.length;t++)(r=Nn[t]).blockedOn===e&&(r.blockedOn=null);for(;0<Nn.length&&null===(t=Nn[0]).blockedOn;)Dn(t),null===t.blockedOn&&Nn.shift()}function Un(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var cn={animationend:Un("Animation","AnimationEnd"),animationiteration:Un("Animation","AnimationIteration"),animationstart:Un("Animation","AnimationStart"),transitionend:Un("Transition","TransitionEnd")},pn={},Ln={};function fn(e){if(pn[e])return pn[e];if(!cn[e])return e;var n,t=cn[e];for(n in t)if(t.hasOwnProperty(n)&&n in Ln)return pn[e]=t[n];return e}d&&(Ln=document.createElement("div").style,"AnimationEvent"in window||(delete cn.animationend.animation,delete cn.animationiteration.animation,delete cn.animationstart.animation),"TransitionEvent"in window||delete cn.transitionend.transition);var Fn=fn("animationend"),Mn=fn("animationiteration"),mn=fn("animationstart"),wn=fn("transitionend"),bn=new Map,Xn=new Map,gn=["abort","abort",Fn,"animationEnd",Mn,"animationIteration",mn,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",wn,"transitionEnd","waiting","waiting"];function vn(e,n){for(var t=0;t<e.length;t+=2){var r=e[t],_=e[t+1];_="on"+(_[0].toUpperCase()+_.slice(1)),Xn.set(r,n),bn.set(r,_),s(_,[r])}}(0,E.unstable_now)();var Vn=8;function Bn(e){if(0!=(1&e))return Vn=15,1;if(0!=(2&e))return Vn=14,2;if(0!=(4&e))return Vn=13,4;var n=24&e;return 0!==n?(Vn=12,n):0!=(32&e)?(Vn=11,32):0!==(n=192&e)?(Vn=10,n):0!=(256&e)?(Vn=9,256):0!==(n=3584&e)?(Vn=8,n):0!=(4096&e)?(Vn=7,4096):0!==(n=4186112&e)?(Vn=6,n):0!==(n=62914560&e)?(Vn=5,n):67108864&e?(Vn=4,67108864):0!=(134217728&e)?(Vn=3,134217728):0!==(n=805306368&e)?(Vn=2,n):0!=(1073741824&e)?(Vn=1,1073741824):(Vn=8,e)}function yn(e,n){var t=e.pendingLanes;if(0===t)return Vn=0;var r=0,_=0,E=e.expiredLanes,a=e.suspendedLanes,i=e.pingedLanes;if(0!==E)r=E,_=Vn=15;else if(0!==(E=134217727&t)){var T=E&~a;0!==T?(r=Bn(T),_=Vn):0!==(i&=E)&&(r=Bn(i),_=Vn)}else 0!==(E=t&~a)?(r=Bn(E),_=Vn):0!==i&&(r=Bn(i),_=Vn);if(0===r)return 0;if(r=t&((0>(r=31-xn(r))?0:1<<r)<<1)-1,0!==n&&n!==r&&0==(n&a)){if(Bn(n),_<=Vn)return n;Vn=_}if(0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)_=1<<(t=31-xn(n)),r|=e[t],n&=~_;return r}function Yn(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Kn(e,n){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Gn(24&~n))?Kn(10,n):e;case 10:return 0===(e=Gn(192&~n))?Kn(8,n):e;case 8:return 0===(e=Gn(3584&~n))&&(0===(e=Gn(4186112&~n))&&(e=512)),e;case 2:return 0===(n=Gn(805306368&~n))&&(n=268435456),n}throw Error(a(358,e))}function Gn(e){return e&-e}function qn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function kn(e,n,t){e.pendingLanes|=n;var r=n-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[n=31-xn(n)]=t}var xn=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Hn(e)/Qn|0)|0},Hn=Math.log,Qn=Math.LN2;var Wn=E.unstable_UserBlockingPriority,jn=E.unstable_runWithPriority,Zn=!0;function zn(e,n,t,r){Ve||ge();var _=Jn,E=Ve;Ve=!0;try{Xe(_,e,n,t,r)}finally{(Ve=E)||ye()}}function $n(e,n,t,r){jn(Wn,Jn.bind(null,e,n,t,r))}function Jn(e,n,t,r){var _;if(Zn)if((_=0==(4&n))&&0<an.length&&-1<On.indexOf(e))e=Rn(null,e,n,t,r),an.push(e);else{var E=et(e,n,t,r);if(null===E)_&&un(e,r);else{if(_){if(-1<On.indexOf(e))return e=Rn(E,e,n,t,r),void an.push(e);if(function(e,n,t,r,_){switch(n){case"focusin":return Tn=An(Tn,e,n,t,r,_),!0;case"dragenter":return sn=An(sn,e,n,t,r,_),!0;case"mouseover":return on=An(on,e,n,t,r,_),!0;case"pointerover":var E=_.pointerId;return dn.set(E,An(dn.get(E)||null,e,n,t,r,_)),!0;case"gotpointercapture":return E=_.pointerId,In.set(E,An(In.get(E)||null,e,n,t,r,_)),!0}return!1}(E,e,n,t,r))return;un(e,r)}gr(e,n,r,null,t)}}}function et(e,n,t,r){var _=pe(r);if(null!==(_=t_(_))){var E=Ze(_);if(null===E)_=null;else{var a=E.tag;if(13===a){if(null!==(_=ze(E)))return _;_=null}else if(3===a){if(E.stateNode.hydrate)return 3===E.tag?E.stateNode.containerInfo:null;_=null}else E!==_&&(_=null)}}return gr(e,n,r,_,t),null}var nt=null,tt=null,rt=null;function _t(){if(rt)return rt;var e,n,t=tt,r=t.length,_="value"in nt?nt.value:nt.textContent,E=_.length;for(e=0;e<r&&t[e]===_[e];e++);var a=r-e;for(n=1;n<=a&&t[r-n]===_[E-n];n++);return rt=_.slice(e,1<n?1-n:void 0)}function Et(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function at(){return!0}function it(){return!1}function Tt(e){function n(n,t,r,_,E){for(var a in this._reactName=n,this._targetInst=r,this.type=t,this.nativeEvent=_,this.target=E,this.currentTarget=null,e)e.hasOwnProperty(a)&&(n=e[a],this[a]=n?n(_):_[a]);return this.isDefaultPrevented=(null!=_.defaultPrevented?_.defaultPrevented:!1===_.returnValue)?at:it,this.isPropagationStopped=it,this}return _(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=at)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=at)},persist:function(){},isPersistent:at}),n}var st,ot,dt,It={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Nt=Tt(It),Ot=_({},It,{view:0,detail:0}),Rt=Tt(Ot),ut=_({},Ot,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:ft,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==dt&&(dt&&"mousemove"===e.type?(st=e.screenX-dt.screenX,ot=e.screenY-dt.screenY):ot=st=0,dt=e),st)},movementY:function(e){return"movementY"in e?e.movementY:ot}}),At=Tt(ut),Dt=Tt(_({},ut,{dataTransfer:0})),St=Tt(_({},Ot,{relatedTarget:0})),lt=Tt(_({},It,{animationName:0,elapsedTime:0,pseudoElement:0})),ht=_({},It,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Ct=Tt(ht),Pt=Tt(_({},It,{data:0})),Ut={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},ct={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},pt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Lt(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=pt[e])&&!!n[e]}function ft(){return Lt}var Ft=_({},Ot,{key:function(e){if(e.key){var n=Ut[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=Et(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?ct[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:ft,charCode:function(e){return"keypress"===e.type?Et(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Et(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Mt=Tt(Ft),mt=Tt(_({},ut,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),wt=Tt(_({},Ot,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:ft})),bt=Tt(_({},It,{propertyName:0,elapsedTime:0,pseudoElement:0})),Xt=_({},ut,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),gt=Tt(Xt),vt=[9,13,27,32],Vt=d&&"CompositionEvent"in window,Bt=null;d&&"documentMode"in document&&(Bt=document.documentMode);var yt=d&&"TextEvent"in window&&!Bt,Yt=d&&(!Vt||Bt&&8<Bt&&11>=Bt),Kt=String.fromCharCode(32),Gt=!1;function qt(e,n){switch(e){case"keyup":return-1!==vt.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function kt(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var xt=!1;var Ht={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Qt(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!Ht[e.type]:"textarea"===n}function Wt(e,n,t,r){me(r),0<(n=Vr(n,"onChange")).length&&(t=new Nt("onChange","change",null,t,r),e.push({event:t,listeners:n}))}var jt=null,Zt=null;function zt(e){Fr(e,0)}function $t(e){if(z(__(e)))return e}function Jt(e,n){if("change"===e)return n}var er=!1;if(d){var nr;if(d){var tr="oninput"in document;if(!tr){var rr=document.createElement("div");rr.setAttribute("oninput","return;"),tr="function"==typeof rr.oninput}nr=tr}else nr=!1;er=nr&&(!document.documentMode||9<document.documentMode)}function _r(){jt&&(jt.detachEvent("onpropertychange",Er),Zt=jt=null)}function Er(e){if("value"===e.propertyName&&$t(Zt)){var n=[];if(Wt(n,Zt,e,pe(e)),e=zt,Ve)e(n);else{Ve=!0;try{be(e,n)}finally{Ve=!1,ye()}}}}function ar(e,n,t){"focusin"===e?(_r(),Zt=t,(jt=n).attachEvent("onpropertychange",Er)):"focusout"===e&&_r()}function ir(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return $t(Zt)}function Tr(e,n){if("click"===e)return $t(n)}function sr(e,n){if("input"===e||"change"===e)return $t(n)}var or="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n},dr=Object.prototype.hasOwnProperty;function Ir(e,n){if(or(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++)if(!dr.call(n,t[r])||!or(e[t[r]],n[t[r]]))return!1;return!0}function Nr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Or(e,n){var t,r=Nr(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Nr(r)}}function Rr(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?Rr(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function ur(){for(var e=window,n=$();n instanceof e.HTMLIFrameElement;){try{var t="string"==typeof n.contentWindow.location.href}catch(r){t=!1}if(!t)break;n=$((e=n.contentWindow).document)}return n}function Ar(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}var Dr=d&&"documentMode"in document&&11>=document.documentMode,Sr=null,lr=null,hr=null,Cr=!1;function Pr(e,n,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;Cr||null==Sr||Sr!==$(r)||("selectionStart"in(r=Sr)&&Ar(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},hr&&Ir(hr,r)||(hr=r,0<(r=Vr(lr,"onSelect")).length&&(n=new Nt("onSelect","select",null,n,t),e.push({event:n,listeners:r}),n.target=Sr)))}vn("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),vn("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),vn(gn,2);for(var Ur="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),cr=0;cr<Ur.length;cr++)Xn.set(Ur[cr],0);o("onMouseEnter",["mouseout","mouseover"]),o("onMouseLeave",["mouseout","mouseover"]),o("onPointerEnter",["pointerout","pointerover"]),o("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var pr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Lr=new Set("cancel close invalid load scroll toggle".split(" ").concat(pr));function fr(e,n,t){var r=e.type||"unknown-event";e.currentTarget=t,function(e,n,t,r,_,E,i,T,s){if(je.apply(this,arguments),ke){if(!ke)throw Error(a(198));var o=xe;ke=!1,xe=null,He||(He=!0,Qe=o)}}(r,n,void 0,e),e.currentTarget=null}function Fr(e,n){n=0!=(4&n);for(var t=0;t<e.length;t++){var r=e[t],_=r.event;r=r.listeners;e:{var E=void 0;if(n)for(var a=r.length-1;0<=a;a--){var i=r[a],T=i.instance,s=i.currentTarget;if(i=i.listener,T!==E&&_.isPropagationStopped())break e;fr(_,i,s),E=T}else for(a=0;a<r.length;a++){if(T=(i=r[a]).instance,s=i.currentTarget,i=i.listener,T!==E&&_.isPropagationStopped())break e;fr(_,i,s),E=T}}}if(He)throw e=Qe,He=!1,Qe=null,e}function Mr(e,n){var t=a_(n),r=e+"__bubble";t.has(r)||(Xr(n,e,2,!1),t.add(r))}var mr="_reactListening"+Math.random().toString(36).slice(2);function wr(e){e[mr]||(e[mr]=!0,i.forEach((function(n){Lr.has(n)||br(n,!1,e,null),br(n,!0,e,null)})))}function br(e,n,t,r){var _=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,E=t;if("selectionchange"===e&&9!==t.nodeType&&(E=t.ownerDocument),null!==r&&!n&&Lr.has(e)){if("scroll"!==e)return;_|=2,E=r}var a=a_(E),i=e+"__"+(n?"capture":"bubble");a.has(i)||(n&&(_|=4),Xr(E,e,_,n),a.add(i))}function Xr(e,n,t,r){var _=Xn.get(n);switch(void 0===_?2:_){case 0:_=zn;break;case 1:_=$n;break;default:_=Jn}t=_.bind(null,n,t,e),_=void 0,!Ke||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(_=!0),r?void 0!==_?e.addEventListener(n,t,{capture:!0,passive:_}):e.addEventListener(n,t,!0):void 0!==_?e.addEventListener(n,t,{passive:_}):e.addEventListener(n,t,!1)}function gr(e,n,t,r,_){var E=r;if(0==(1&n)&&0==(2&n)&&null!==r)e:for(;;){if(null===r)return;var a=r.tag;if(3===a||4===a){var i=r.stateNode.containerInfo;if(i===_||8===i.nodeType&&i.parentNode===_)break;if(4===a)for(a=r.return;null!==a;){var T=a.tag;if((3===T||4===T)&&((T=a.stateNode.containerInfo)===_||8===T.nodeType&&T.parentNode===_))return;a=a.return}for(;null!==i;){if(null===(a=t_(i)))return;if(5===(T=a.tag)||6===T){r=E=a;continue e}i=i.parentNode}}r=r.return}!function(e,n,t){if(Be)return e(n,t);Be=!0;try{ve(e,n,t)}finally{Be=!1,ye()}}((function(){var r=E,_=pe(t),a=[];e:{var i=bn.get(e);if(void 0!==i){var T=Nt,s=e;switch(e){case"keypress":if(0===Et(t))break e;case"keydown":case"keyup":T=Mt;break;case"focusin":s="focus",T=St;break;case"focusout":s="blur",T=St;break;case"beforeblur":case"afterblur":T=St;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":T=At;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":T=Dt;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":T=wt;break;case Fn:case Mn:case mn:T=lt;break;case wn:T=bt;break;case"scroll":T=Rt;break;case"wheel":T=gt;break;case"copy":case"cut":case"paste":T=Ct;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":T=mt}var o=0!=(4&n),d=!o&&"scroll"===e,I=o?null!==i?i+"Capture":null:i;o=[];for(var N,O=r;null!==O;){var R=(N=O).stateNode;if(5===N.tag&&null!==R&&(N=R,null!==I&&(null!=(R=Ye(O,I))&&o.push(vr(O,R,N)))),d)break;O=O.return}0<o.length&&(i=new T(i,s,null,t,_),a.push({event:i,listeners:o}))}}if(0==(7&n)){if(T="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||0!=(16&n)||!(s=t.relatedTarget||t.fromElement)||!t_(s)&&!s[e_])&&(T||i)&&(i=_.window===_?_:(i=_.ownerDocument)?i.defaultView||i.parentWindow:window,T?(T=r,null!==(s=(s=t.relatedTarget||t.toElement)?t_(s):null)&&(s!==(d=Ze(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(T=null,s=r),T!==s)){if(o=At,R="onMouseLeave",I="onMouseEnter",O="mouse","pointerout"!==e&&"pointerover"!==e||(o=mt,R="onPointerLeave",I="onPointerEnter",O="pointer"),d=null==T?i:__(T),N=null==s?i:__(s),(i=new o(R,O+"leave",T,t,_)).target=d,i.relatedTarget=N,R=null,t_(_)===r&&((o=new o(I,O+"enter",s,t,_)).target=N,o.relatedTarget=d,R=o),d=R,T&&s)e:{for(I=s,O=0,N=o=T;N;N=Br(N))O++;for(N=0,R=I;R;R=Br(R))N++;for(;0<O-N;)o=Br(o),O--;for(;0<N-O;)I=Br(I),N--;for(;O--;){if(o===I||null!==I&&o===I.alternate)break e;o=Br(o),I=Br(I)}o=null}else o=null;null!==T&&yr(a,i,T,o,!1),null!==s&&null!==d&&yr(a,d,s,o,!0)}if("select"===(T=(i=r?__(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===T&&"file"===i.type)var u=Jt;else if(Qt(i))if(er)u=sr;else{u=ir;var A=ar}else(T=i.nodeName)&&"input"===T.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(u=Tr);switch(u&&(u=u(e,r))?Wt(a,u,t,_):(A&&A(e,i,r),"focusout"===e&&(A=i._wrapperState)&&A.controlled&&"number"===i.type&&_e(i,"number",i.value)),A=r?__(r):window,e){case"focusin":(Qt(A)||"true"===A.contentEditable)&&(Sr=A,lr=r,hr=null);break;case"focusout":hr=lr=Sr=null;break;case"mousedown":Cr=!0;break;case"contextmenu":case"mouseup":case"dragend":Cr=!1,Pr(a,t,_);break;case"selectionchange":if(Dr)break;case"keydown":case"keyup":Pr(a,t,_)}var D;if(Vt)e:{switch(e){case"compositionstart":var S="onCompositionStart";break e;case"compositionend":S="onCompositionEnd";break e;case"compositionupdate":S="onCompositionUpdate";break e}S=void 0}else xt?qt(e,t)&&(S="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(S="onCompositionStart");S&&(Yt&&"ko"!==t.locale&&(xt||"onCompositionStart"!==S?"onCompositionEnd"===S&&xt&&(D=_t()):(tt="value"in(nt=_)?nt.value:nt.textContent,xt=!0)),0<(A=Vr(r,S)).length&&(S=new Pt(S,e,null,t,_),a.push({event:S,listeners:A}),D?S.data=D:null!==(D=kt(t))&&(S.data=D))),(D=yt?function(e,n){switch(e){case"compositionend":return kt(n);case"keypress":return 32!==n.which?null:(Gt=!0,Kt);case"textInput":return(e=n.data)===Kt&&Gt?null:e;default:return null}}(e,t):function(e,n){if(xt)return"compositionend"===e||!Vt&&qt(e,n)?(e=_t(),rt=tt=nt=null,xt=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return Yt&&"ko"!==n.locale?null:n.data}}(e,t))&&(0<(r=Vr(r,"onBeforeInput")).length&&(_=new Pt("onBeforeInput","beforeinput",null,t,_),a.push({event:_,listeners:r}),_.data=D))}Fr(a,n)}))}function vr(e,n,t){return{instance:e,listener:n,currentTarget:t}}function Vr(e,n){for(var t=n+"Capture",r=[];null!==e;){var _=e,E=_.stateNode;5===_.tag&&null!==E&&(_=E,null!=(E=Ye(e,t))&&r.unshift(vr(e,E,_)),null!=(E=Ye(e,n))&&r.push(vr(e,E,_))),e=e.return}return r}function Br(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function yr(e,n,t,r,_){for(var E=n._reactName,a=[];null!==t&&t!==r;){var i=t,T=i.alternate,s=i.stateNode;if(null!==T&&T===r)break;5===i.tag&&null!==s&&(i=s,_?null!=(T=Ye(t,E))&&a.unshift(vr(t,T,i)):_||null!=(T=Ye(t,E))&&a.push(vr(t,T,i))),t=t.return}0!==a.length&&e.push({event:n,listeners:a})}function Yr(){}var Kr=null,Gr=null;function qr(e,n){switch(e){case"button":case"input":case"select":case"textarea":return!!n.autoFocus}return!1}function kr(e,n){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var xr="function"==typeof setTimeout?setTimeout:void 0,Hr="function"==typeof clearTimeout?clearTimeout:void 0;function Qr(e){1===e.nodeType?e.textContent="":9===e.nodeType&&(null!=(e=e.body)&&(e.textContent=""))}function Wr(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break}return e}function jr(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var Zr=0;var zr=Math.random().toString(36).slice(2),$r="__reactFiber$"+zr,Jr="__reactProps$"+zr,e_="__reactContainer$"+zr,n_="__reactEvents$"+zr;function t_(e){var n=e[$r];if(n)return n;for(var t=e.parentNode;t;){if(n=t[e_]||t[$r]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=jr(e);null!==e;){if(t=e[$r])return t;e=jr(e)}return n}t=(e=t).parentNode}return null}function r_(e){return!(e=e[$r]||e[e_])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function __(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function E_(e){return e[Jr]||null}function a_(e){var n=e[n_];return void 0===n&&(n=e[n_]=new Set),n}var i_=[],T_=-1;function s_(e){return{current:e}}function o_(e){0>T_||(e.current=i_[T_],i_[T_]=null,T_--)}function d_(e,n){T_++,i_[T_]=e.current,e.current=n}var I_={},N_=s_(I_),O_=s_(!1),R_=I_;function u_(e,n){var t=e.type.contextTypes;if(!t)return I_;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var _,E={};for(_ in t)E[_]=n[_];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=E),E}function A_(e){return null!=(e=e.childContextTypes)}function D_(){o_(O_),o_(N_)}function S_(e,n,t){if(N_.current!==I_)throw Error(a(168));d_(N_,n),d_(O_,t)}function l_(e,n,t){var r=e.stateNode;if(e=n.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var E in r=r.getChildContext())if(!(E in e))throw Error(a(108,Q(n)||"Unknown",E));return _({},t,r)}function h_(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||I_,R_=N_.current,d_(N_,e),d_(O_,O_.current),!0}function C_(e,n,t){var r=e.stateNode;if(!r)throw Error(a(169));t?(e=l_(e,n,R_),r.__reactInternalMemoizedMergedChildContext=e,o_(O_),o_(N_),d_(N_,e)):o_(O_),d_(O_,t)}var P_=null,U_=null,c_=E.unstable_runWithPriority,p_=E.unstable_scheduleCallback,L_=E.unstable_cancelCallback,f_=E.unstable_shouldYield,F_=E.unstable_requestPaint,M_=E.unstable_now,m_=E.unstable_getCurrentPriorityLevel,w_=E.unstable_ImmediatePriority,b_=E.unstable_UserBlockingPriority,X_=E.unstable_NormalPriority,g_=E.unstable_LowPriority,v_=E.unstable_IdlePriority,V_={},B_=void 0!==F_?F_:function(){},y_=null,Y_=null,K_=!1,G_=M_(),q_=1e4>G_?M_:function(){return M_()-G_};function k_(){switch(m_()){case w_:return 99;case b_:return 98;case X_:return 97;case g_:return 96;case v_:return 95;default:throw Error(a(332))}}function x_(e){switch(e){case 99:return w_;case 98:return b_;case 97:return X_;case 96:return g_;case 95:return v_;default:throw Error(a(332))}}function H_(e,n){return e=x_(e),c_(e,n)}function Q_(e,n,t){return e=x_(e),p_(e,n,t)}function W_(){if(null!==Y_){var e=Y_;Y_=null,L_(e)}j_()}function j_(){if(!K_&&null!==y_){K_=!0;var e=0;try{var n=y_;H_(99,(function(){for(;e<n.length;e++){var t=n[e];do{t=t(!0)}while(null!==t)}})),y_=null}catch(t){throw null!==y_&&(y_=y_.slice(e+1)),p_(w_,W_),t}finally{K_=!1}}}var Z_=h.ReactCurrentBatchConfig;function z_(e,n){if(e&&e.defaultProps){for(var t in n=_({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}var $_=s_(null),J_=null,eE=null,nE=null;function tE(){nE=eE=J_=null}function rE(e){var n=$_.current;o_($_),e.type._context._currentValue=n}function _E(e,n){for(;null!==e;){var t=e.alternate;if((e.childLanes&n)===n){if(null===t||(t.childLanes&n)===n)break;t.childLanes|=n}else e.childLanes|=n,null!==t&&(t.childLanes|=n);e=e.return}}function EE(e,n){J_=e,nE=eE=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&n)&&(va=!0),e.firstContext=null)}function aE(e,n){if(nE!==e&&!1!==n&&0!==n)if("number"==typeof n&&1073741823!==n||(nE=e,n=1073741823),n={context:e,observedBits:n,next:null},null===eE){if(null===J_)throw Error(a(308));eE=n,J_.dependencies={lanes:0,firstContext:n,responders:null}}else eE=eE.next=n;return e._currentValue}var iE=!1;function TE(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function sE(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function oE(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function dE(e,n){if(null!==(e=e.updateQueue)){var t=(e=e.shared).pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}}function IE(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var _=null,E=null;if(null!==(t=t.firstBaseUpdate)){do{var a={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===E?_=E=a:E=E.next=a,t=t.next}while(null!==t);null===E?_=E=n:E=E.next=n}else _=E=n;return t={baseState:r.baseState,firstBaseUpdate:_,lastBaseUpdate:E,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function NE(e,n,t,r){var E=e.updateQueue;iE=!1;var a=E.firstBaseUpdate,i=E.lastBaseUpdate,T=E.shared.pending;if(null!==T){E.shared.pending=null;var s=T,o=s.next;s.next=null,null===i?a=o:i.next=o,i=s;var d=e.alternate;if(null!==d){var I=(d=d.updateQueue).lastBaseUpdate;I!==i&&(null===I?d.firstBaseUpdate=o:I.next=o,d.lastBaseUpdate=s)}}if(null!==a){for(I=E.baseState,i=0,d=o=s=null;;){T=a.lane;var N=a.eventTime;if((r&T)===T){null!==d&&(d=d.next={eventTime:N,lane:0,tag:a.tag,payload:a.payload,callback:a.callback,next:null});e:{var O=e,R=a;switch(T=n,N=t,R.tag){case 1:if("function"==typeof(O=R.payload)){I=O.call(N,I,T);break e}I=O;break e;case 3:O.flags=-4097&O.flags|64;case 0:if(null==(T="function"==typeof(O=R.payload)?O.call(N,I,T):O))break e;I=_({},I,T);break e;case 2:iE=!0}}null!==a.callback&&(e.flags|=32,null===(T=E.effects)?E.effects=[a]:T.push(a))}else N={eventTime:N,lane:T,tag:a.tag,payload:a.payload,callback:a.callback,next:null},null===d?(o=d=N,s=I):d=d.next=N,i|=T;if(null===(a=a.next)){if(null===(T=E.shared.pending))break;a=T.next,T.next=null,E.lastBaseUpdate=T,E.shared.pending=null}}null===d&&(s=I),E.baseState=s,E.firstBaseUpdate=o,E.lastBaseUpdate=d,Yi|=i,e.lanes=i,e.memoizedState=I}}function OE(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],_=r.callback;if(null!==_){if(r.callback=null,r=t,"function"!=typeof _)throw Error(a(191,_));_.call(r)}}}var RE=(new r.Component).refs;function uE(e,n,t,r){t=null==(t=t(r,n=e.memoizedState))?n:_({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var AE={isMounted:function(e){return!!(e=e._reactInternals)&&Ze(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=dT(),_=IT(e),E=oE(r,_);E.payload=n,null!=t&&(E.callback=t),dE(e,E),NT(e,_,r)},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=dT(),_=IT(e),E=oE(r,_);E.tag=1,E.payload=n,null!=t&&(E.callback=t),dE(e,E),NT(e,_,r)},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=dT(),r=IT(e),_=oE(t,r);_.tag=2,null!=n&&(_.callback=n),dE(e,_),NT(e,r,t)}};function DE(e,n,t,r,_,E,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,E,a):!n.prototype||!n.prototype.isPureReactComponent||(!Ir(t,r)||!Ir(_,E))}function SE(e,n,t){var r=!1,_=I_,E=n.contextType;return"object"==typeof E&&null!==E?E=aE(E):(_=A_(n)?R_:N_.current,E=(r=null!=(r=n.contextTypes))?u_(e,_):I_),n=new n(t,E),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=AE,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=_,e.__reactInternalMemoizedMaskedChildContext=E),n}function lE(e,n,t,r){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&AE.enqueueReplaceState(n,n.state,null)}function hE(e,n,t,r){var _=e.stateNode;_.props=t,_.state=e.memoizedState,_.refs=RE,TE(e);var E=n.contextType;"object"==typeof E&&null!==E?_.context=aE(E):(E=A_(n)?R_:N_.current,_.context=u_(e,E)),NE(e,t,_,r),_.state=e.memoizedState,"function"==typeof(E=n.getDerivedStateFromProps)&&(uE(e,n,E,t),_.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof _.getSnapshotBeforeUpdate||"function"!=typeof _.UNSAFE_componentWillMount&&"function"!=typeof _.componentWillMount||(n=_.state,"function"==typeof _.componentWillMount&&_.componentWillMount(),"function"==typeof _.UNSAFE_componentWillMount&&_.UNSAFE_componentWillMount(),n!==_.state&&AE.enqueueReplaceState(_,_.state,null),NE(e,t,_,r),_.state=e.memoizedState),"function"==typeof _.componentDidMount&&(e.flags|=4)}var CE=Array.isArray;function PE(e,n,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(a(309));var r=t.stateNode}if(!r)throw Error(a(147,e));var _=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===_?n.ref:(n=function(e){var n=r.refs;n===RE&&(n=r.refs={}),null===e?delete n[_]:n[_]=e},n._stringRef=_,n)}if("string"!=typeof e)throw Error(a(284));if(!t._owner)throw Error(a(290,e))}return e}function UE(e,n){if("textarea"!==e.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(n)?"object with keys {"+Object.keys(n).join(", ")+"}":n))}function cE(e){function n(n,t){if(e){var r=n.lastEffect;null!==r?(r.nextEffect=t,n.lastEffect=t):n.firstEffect=n.lastEffect=t,t.nextEffect=null,t.flags=8}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function _(e,n){return(e=xT(e,n)).index=0,e.sibling=null,e}function E(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags=2,t):r:(n.flags=2,t):t}function i(n){return e&&null===n.alternate&&(n.flags=2),n}function T(e,n,t,r){return null===n||6!==n.tag?((n=jT(t,e.mode,r)).return=e,n):((n=_(n,t)).return=e,n)}function s(e,n,t,r){return null!==n&&n.elementType===t.type?((r=_(n,t.props)).ref=PE(e,n,t),r.return=e,r):((r=HT(t.type,t.key,t.props,null,e.mode,r)).ref=PE(e,n,t),r.return=e,r)}function o(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=ZT(t,e.mode,r)).return=e,n):((n=_(n,t.children||[])).return=e,n)}function d(e,n,t,r,E){return null===n||7!==n.tag?((n=QT(t,e.mode,r,E)).return=e,n):((n=_(n,t)).return=e,n)}function I(e,n,t){if("string"==typeof n||"number"==typeof n)return(n=jT(""+n,e.mode,t)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case C:return(t=HT(n.type,n.key,n.props,null,e.mode,t)).ref=PE(e,null,n),t.return=e,t;case P:return(n=ZT(n,e.mode,t)).return=e,n}if(CE(n)||G(n))return(n=QT(n,e.mode,t,null)).return=e,n;UE(e,n)}return null}function N(e,n,t,r){var _=null!==n?n.key:null;if("string"==typeof t||"number"==typeof t)return null!==_?null:T(e,n,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case C:return t.key===_?t.type===U?d(e,n,t.props.children,r,_):s(e,n,t,r):null;case P:return t.key===_?o(e,n,t,r):null}if(CE(t)||G(t))return null!==_?null:d(e,n,t,r,null);UE(e,t)}return null}function O(e,n,t,r,_){if("string"==typeof r||"number"==typeof r)return T(n,e=e.get(t)||null,""+r,_);if("object"==typeof r&&null!==r){switch(r.$$typeof){case C:return e=e.get(null===r.key?t:r.key)||null,r.type===U?d(n,e,r.props.children,_,r.key):s(n,e,r,_);case P:return o(n,e=e.get(null===r.key?t:r.key)||null,r,_)}if(CE(r)||G(r))return d(n,e=e.get(t)||null,r,_,null);UE(n,r)}return null}function R(_,a,i,T){for(var s=null,o=null,d=a,R=a=0,u=null;null!==d&&R<i.length;R++){d.index>R?(u=d,d=null):u=d.sibling;var A=N(_,d,i[R],T);if(null===A){null===d&&(d=u);break}e&&d&&null===A.alternate&&n(_,d),a=E(A,a,R),null===o?s=A:o.sibling=A,o=A,d=u}if(R===i.length)return t(_,d),s;if(null===d){for(;R<i.length;R++)null!==(d=I(_,i[R],T))&&(a=E(d,a,R),null===o?s=d:o.sibling=d,o=d);return s}for(d=r(_,d);R<i.length;R++)null!==(u=O(d,_,R,i[R],T))&&(e&&null!==u.alternate&&d.delete(null===u.key?R:u.key),a=E(u,a,R),null===o?s=u:o.sibling=u,o=u);return e&&d.forEach((function(e){return n(_,e)})),s}function u(_,i,T,s){var o=G(T);if("function"!=typeof o)throw Error(a(150));if(null==(T=o.call(T)))throw Error(a(151));for(var d=o=null,R=i,u=i=0,A=null,D=T.next();null!==R&&!D.done;u++,D=T.next()){R.index>u?(A=R,R=null):A=R.sibling;var S=N(_,R,D.value,s);if(null===S){null===R&&(R=A);break}e&&R&&null===S.alternate&&n(_,R),i=E(S,i,u),null===d?o=S:d.sibling=S,d=S,R=A}if(D.done)return t(_,R),o;if(null===R){for(;!D.done;u++,D=T.next())null!==(D=I(_,D.value,s))&&(i=E(D,i,u),null===d?o=D:d.sibling=D,d=D);return o}for(R=r(_,R);!D.done;u++,D=T.next())null!==(D=O(R,_,u,D.value,s))&&(e&&null!==D.alternate&&R.delete(null===D.key?u:D.key),i=E(D,i,u),null===d?o=D:d.sibling=D,d=D);return e&&R.forEach((function(e){return n(_,e)})),o}return function(e,r,E,T){var s="object"==typeof E&&null!==E&&E.type===U&&null===E.key;s&&(E=E.props.children);var o="object"==typeof E&&null!==E;if(o)switch(E.$$typeof){case C:e:{for(o=E.key,s=r;null!==s;){if(s.key===o){if(7===s.tag){if(E.type===U){t(e,s.sibling),(r=_(s,E.props.children)).return=e,e=r;break e}}else if(s.elementType===E.type){t(e,s.sibling),(r=_(s,E.props)).ref=PE(e,s,E),r.return=e,e=r;break e}t(e,s);break}n(e,s),s=s.sibling}E.type===U?((r=QT(E.props.children,e.mode,T,E.key)).return=e,e=r):((T=HT(E.type,E.key,E.props,null,e.mode,T)).ref=PE(e,r,E),T.return=e,e=T)}return i(e);case P:e:{for(s=E.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===E.containerInfo&&r.stateNode.implementation===E.implementation){t(e,r.sibling),(r=_(r,E.children||[])).return=e,e=r;break e}t(e,r);break}n(e,r),r=r.sibling}(r=ZT(E,e.mode,T)).return=e,e=r}return i(e)}if("string"==typeof E||"number"==typeof E)return E=""+E,null!==r&&6===r.tag?(t(e,r.sibling),(r=_(r,E)).return=e,e=r):(t(e,r),(r=jT(E,e.mode,T)).return=e,e=r),i(e);if(CE(E))return R(e,r,E,T);if(G(E))return u(e,r,E,T);if(o&&UE(e,E),void 0===E&&!s)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(a(152,Q(e.type)||"Component"))}return t(e,r)}}var pE=cE(!0),LE=cE(!1),fE={},FE=s_(fE),ME=s_(fE),mE=s_(fE);function wE(e){if(e===fE)throw Error(a(174));return e}function bE(e,n){switch(d_(mE,n),d_(ME,e),d_(FE,fE),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:Oe(null,"");break;default:n=Oe(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}o_(FE),d_(FE,n)}function XE(){o_(FE),o_(ME),o_(mE)}function gE(e){wE(mE.current);var n=wE(FE.current),t=Oe(n,e.type);n!==t&&(d_(ME,e),d_(FE,t))}function vE(e){ME.current===e&&(o_(FE),o_(ME))}var VE=s_(0);function BE(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!=(64&n.flags))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var yE=null,YE=null,KE=!1;function GE(e,n){var t=qT(5,null,null,0);t.elementType="DELETED",t.type="DELETED",t.stateNode=n,t.return=e,t.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=t,e.lastEffect=t):e.firstEffect=e.lastEffect=t}function qE(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,!0);default:return!1}}function kE(e){if(KE){var n=YE;if(n){var t=n;if(!qE(e,n)){if(!(n=Wr(t.nextSibling))||!qE(e,n))return e.flags=-1025&e.flags|2,KE=!1,void(yE=e);GE(yE,t)}yE=e,YE=Wr(n.firstChild)}else e.flags=-1025&e.flags|2,KE=!1,yE=e}}function xE(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;yE=e}function HE(e){if(e!==yE)return!1;if(!KE)return xE(e),KE=!0,!1;var n=e.type;if(5!==e.tag||"head"!==n&&"body"!==n&&!kr(n,e.memoizedProps))for(n=YE;n;)GE(e,n),n=Wr(n.nextSibling);if(xE(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){YE=Wr(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}YE=null}}else YE=yE?Wr(e.stateNode.nextSibling):null;return!0}function QE(){YE=yE=null,KE=!1}var WE=[];function jE(){for(var e=0;e<WE.length;e++)WE[e]._workInProgressVersionPrimary=null;WE.length=0}var ZE=h.ReactCurrentDispatcher,zE=h.ReactCurrentBatchConfig,$E=0,JE=null,ea=null,na=null,ta=!1,ra=!1;function _a(){throw Error(a(321))}function Ea(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!or(e[t],n[t]))return!1;return!0}function aa(e,n,t,r,_,E){if($E=E,JE=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,ZE.current=null===e||null===e.memoizedState?wa:ba,e=t(r,_),ra){E=0;do{if(ra=!1,!(25>E))throw Error(a(301));E+=1,na=ea=null,n.updateQueue=null,ZE.current=Xa,e=t(r,_)}while(ra)}if(ZE.current=ma,n=null!==ea&&null!==ea.next,$E=0,na=ea=JE=null,ta=!1,n)throw Error(a(300));return e}function ia(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===na?JE.memoizedState=na=e:na=na.next=e,na}function Ta(){if(null===ea){var e=JE.alternate;e=null!==e?e.memoizedState:null}else e=ea.next;var n=null===na?JE.memoizedState:na.next;if(null!==n)na=n,ea=e;else{if(null===e)throw Error(a(310));e={memoizedState:(ea=e).memoizedState,baseState:ea.baseState,baseQueue:ea.baseQueue,queue:ea.queue,next:null},null===na?JE.memoizedState=na=e:na=na.next=e}return na}function sa(e,n){return"function"==typeof n?n(e):n}function oa(e){var n=Ta(),t=n.queue;if(null===t)throw Error(a(311));t.lastRenderedReducer=e;var r=ea,_=r.baseQueue,E=t.pending;if(null!==E){if(null!==_){var i=_.next;_.next=E.next,E.next=i}r.baseQueue=_=E,t.pending=null}if(null!==_){_=_.next,r=r.baseState;var T=i=E=null,s=_;do{var o=s.lane;if(($E&o)===o)null!==T&&(T=T.next={lane:0,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),r=s.eagerReducer===e?s.eagerState:e(r,s.action);else{var d={lane:o,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===T?(i=T=d,E=r):T=T.next=d,JE.lanes|=o,Yi|=o}s=s.next}while(null!==s&&s!==_);null===T?E=r:T.next=i,or(r,n.memoizedState)||(va=!0),n.memoizedState=r,n.baseState=E,n.baseQueue=T,t.lastRenderedState=r}return[n.memoizedState,t.dispatch]}function da(e){var n=Ta(),t=n.queue;if(null===t)throw Error(a(311));t.lastRenderedReducer=e;var r=t.dispatch,_=t.pending,E=n.memoizedState;if(null!==_){t.pending=null;var i=_=_.next;do{E=e(E,i.action),i=i.next}while(i!==_);or(E,n.memoizedState)||(va=!0),n.memoizedState=E,null===n.baseQueue&&(n.baseState=E),t.lastRenderedState=E}return[E,r]}function Ia(e,n,t){var r=n._getVersion;r=r(n._source);var _=n._workInProgressVersionPrimary;if(null!==_?e=_===r:(e=e.mutableReadLanes,(e=($E&e)===e)&&(n._workInProgressVersionPrimary=r,WE.push(n))),e)return t(n._source);throw WE.push(n),Error(a(350))}function Na(e,n,t,r){var _=wi;if(null===_)throw Error(a(349));var E=n._getVersion,i=E(n._source),T=ZE.current,s=T.useState((function(){return Ia(_,n,t)})),o=s[1],d=s[0];s=na;var I=e.memoizedState,N=I.refs,O=N.getSnapshot,R=I.source;I=I.subscribe;var u=JE;return e.memoizedState={refs:N,source:n,subscribe:r},T.useEffect((function(){N.getSnapshot=t,N.setSnapshot=o;var e=E(n._source);if(!or(i,e)){e=t(n._source),or(d,e)||(o(e),e=IT(u),_.mutableReadLanes|=e&_.pendingLanes),e=_.mutableReadLanes,_.entangledLanes|=e;for(var r=_.entanglements,a=e;0<a;){var T=31-xn(a),s=1<<T;r[T]|=e,a&=~s}}}),[t,n,r]),T.useEffect((function(){return r(n._source,(function(){var e=N.getSnapshot,t=N.setSnapshot;try{t(e(n._source));var r=IT(u);_.mutableReadLanes|=r&_.pendingLanes}catch(E){t((function(){throw E}))}}))}),[n,r]),or(O,t)&&or(R,n)&&or(I,r)||((e={pending:null,dispatch:null,lastRenderedReducer:sa,lastRenderedState:d}).dispatch=o=Ma.bind(null,JE,e),s.queue=e,s.baseQueue=null,d=Ia(_,n,t),s.memoizedState=s.baseState=d),d}function Oa(e,n,t){return Na(Ta(),e,n,t)}function Ra(e){var n=ia();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e=(e=n.queue={pending:null,dispatch:null,lastRenderedReducer:sa,lastRenderedState:e}).dispatch=Ma.bind(null,JE,e),[n.memoizedState,e]}function ua(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=JE.updateQueue)?(n={lastEffect:null},JE.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function Aa(e){return e={current:e},ia().memoizedState=e}function Da(){return Ta().memoizedState}function Sa(e,n,t,r){var _=ia();JE.flags|=e,_.memoizedState=ua(1|n,t,void 0,void 0===r?null:r)}function la(e,n,t,r){var _=Ta();r=void 0===r?null:r;var E=void 0;if(null!==ea){var a=ea.memoizedState;if(E=a.destroy,null!==r&&Ea(r,a.deps))return void ua(n,t,E,r)}JE.flags|=e,_.memoizedState=ua(1|n,t,E,r)}function ha(e,n){return Sa(516,4,e,n)}function Ca(e,n){return la(516,4,e,n)}function Pa(e,n){return la(4,2,e,n)}function Ua(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function ca(e,n,t){return t=null!=t?t.concat([e]):null,la(4,2,Ua.bind(null,n,e),t)}function pa(){}function La(e,n){var t=Ta();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&Ea(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function fa(e,n){var t=Ta();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&Ea(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function Fa(e,n){var t=k_();H_(98>t?98:t,(function(){e(!0)})),H_(97<t?97:t,(function(){var t=zE.transition;zE.transition=1;try{e(!1),n()}finally{zE.transition=t}}))}function Ma(e,n,t){var r=dT(),_=IT(e),E={lane:_,action:t,eagerReducer:null,eagerState:null,next:null},a=n.pending;if(null===a?E.next=E:(E.next=a.next,a.next=E),n.pending=E,a=e.alternate,e===JE||null!==a&&a===JE)ra=ta=!0;else{if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=n.lastRenderedReducer))try{var i=n.lastRenderedState,T=a(i,t);if(E.eagerReducer=a,E.eagerState=T,or(T,i))return}catch(s){}NT(e,_,r)}}var ma={readContext:aE,useCallback:_a,useContext:_a,useEffect:_a,useImperativeHandle:_a,useLayoutEffect:_a,useMemo:_a,useReducer:_a,useRef:_a,useState:_a,useDebugValue:_a,useDeferredValue:_a,useTransition:_a,useMutableSource:_a,useOpaqueIdentifier:_a,unstable_isNewReconciler:!1},wa={readContext:aE,useCallback:function(e,n){return ia().memoizedState=[e,void 0===n?null:n],e},useContext:aE,useEffect:ha,useImperativeHandle:function(e,n,t){return t=null!=t?t.concat([e]):null,Sa(4,2,Ua.bind(null,n,e),t)},useLayoutEffect:function(e,n){return Sa(4,2,e,n)},useMemo:function(e,n){var t=ia();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=ia();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:n}).dispatch=Ma.bind(null,JE,e),[r.memoizedState,e]},useRef:Aa,useState:Ra,useDebugValue:pa,useDeferredValue:function(e){var n=Ra(e),t=n[0],r=n[1];return ha((function(){var n=zE.transition;zE.transition=1;try{r(e)}finally{zE.transition=n}}),[e]),t},useTransition:function(){var e=Ra(!1),n=e[0];return Aa(e=Fa.bind(null,e[1])),[e,n]},useMutableSource:function(e,n,t){var r=ia();return r.memoizedState={refs:{getSnapshot:n,setSnapshot:null},source:e,subscribe:t},Na(r,e,n,t)},useOpaqueIdentifier:function(){if(KE){var e=!1,n=function(e){return{$$typeof:g,toString:e,valueOf:e}}((function(){throw e||(e=!0,t("r:"+(Zr++).toString(36))),Error(a(355))})),t=Ra(n)[1];return 0==(2&JE.mode)&&(JE.flags|=516,ua(5,(function(){t("r:"+(Zr++).toString(36))}),void 0,null)),n}return Ra(n="r:"+(Zr++).toString(36)),n},unstable_isNewReconciler:!1},ba={readContext:aE,useCallback:La,useContext:aE,useEffect:Ca,useImperativeHandle:ca,useLayoutEffect:Pa,useMemo:fa,useReducer:oa,useRef:Da,useState:function(){return oa(sa)},useDebugValue:pa,useDeferredValue:function(e){var n=oa(sa),t=n[0],r=n[1];return Ca((function(){var n=zE.transition;zE.transition=1;try{r(e)}finally{zE.transition=n}}),[e]),t},useTransition:function(){var e=oa(sa)[0];return[Da().current,e]},useMutableSource:Oa,useOpaqueIdentifier:function(){return oa(sa)[0]},unstable_isNewReconciler:!1},Xa={readContext:aE,useCallback:La,useContext:aE,useEffect:Ca,useImperativeHandle:ca,useLayoutEffect:Pa,useMemo:fa,useReducer:da,useRef:Da,useState:function(){return da(sa)},useDebugValue:pa,useDeferredValue:function(e){var n=da(sa),t=n[0],r=n[1];return Ca((function(){var n=zE.transition;zE.transition=1;try{r(e)}finally{zE.transition=n}}),[e]),t},useTransition:function(){var e=da(sa)[0];return[Da().current,e]},useMutableSource:Oa,useOpaqueIdentifier:function(){return da(sa)[0]},unstable_isNewReconciler:!1},ga=h.ReactCurrentOwner,va=!1;function Va(e,n,t,r){n.child=null===e?LE(n,null,t,r):pE(n,e.child,t,r)}function Ba(e,n,t,r,_){t=t.render;var E=n.ref;return EE(n,_),r=aa(e,n,t,r,E,_),null===e||va?(n.flags|=1,Va(e,n,r,_),n.child):(n.updateQueue=e.updateQueue,n.flags&=-517,e.lanes&=~_,_i(e,n,_))}function ya(e,n,t,r,_,E){if(null===e){var a=t.type;return"function"!=typeof a||kT(a)||void 0!==a.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=HT(t.type,null,r,n,n.mode,E)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=a,Ya(e,n,a,r,_,E))}return a=e.child,0==(_&E)&&(_=a.memoizedProps,(t=null!==(t=t.compare)?t:Ir)(_,r)&&e.ref===n.ref)?_i(e,n,E):(n.flags|=1,(e=xT(a,r)).ref=n.ref,e.return=n,n.child=e)}function Ya(e,n,t,r,_,E){if(null!==e&&Ir(e.memoizedProps,r)&&e.ref===n.ref){if(va=!1,0==(E&_))return n.lanes=e.lanes,_i(e,n,E);0!=(16384&e.flags)&&(va=!0)}return qa(e,n,t,r,E)}function Ka(e,n,t){var r=n.pendingProps,_=r.children,E=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&n.mode))n.memoizedState={baseLanes:0},hT(n,t);else{if(0==(1073741824&t))return e=null!==E?E.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e},hT(n,e),null;n.memoizedState={baseLanes:0},hT(n,null!==E?E.baseLanes:t)}else null!==E?(r=E.baseLanes|t,n.memoizedState=null):r=t,hT(n,r);return Va(e,n,_,t),n.child}function Ga(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=128)}function qa(e,n,t,r,_){var E=A_(t)?R_:N_.current;return E=u_(n,E),EE(n,_),t=aa(e,n,t,r,E,_),null===e||va?(n.flags|=1,Va(e,n,t,_),n.child):(n.updateQueue=e.updateQueue,n.flags&=-517,e.lanes&=~_,_i(e,n,_))}function ka(e,n,t,r,_){if(A_(t)){var E=!0;h_(n)}else E=!1;if(EE(n,_),null===n.stateNode)null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),SE(n,t,r),hE(n,t,r,_),r=!0;else if(null===e){var a=n.stateNode,i=n.memoizedProps;a.props=i;var T=a.context,s=t.contextType;"object"==typeof s&&null!==s?s=aE(s):s=u_(n,s=A_(t)?R_:N_.current);var o=t.getDerivedStateFromProps,d="function"==typeof o||"function"==typeof a.getSnapshotBeforeUpdate;d||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(i!==r||T!==s)&&lE(n,a,r,s),iE=!1;var I=n.memoizedState;a.state=I,NE(n,r,a,_),T=n.memoizedState,i!==r||I!==T||O_.current||iE?("function"==typeof o&&(uE(n,t,o,r),T=n.memoizedState),(i=iE||DE(n,t,i,r,I,T,s))?(d||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(n.flags|=4)):("function"==typeof a.componentDidMount&&(n.flags|=4),n.memoizedProps=r,n.memoizedState=T),a.props=r,a.state=T,a.context=s,r=i):("function"==typeof a.componentDidMount&&(n.flags|=4),r=!1)}else{a=n.stateNode,sE(e,n),i=n.memoizedProps,s=n.type===n.elementType?i:z_(n.type,i),a.props=s,d=n.pendingProps,I=a.context,"object"==typeof(T=t.contextType)&&null!==T?T=aE(T):T=u_(n,T=A_(t)?R_:N_.current);var N=t.getDerivedStateFromProps;(o="function"==typeof N||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(i!==d||I!==T)&&lE(n,a,r,T),iE=!1,I=n.memoizedState,a.state=I,NE(n,r,a,_);var O=n.memoizedState;i!==d||I!==O||O_.current||iE?("function"==typeof N&&(uE(n,t,N,r),O=n.memoizedState),(s=iE||DE(n,t,s,r,I,O,T))?(o||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,O,T),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,O,T)),"function"==typeof a.componentDidUpdate&&(n.flags|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(n.flags|=256)):("function"!=typeof a.componentDidUpdate||i===e.memoizedProps&&I===e.memoizedState||(n.flags|=4),"function"!=typeof a.getSnapshotBeforeUpdate||i===e.memoizedProps&&I===e.memoizedState||(n.flags|=256),n.memoizedProps=r,n.memoizedState=O),a.props=r,a.state=O,a.context=T,r=s):("function"!=typeof a.componentDidUpdate||i===e.memoizedProps&&I===e.memoizedState||(n.flags|=4),"function"!=typeof a.getSnapshotBeforeUpdate||i===e.memoizedProps&&I===e.memoizedState||(n.flags|=256),r=!1)}return xa(e,n,t,r,E,_)}function xa(e,n,t,r,_,E){Ga(e,n);var a=0!=(64&n.flags);if(!r&&!a)return _&&C_(n,t,!1),_i(e,n,E);r=n.stateNode,ga.current=n;var i=a&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&a?(n.child=pE(n,e.child,null,E),n.child=pE(n,null,i,E)):Va(e,n,i,E),n.memoizedState=r.state,_&&C_(n,t,!0),n.child}function Ha(e){var n=e.stateNode;n.pendingContext?S_(0,n.pendingContext,n.pendingContext!==n.context):n.context&&S_(0,n.context,!1),bE(e,n.containerInfo)}var Qa,Wa,ja,Za={dehydrated:null,retryLane:0};function za(e,n,t){var r,_=n.pendingProps,E=VE.current,a=!1;return(r=0!=(64&n.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&E)),r?(a=!0,n.flags&=-65):null!==e&&null===e.memoizedState||void 0===_.fallback||!0===_.unstable_avoidThisFallback||(E|=1),d_(VE,1&E),null===e?(void 0!==_.fallback&&kE(n),e=_.children,E=_.fallback,a?(e=$a(n,e,E,t),n.child.memoizedState={baseLanes:t},n.memoizedState=Za,e):"number"==typeof _.unstable_expectedLoadTime?(e=$a(n,e,E,t),n.child.memoizedState={baseLanes:t},n.memoizedState=Za,n.lanes=33554432,e):((t=WT({mode:"visible",children:e},n.mode,t,null)).return=n,n.child=t)):(e.memoizedState,a?(_=ei(e,n,_.children,_.fallback,t),a=n.child,E=e.child.memoizedState,a.memoizedState=null===E?{baseLanes:t}:{baseLanes:E.baseLanes|t},a.childLanes=e.childLanes&~t,n.memoizedState=Za,_):(t=Ja(e,n,_.children,t),n.memoizedState=null,t))}function $a(e,n,t,r){var _=e.mode,E=e.child;return n={mode:"hidden",children:n},0==(2&_)&&null!==E?(E.childLanes=0,E.pendingProps=n):E=WT(n,_,0,null),t=QT(t,_,r,null),E.return=e,t.return=e,E.sibling=t,e.child=E,t}function Ja(e,n,t,r){var _=e.child;return e=_.sibling,t=xT(_,{mode:"visible",children:t}),0==(2&n.mode)&&(t.lanes=r),t.return=n,t.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,n.firstEffect=n.lastEffect=e),n.child=t}function ei(e,n,t,r,_){var E=n.mode,a=e.child;e=a.sibling;var i={mode:"hidden",children:t};return 0==(2&E)&&n.child!==a?((t=n.child).childLanes=0,t.pendingProps=i,null!==(a=t.lastEffect)?(n.firstEffect=t.firstEffect,n.lastEffect=a,a.nextEffect=null):n.firstEffect=n.lastEffect=null):t=xT(a,i),null!==e?r=xT(e,r):(r=QT(r,E,_,null)).flags|=2,r.return=n,t.return=n,t.sibling=r,n.child=t,r}function ni(e,n){e.lanes|=n;var t=e.alternate;null!==t&&(t.lanes|=n),_E(e.return,n)}function ti(e,n,t,r,_,E){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:_,lastEffect:E}:(a.isBackwards=n,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=t,a.tailMode=_,a.lastEffect=E)}function ri(e,n,t){var r=n.pendingProps,_=r.revealOrder,E=r.tail;if(Va(e,n,r.children,t),0!=(2&(r=VE.current)))r=1&r|2,n.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&ni(e,t);else if(19===e.tag)ni(e,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(d_(VE,r),0==(2&n.mode))n.memoizedState=null;else switch(_){case"forwards":for(t=n.child,_=null;null!==t;)null!==(e=t.alternate)&&null===BE(e)&&(_=t),t=t.sibling;null===(t=_)?(_=n.child,n.child=null):(_=t.sibling,t.sibling=null),ti(n,!1,_,t,E,n.lastEffect);break;case"backwards":for(t=null,_=n.child,n.child=null;null!==_;){if(null!==(e=_.alternate)&&null===BE(e)){n.child=_;break}e=_.sibling,_.sibling=t,t=_,_=e}ti(n,!0,t,null,E,n.lastEffect);break;case"together":ti(n,!1,null,null,void 0,n.lastEffect);break;default:n.memoizedState=null}return n.child}function _i(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),Yi|=n.lanes,0!=(t&n.childLanes)){if(null!==e&&n.child!==e.child)throw Error(a(153));if(null!==n.child){for(t=xT(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=xT(e,e.pendingProps)).return=n;t.sibling=null}return n.child}return null}function Ei(e,n){if(!KE)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ai(e,n,t){var r=n.pendingProps;switch(n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return A_(n.type)&&D_(),null;case 3:return XE(),o_(O_),o_(N_),jE(),(r=n.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(HE(n)?n.flags|=4:r.hydrate||(n.flags|=256)),null;case 5:vE(n);var E=wE(mE.current);if(t=n.type,null!==e&&null!=n.stateNode)Wa(e,n,t,r),e.ref!==n.ref&&(n.flags|=128);else{if(!r){if(null===n.stateNode)throw Error(a(166));return null}if(e=wE(FE.current),HE(n)){r=n.stateNode,t=n.type;var i=n.memoizedProps;switch(r[$r]=n,r[Jr]=i,t){case"dialog":Mr("cancel",r),Mr("close",r);break;case"iframe":case"object":case"embed":Mr("load",r);break;case"video":case"audio":for(e=0;e<pr.length;e++)Mr(pr[e],r);break;case"source":Mr("error",r);break;case"img":case"image":case"link":Mr("error",r),Mr("load",r);break;case"details":Mr("toggle",r);break;case"input":ee(r,i),Mr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Mr("invalid",r);break;case"textarea":Te(r,i),Mr("invalid",r)}for(var s in Ue(t,i),e=null,i)i.hasOwnProperty(s)&&(E=i[s],"children"===s?"string"==typeof E?r.textContent!==E&&(e=["children",E]):"number"==typeof E&&r.textContent!==""+E&&(e=["children",""+E]):T.hasOwnProperty(s)&&null!=E&&"onScroll"===s&&Mr("scroll",r));switch(t){case"input":Z(r),re(r,i,!0);break;case"textarea":Z(r),oe(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Yr)}r=e,n.updateQueue=r,null!==r&&(n.flags|=4)}else{switch(s=9===E.nodeType?E:E.ownerDocument,e===de&&(e=Ne(t)),e===de?"script"===t?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(t,{is:r.is}):(e=s.createElement(t),"select"===t&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,t),e[$r]=n,e[Jr]=r,Qa(e,n),n.stateNode=e,s=ce(t,r),t){case"dialog":Mr("cancel",e),Mr("close",e),E=r;break;case"iframe":case"object":case"embed":Mr("load",e),E=r;break;case"video":case"audio":for(E=0;E<pr.length;E++)Mr(pr[E],e);E=r;break;case"source":Mr("error",e),E=r;break;case"img":case"image":case"link":Mr("error",e),Mr("load",e),E=r;break;case"details":Mr("toggle",e),E=r;break;case"input":ee(e,r),E=J(e,r),Mr("invalid",e);break;case"option":E=Ee(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},E=_({},r,{value:void 0}),Mr("invalid",e);break;case"textarea":Te(e,r),E=ie(e,r),Mr("invalid",e);break;default:E=r}Ue(t,E);var o=E;for(i in o)if(o.hasOwnProperty(i)){var d=o[i];"style"===i?Ce(e,d):"dangerouslySetInnerHTML"===i?null!=(d=d?d.__html:void 0)&&Ae(e,d):"children"===i?"string"==typeof d?("textarea"!==t||""!==d)&&De(e,d):"number"==typeof d&&De(e,""+d):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(T.hasOwnProperty(i)?null!=d&&"onScroll"===i&&Mr("scroll",e):null!=d&&l(e,i,d,s))}switch(t){case"input":Z(e),re(e,r,!1);break;case"textarea":Z(e),oe(e);break;case"option":null!=r.value&&e.setAttribute("value",""+W(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?ae(e,!!r.multiple,i,!1):null!=r.defaultValue&&ae(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof E.onClick&&(e.onclick=Yr)}qr(t,r)&&(n.flags|=4)}null!==n.ref&&(n.flags|=128)}return null;case 6:if(e&&null!=n.stateNode)ja(0,n,e.memoizedProps,r);else{if("string"!=typeof r&&null===n.stateNode)throw Error(a(166));t=wE(mE.current),wE(FE.current),HE(n)?(r=n.stateNode,t=n.memoizedProps,r[$r]=n,r.nodeValue!==t&&(n.flags|=4)):((r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[$r]=n,n.stateNode=r)}return null;case 13:return o_(VE),r=n.memoizedState,0!=(64&n.flags)?(n.lanes=t,n):(r=null!==r,t=!1,null===e?void 0!==n.memoizedProps.fallback&&HE(n):t=null!==e.memoizedState,r&&!t&&0!=(2&n.mode)&&(null===e&&!0!==n.memoizedProps.unstable_avoidThisFallback||0!=(1&VE.current)?0===Vi&&(Vi=3):(0!==Vi&&3!==Vi||(Vi=4),null===wi||0==(134217727&Yi)&&0==(134217727&Ki)||AT(wi,Xi))),(r||t)&&(n.flags|=4),null);case 4:return XE(),null===e&&wr(n.stateNode.containerInfo),null;case 10:return rE(n),null;case 19:if(o_(VE),null===(r=n.memoizedState))return null;if(i=0!=(64&n.flags),null===(s=r.rendering))if(i)Ei(r,!1);else{if(0!==Vi||null!==e&&0!=(64&e.flags))for(e=n.child;null!==e;){if(null!==(s=BE(e))){for(n.flags|=64,Ei(r,!1),null!==(i=s.updateQueue)&&(n.updateQueue=i,n.flags|=4),null===r.lastEffect&&(n.firstEffect=null),n.lastEffect=r.lastEffect,r=t,t=n.child;null!==t;)e=r,(i=t).flags&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(s=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=s.childLanes,i.lanes=s.lanes,i.child=s.child,i.memoizedProps=s.memoizedProps,i.memoizedState=s.memoizedState,i.updateQueue=s.updateQueue,i.type=s.type,e=s.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return d_(VE,1&VE.current|2),n.child}e=e.sibling}null!==r.tail&&q_()>xi&&(n.flags|=64,i=!0,Ei(r,!1),n.lanes=33554432)}else{if(!i)if(null!==(e=BE(s))){if(n.flags|=64,i=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.flags|=4),Ei(r,!0),null===r.tail&&"hidden"===r.tailMode&&!s.alternate&&!KE)return null!==(n=n.lastEffect=r.lastEffect)&&(n.nextEffect=null),null}else 2*q_()-r.renderingStartTime>xi&&1073741824!==t&&(n.flags|=64,i=!0,Ei(r,!1),n.lanes=33554432);r.isBackwards?(s.sibling=n.child,n.child=s):(null!==(t=r.last)?t.sibling=s:n.child=s,r.last=s)}return null!==r.tail?(t=r.tail,r.rendering=t,r.tail=t.sibling,r.lastEffect=n.lastEffect,r.renderingStartTime=q_(),t.sibling=null,n=VE.current,d_(VE,i?1&n|2:1&n),t):null;case 23:case 24:return CT(),null!==e&&null!==e.memoizedState!=(null!==n.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(n.flags|=4),null}throw Error(a(156,n.tag))}function ii(e){switch(e.tag){case 1:A_(e.type)&&D_();var n=e.flags;return 4096&n?(e.flags=-4097&n|64,e):null;case 3:if(XE(),o_(O_),o_(N_),jE(),0!=(64&(n=e.flags)))throw Error(a(285));return e.flags=-4097&n|64,e;case 5:return vE(e),null;case 13:return o_(VE),4096&(n=e.flags)?(e.flags=-4097&n|64,e):null;case 19:return o_(VE),null;case 4:return XE(),null;case 10:return rE(e),null;case 23:case 24:return CT(),null;default:return null}}function Ti(e,n){try{var t="",r=n;do{t+=H(r),r=r.return}while(r);var _=t}catch(E){_="\nError generating stack: "+E.message+"\n"+E.stack}return{value:e,source:n,stack:_}}function si(e,n){try{console.error(n.value)}catch(t){setTimeout((function(){throw t}))}}Qa=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Wa=function(e,n,t,r){var E=e.memoizedProps;if(E!==r){e=n.stateNode,wE(FE.current);var a,i=null;switch(t){case"input":E=J(e,E),r=J(e,r),i=[];break;case"option":E=Ee(e,E),r=Ee(e,r),i=[];break;case"select":E=_({},E,{value:void 0}),r=_({},r,{value:void 0}),i=[];break;case"textarea":E=ie(e,E),r=ie(e,r),i=[];break;default:"function"!=typeof E.onClick&&"function"==typeof r.onClick&&(e.onclick=Yr)}for(d in Ue(t,r),t=null,E)if(!r.hasOwnProperty(d)&&E.hasOwnProperty(d)&&null!=E[d])if("style"===d){var s=E[d];for(a in s)s.hasOwnProperty(a)&&(t||(t={}),t[a]="")}else"dangerouslySetInnerHTML"!==d&&"children"!==d&&"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&"autoFocus"!==d&&(T.hasOwnProperty(d)?i||(i=[]):(i=i||[]).push(d,null));for(d in r){var o=r[d];if(s=null!=E?E[d]:void 0,r.hasOwnProperty(d)&&o!==s&&(null!=o||null!=s))if("style"===d)if(s){for(a in s)!s.hasOwnProperty(a)||o&&o.hasOwnProperty(a)||(t||(t={}),t[a]="");for(a in o)o.hasOwnProperty(a)&&s[a]!==o[a]&&(t||(t={}),t[a]=o[a])}else t||(i||(i=[]),i.push(d,t)),t=o;else"dangerouslySetInnerHTML"===d?(o=o?o.__html:void 0,s=s?s.__html:void 0,null!=o&&s!==o&&(i=i||[]).push(d,o)):"children"===d?"string"!=typeof o&&"number"!=typeof o||(i=i||[]).push(d,""+o):"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&(T.hasOwnProperty(d)?(null!=o&&"onScroll"===d&&Mr("scroll",e),i||s===o||(i=[])):"object"==typeof o&&null!==o&&o.$$typeof===g?o.toString():(i=i||[]).push(d,o))}t&&(i=i||[]).push("style",t);var d=i;(n.updateQueue=d)&&(n.flags|=4)}},ja=function(e,n,t,r){t!==r&&(n.flags|=4)};var oi="function"==typeof WeakMap?WeakMap:Map;function di(e,n,t){(t=oE(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){ji||(ji=!0,Zi=r),si(0,n)},t}function Ii(e,n,t){(t=oE(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var _=n.value;t.payload=function(){return si(0,n),r(_)}}var E=e.stateNode;return null!==E&&"function"==typeof E.componentDidCatch&&(t.callback=function(){"function"!=typeof r&&(null===zi?zi=new Set([this]):zi.add(this),si(0,n));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}var Ni="function"==typeof WeakSet?WeakSet:Set;function Oi(e){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(t){yT(e,t)}else n.current=null}function Ri(e,n){switch(n.tag){case 0:case 11:case 15:case 22:case 5:case 6:case 4:case 17:return;case 1:if(256&n.flags&&null!==e){var t=e.memoizedProps,r=e.memoizedState;n=(e=n.stateNode).getSnapshotBeforeUpdate(n.elementType===n.type?t:z_(n.type,t),r),e.__reactInternalSnapshotBeforeUpdate=n}return;case 3:return void(256&n.flags&&Qr(n.stateNode.containerInfo))}throw Error(a(163))}function ui(e,n,t){switch(t.tag){case 0:case 11:case 15:case 22:if(null!==(n=null!==(n=t.updateQueue)?n.lastEffect:null)){e=n=n.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==n)}if(null!==(n=null!==(n=t.updateQueue)?n.lastEffect:null)){e=n=n.next;do{var _=e;r=_.next,0!=(4&(_=_.tag))&&0!=(1&_)&&(vT(t,e),gT(t,e)),e=r}while(e!==n)}return;case 1:return e=t.stateNode,4&t.flags&&(null===n?e.componentDidMount():(r=t.elementType===t.type?n.memoizedProps:z_(t.type,n.memoizedProps),e.componentDidUpdate(r,n.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(n=t.updateQueue)&&OE(t,n,e));case 3:if(null!==(n=t.updateQueue)){if(e=null,null!==t.child)switch(t.child.tag){case 5:case 1:e=t.child.stateNode}OE(t,n,e)}return;case 5:return e=t.stateNode,void(null===n&&4&t.flags&&qr(t.type,t.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:case 23:case 24:return;case 13:return void(null===t.memoizedState&&(t=t.alternate,null!==t&&(t=t.memoizedState,null!==t&&(t=t.dehydrated,null!==t&&Pn(t)))))}throw Error(a(163))}function Ai(e,n){for(var t=e;;){if(5===t.tag){var r=t.stateNode;if(n)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=t.stateNode;var _=t.memoizedProps.style;_=null!=_&&_.hasOwnProperty("display")?_.display:null,r.style.display=he("display",_)}}else if(6===t.tag)t.stateNode.nodeValue=n?"":t.memoizedProps;else if((23!==t.tag&&24!==t.tag||null===t.memoizedState||t===e)&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}}function Di(e,n){if(U_&&"function"==typeof U_.onCommitFiberUnmount)try{U_.onCommitFiberUnmount(P_,n)}catch(E){}switch(n.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=n.updateQueue)&&null!==(e=e.lastEffect)){var t=e=e.next;do{var r=t,_=r.destroy;if(r=r.tag,void 0!==_)if(0!=(4&r))vT(n,t);else{r=n;try{_()}catch(E){yT(r,E)}}t=t.next}while(t!==e)}break;case 1:if(Oi(n),"function"==typeof(e=n.stateNode).componentWillUnmount)try{e.props=n.memoizedProps,e.state=n.memoizedState,e.componentWillUnmount()}catch(E){yT(n,E)}break;case 5:Oi(n);break;case 4:Ui(e,n)}}function Si(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function li(e){return 5===e.tag||3===e.tag||4===e.tag}function hi(e){e:{for(var n=e.return;null!==n;){if(li(n))break e;n=n.return}throw Error(a(160))}var t=n;switch(n=t.stateNode,t.tag){case 5:var r=!1;break;case 3:case 4:n=n.containerInfo,r=!0;break;default:throw Error(a(161))}16&t.flags&&(De(n,""),t.flags&=-17);e:n:for(t=e;;){for(;null===t.sibling;){if(null===t.return||li(t.return)){t=null;break e}t=t.return}for(t.sibling.return=t.return,t=t.sibling;5!==t.tag&&6!==t.tag&&18!==t.tag;){if(2&t.flags)continue n;if(null===t.child||4===t.tag)continue n;t.child.return=t,t=t.child}if(!(2&t.flags)){t=t.stateNode;break e}}r?Ci(e,t,n):Pi(e,t,n)}function Ci(e,n,t){var r=e.tag,_=5===r||6===r;if(_)e=_?e.stateNode:e.stateNode.instance,n?8===t.nodeType?t.parentNode.insertBefore(e,n):t.insertBefore(e,n):(8===t.nodeType?(n=t.parentNode).insertBefore(e,t):(n=t).appendChild(e),null!=(t=t._reactRootContainer)||null!==n.onclick||(n.onclick=Yr));else if(4!==r&&null!==(e=e.child))for(Ci(e,n,t),e=e.sibling;null!==e;)Ci(e,n,t),e=e.sibling}function Pi(e,n,t){var r=e.tag,_=5===r||6===r;if(_)e=_?e.stateNode:e.stateNode.instance,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==r&&null!==(e=e.child))for(Pi(e,n,t),e=e.sibling;null!==e;)Pi(e,n,t),e=e.sibling}function Ui(e,n){for(var t,r,_=n,E=!1;;){if(!E){E=_.return;e:for(;;){if(null===E)throw Error(a(160));switch(t=E.stateNode,E.tag){case 5:r=!1;break e;case 3:case 4:t=t.containerInfo,r=!0;break e}E=E.return}E=!0}if(5===_.tag||6===_.tag){e:for(var i=e,T=_,s=T;;)if(Di(i,s),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===T)break e;for(;null===s.sibling;){if(null===s.return||s.return===T)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}r?(i=t,T=_.stateNode,8===i.nodeType?i.parentNode.removeChild(T):i.removeChild(T)):t.removeChild(_.stateNode)}else if(4===_.tag){if(null!==_.child){t=_.stateNode.containerInfo,r=!0,_.child.return=_,_=_.child;continue}}else if(Di(e,_),null!==_.child){_.child.return=_,_=_.child;continue}if(_===n)break;for(;null===_.sibling;){if(null===_.return||_.return===n)return;4===(_=_.return).tag&&(E=!1)}_.sibling.return=_.return,_=_.sibling}}function ci(e,n){switch(n.tag){case 0:case 11:case 14:case 15:case 22:var t=n.updateQueue;if(null!==(t=null!==t?t.lastEffect:null)){var r=t=t.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==t)}return;case 1:case 12:case 17:return;case 5:if(null!=(t=n.stateNode)){r=n.memoizedProps;var _=null!==e?e.memoizedProps:r;e=n.type;var E=n.updateQueue;if(n.updateQueue=null,null!==E){for(t[Jr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&ne(t,r),ce(e,_),n=ce(e,r),_=0;_<E.length;_+=2){var i=E[_],T=E[_+1];"style"===i?Ce(t,T):"dangerouslySetInnerHTML"===i?Ae(t,T):"children"===i?De(t,T):l(t,i,T,n)}switch(e){case"input":te(t,r);break;case"textarea":se(t,r);break;case"select":e=t._wrapperState.wasMultiple,t._wrapperState.wasMultiple=!!r.multiple,null!=(E=r.value)?ae(t,!!r.multiple,E,!1):e!==!!r.multiple&&(null!=r.defaultValue?ae(t,!!r.multiple,r.defaultValue,!0):ae(t,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===n.stateNode)throw Error(a(162));return void(n.stateNode.nodeValue=n.memoizedProps);case 3:return void((t=n.stateNode).hydrate&&(t.hydrate=!1,Pn(t.containerInfo)));case 13:return null!==n.memoizedState&&(ki=q_(),Ai(n.child,!0)),void pi(n);case 19:return void pi(n);case 23:case 24:return void Ai(n,null!==n.memoizedState)}throw Error(a(163))}function pi(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new Ni),n.forEach((function(n){var r=KT.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}function Li(e,n){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&(null!==(n=n.memoizedState)&&null===n.dehydrated)}var fi=Math.ceil,Fi=h.ReactCurrentDispatcher,Mi=h.ReactCurrentOwner,mi=0,wi=null,bi=null,Xi=0,gi=0,vi=s_(0),Vi=0,Bi=null,yi=0,Yi=0,Ki=0,Gi=0,qi=null,ki=0,xi=1/0;function Hi(){xi=q_()+500}var Qi,Wi=null,ji=!1,Zi=null,zi=null,$i=!1,Ji=null,eT=90,nT=[],tT=[],rT=null,_T=0,ET=null,aT=-1,iT=0,TT=0,sT=null,oT=!1;function dT(){return 0!=(48&mi)?q_():-1!==aT?aT:aT=q_()}function IT(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===k_()?1:2;if(0===iT&&(iT=yi),0!==Z_.transition){0!==TT&&(TT=null!==qi?qi.pendingLanes:0),e=iT;var n=4186112&~TT;return 0===(n&=-n)&&(0===(n=(e=4186112&~e)&-e)&&(n=8192)),n}return e=k_(),0!=(4&mi)&&98===e?e=Kn(12,iT):e=Kn(e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),iT),e}function NT(e,n,t){if(50<_T)throw _T=0,ET=null,Error(a(185));if(null===(e=OT(e,n)))return null;kn(e,n,t),e===wi&&(Ki|=n,4===Vi&&AT(e,Xi));var r=k_();1===n?0!=(8&mi)&&0==(48&mi)?DT(e):(RT(e,t),0===mi&&(Hi(),W_())):(0==(4&mi)||98!==r&&99!==r||(null===rT?rT=new Set([e]):rT.add(e)),RT(e,t)),qi=e}function OT(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}function RT(e,n){for(var t=e.callbackNode,r=e.suspendedLanes,_=e.pingedLanes,E=e.expirationTimes,i=e.pendingLanes;0<i;){var T=31-xn(i),s=1<<T,o=E[T];if(-1===o){if(0==(s&r)||0!=(s&_)){o=n,Bn(s);var d=Vn;E[T]=10<=d?o+250:6<=d?o+5e3:-1}}else o<=n&&(e.expiredLanes|=s);i&=~s}if(r=yn(e,e===wi?Xi:0),n=Vn,0===r)null!==t&&(t!==V_&&L_(t),e.callbackNode=null,e.callbackPriority=0);else{if(null!==t){if(e.callbackPriority===n)return;t!==V_&&L_(t)}15===n?(t=DT.bind(null,e),null===y_?(y_=[t],Y_=p_(w_,j_)):y_.push(t),t=V_):14===n?t=Q_(99,DT.bind(null,e)):(t=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(a(358,e))}}(n),t=Q_(t,uT.bind(null,e))),e.callbackPriority=n,e.callbackNode=t}}function uT(e){if(aT=-1,TT=iT=0,0!=(48&mi))throw Error(a(327));var n=e.callbackNode;if(XT()&&e.callbackNode!==n)return null;var t=yn(e,e===wi?Xi:0);if(0===t)return null;var r=t,_=mi;mi|=16;var E=cT();for(wi===e&&Xi===r||(Hi(),PT(e,r));;)try{fT();break}catch(T){UT(e,T)}if(tE(),Fi.current=E,mi=_,null!==bi?r=0:(wi=null,Xi=0,r=Vi),0!=(yi&Ki))PT(e,0);else if(0!==r){if(2===r&&(mi|=64,e.hydrate&&(e.hydrate=!1,Qr(e.containerInfo)),0!==(t=Yn(e))&&(r=pT(e,t))),1===r)throw n=Bi,PT(e,0),AT(e,t),RT(e,q_()),n;switch(e.finishedWork=e.current.alternate,e.finishedLanes=t,r){case 0:case 1:throw Error(a(345));case 2:case 5:mT(e);break;case 3:if(AT(e,t),(62914560&t)===t&&10<(r=ki+500-q_())){if(0!==yn(e,0))break;if(((_=e.suspendedLanes)&t)!==t){dT(),e.pingedLanes|=e.suspendedLanes&_;break}e.timeoutHandle=xr(mT.bind(null,e),r);break}mT(e);break;case 4:if(AT(e,t),(4186112&t)===t)break;for(r=e.eventTimes,_=-1;0<t;){var i=31-xn(t);E=1<<i,(i=r[i])>_&&(_=i),t&=~E}if(t=_,10<(t=(120>(t=q_()-t)?120:480>t?480:1080>t?1080:1920>t?1920:3e3>t?3e3:4320>t?4320:1960*fi(t/1960))-t)){e.timeoutHandle=xr(mT.bind(null,e),t);break}mT(e);break;default:throw Error(a(329))}}return RT(e,q_()),e.callbackNode===n?uT.bind(null,e):null}function AT(e,n){for(n&=~Gi,n&=~Ki,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-xn(n),r=1<<t;e[t]=-1,n&=~r}}function DT(e){if(0!=(48&mi))throw Error(a(327));if(XT(),e===wi&&0!=(e.expiredLanes&Xi)){var n=Xi,t=pT(e,n);0!=(yi&Ki)&&(t=pT(e,n=yn(e,n)))}else t=pT(e,n=yn(e,0));if(0!==e.tag&&2===t&&(mi|=64,e.hydrate&&(e.hydrate=!1,Qr(e.containerInfo)),0!==(n=Yn(e))&&(t=pT(e,n))),1===t)throw t=Bi,PT(e,0),AT(e,n),RT(e,q_()),t;return e.finishedWork=e.current.alternate,e.finishedLanes=n,mT(e),RT(e,q_()),null}function ST(e,n){var t=mi;mi|=1;try{return e(n)}finally{0===(mi=t)&&(Hi(),W_())}}function lT(e,n){var t=mi;mi&=-2,mi|=8;try{return e(n)}finally{0===(mi=t)&&(Hi(),W_())}}function hT(e,n){d_(vi,gi),gi|=n,yi|=n}function CT(){gi=vi.current,o_(vi)}function PT(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,Hr(t)),null!==bi)for(t=bi.return;null!==t;){var r=t;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&D_();break;case 3:XE(),o_(O_),o_(N_),jE();break;case 5:vE(r);break;case 4:XE();break;case 13:case 19:o_(VE);break;case 10:rE(r);break;case 23:case 24:CT()}t=t.return}wi=e,bi=xT(e.current,null),Xi=gi=yi=n,Vi=0,Bi=null,Gi=Ki=Yi=0}function UT(e,n){for(;;){var t=bi;try{if(tE(),ZE.current=ma,ta){for(var r=JE.memoizedState;null!==r;){var _=r.queue;null!==_&&(_.pending=null),r=r.next}ta=!1}if($E=0,na=ea=JE=null,ra=!1,Mi.current=null,null===t||null===t.return){Vi=1,Bi=n,bi=null;break}e:{var E=e,a=t.return,i=t,T=n;if(n=Xi,i.flags|=2048,i.firstEffect=i.lastEffect=null,null!==T&&"object"==typeof T&&"function"==typeof T.then){var s=T;if(0==(2&i.mode)){var o=i.alternate;o?(i.updateQueue=o.updateQueue,i.memoizedState=o.memoizedState,i.lanes=o.lanes):(i.updateQueue=null,i.memoizedState=null)}var d=0!=(1&VE.current),I=a;do{var N;if(N=13===I.tag){var O=I.memoizedState;if(null!==O)N=null!==O.dehydrated;else{var R=I.memoizedProps;N=void 0!==R.fallback&&(!0!==R.unstable_avoidThisFallback||!d)}}if(N){var u=I.updateQueue;if(null===u){var A=new Set;A.add(s),I.updateQueue=A}else u.add(s);if(0==(2&I.mode)){if(I.flags|=64,i.flags|=16384,i.flags&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var D=oE(-1,1);D.tag=2,dE(i,D)}i.lanes|=1;break e}T=void 0,i=n;var S=E.pingCache;if(null===S?(S=E.pingCache=new oi,T=new Set,S.set(s,T)):void 0===(T=S.get(s))&&(T=new Set,S.set(s,T)),!T.has(i)){T.add(i);var l=YT.bind(null,E,s,i);s.then(l,l)}I.flags|=4096,I.lanes=n;break e}I=I.return}while(null!==I);T=Error((Q(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Vi&&(Vi=2),T=Ti(T,i),I=a;do{switch(I.tag){case 3:E=T,I.flags|=4096,n&=-n,I.lanes|=n,IE(I,di(0,E,n));break e;case 1:E=T;var h=I.type,C=I.stateNode;if(0==(64&I.flags)&&("function"==typeof h.getDerivedStateFromError||null!==C&&"function"==typeof C.componentDidCatch&&(null===zi||!zi.has(C)))){I.flags|=4096,n&=-n,I.lanes|=n,IE(I,Ii(I,E,n));break e}}I=I.return}while(null!==I)}MT(t)}catch(P){n=P,bi===t&&null!==t&&(bi=t=t.return);continue}break}}function cT(){var e=Fi.current;return Fi.current=ma,null===e?ma:e}function pT(e,n){var t=mi;mi|=16;var r=cT();for(wi===e&&Xi===n||PT(e,n);;)try{LT();break}catch(_){UT(e,_)}if(tE(),mi=t,Fi.current=r,null!==bi)throw Error(a(261));return wi=null,Xi=0,Vi}function LT(){for(;null!==bi;)FT(bi)}function fT(){for(;null!==bi&&!f_();)FT(bi)}function FT(e){var n=Qi(e.alternate,e,gi);e.memoizedProps=e.pendingProps,null===n?MT(e):bi=n,Mi.current=null}function MT(e){var n=e;do{var t=n.alternate;if(e=n.return,0==(2048&n.flags)){if(null!==(t=ai(t,n,gi)))return void(bi=t);if(24!==(t=n).tag&&23!==t.tag||null===t.memoizedState||0!=(1073741824&gi)||0==(4&t.mode)){for(var r=0,_=t.child;null!==_;)r|=_.lanes|_.childLanes,_=_.sibling;t.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=n.firstEffect),null!==n.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=n.firstEffect),e.lastEffect=n.lastEffect),1<n.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=n:e.firstEffect=n,e.lastEffect=n))}else{if(null!==(t=ii(n)))return t.flags&=2047,void(bi=t);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(n=n.sibling))return void(bi=n);bi=n=e}while(null!==n);0===Vi&&(Vi=5)}function mT(e){var n=k_();return H_(99,wT.bind(null,e,n)),null}function wT(e,n){do{XT()}while(null!==Ji);if(0!=(48&mi))throw Error(a(327));var t=e.finishedWork;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(a(177));e.callbackNode=null;var r=t.lanes|t.childLanes,_=r,E=e.pendingLanes&~_;e.pendingLanes=_,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=_,e.mutableReadLanes&=_,e.entangledLanes&=_,_=e.entanglements;for(var i=e.eventTimes,T=e.expirationTimes;0<E;){var s=31-xn(E),o=1<<s;_[s]=0,i[s]=-1,T[s]=-1,E&=~o}if(null!==rT&&0==(24&r)&&rT.has(e)&&rT.delete(e),e===wi&&(bi=wi=null,Xi=0),1<t.flags?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,null!==r){if(_=mi,mi|=32,Mi.current=null,Kr=Zn,Ar(i=ur())){if("selectionStart"in i)T={start:i.selectionStart,end:i.selectionEnd};else e:if(T=(T=i.ownerDocument)&&T.defaultView||window,(o=T.getSelection&&T.getSelection())&&0!==o.rangeCount){T=o.anchorNode,E=o.anchorOffset,s=o.focusNode,o=o.focusOffset;try{T.nodeType,s.nodeType}catch(p){T=null;break e}var d=0,I=-1,N=-1,O=0,R=0,u=i,A=null;n:for(;;){for(var D;u!==T||0!==E&&3!==u.nodeType||(I=d+E),u!==s||0!==o&&3!==u.nodeType||(N=d+o),3===u.nodeType&&(d+=u.nodeValue.length),null!==(D=u.firstChild);)A=u,u=D;for(;;){if(u===i)break n;if(A===T&&++O===E&&(I=d),A===s&&++R===o&&(N=d),null!==(D=u.nextSibling))break;A=(u=A).parentNode}u=D}T=-1===I||-1===N?null:{start:I,end:N}}else T=null;T=T||{start:0,end:0}}else T=null;Gr={focusedElem:i,selectionRange:T},Zn=!1,sT=null,oT=!1,Wi=r;do{try{bT()}catch(p){if(null===Wi)throw Error(a(330));yT(Wi,p),Wi=Wi.nextEffect}}while(null!==Wi);sT=null,Wi=r;do{try{for(i=e;null!==Wi;){var S=Wi.flags;if(16&S&&De(Wi.stateNode,""),128&S){var l=Wi.alternate;if(null!==l){var h=l.ref;null!==h&&("function"==typeof h?h(null):h.current=null)}}switch(1038&S){case 2:hi(Wi),Wi.flags&=-3;break;case 6:hi(Wi),Wi.flags&=-3,ci(Wi.alternate,Wi);break;case 1024:Wi.flags&=-1025;break;case 1028:Wi.flags&=-1025,ci(Wi.alternate,Wi);break;case 4:ci(Wi.alternate,Wi);break;case 8:Ui(i,T=Wi);var C=T.alternate;Si(T),null!==C&&Si(C)}Wi=Wi.nextEffect}}catch(p){if(null===Wi)throw Error(a(330));yT(Wi,p),Wi=Wi.nextEffect}}while(null!==Wi);if(h=Gr,l=ur(),S=h.focusedElem,i=h.selectionRange,l!==S&&S&&S.ownerDocument&&Rr(S.ownerDocument.documentElement,S)){null!==i&&Ar(S)&&(l=i.start,void 0===(h=i.end)&&(h=l),"selectionStart"in S?(S.selectionStart=l,S.selectionEnd=Math.min(h,S.value.length)):(h=(l=S.ownerDocument||document)&&l.defaultView||window).getSelection&&(h=h.getSelection(),T=S.textContent.length,C=Math.min(i.start,T),i=void 0===i.end?C:Math.min(i.end,T),!h.extend&&C>i&&(T=i,i=C,C=T),T=Or(S,C),E=Or(S,i),T&&E&&(1!==h.rangeCount||h.anchorNode!==T.node||h.anchorOffset!==T.offset||h.focusNode!==E.node||h.focusOffset!==E.offset)&&((l=l.createRange()).setStart(T.node,T.offset),h.removeAllRanges(),C>i?(h.addRange(l),h.extend(E.node,E.offset)):(l.setEnd(E.node,E.offset),h.addRange(l))))),l=[];for(h=S;h=h.parentNode;)1===h.nodeType&&l.push({element:h,left:h.scrollLeft,top:h.scrollTop});for("function"==typeof S.focus&&S.focus(),S=0;S<l.length;S++)(h=l[S]).element.scrollLeft=h.left,h.element.scrollTop=h.top}Zn=!!Kr,Gr=Kr=null,e.current=t,Wi=r;do{try{for(S=e;null!==Wi;){var P=Wi.flags;if(36&P&&ui(S,Wi.alternate,Wi),128&P){l=void 0;var U=Wi.ref;if(null!==U){var c=Wi.stateNode;Wi.tag,l=c,"function"==typeof U?U(l):U.current=l}}Wi=Wi.nextEffect}}catch(p){if(null===Wi)throw Error(a(330));yT(Wi,p),Wi=Wi.nextEffect}}while(null!==Wi);Wi=null,B_(),mi=_}else e.current=t;if($i)$i=!1,Ji=e,eT=n;else for(Wi=r;null!==Wi;)n=Wi.nextEffect,Wi.nextEffect=null,8&Wi.flags&&((P=Wi).sibling=null,P.stateNode=null),Wi=n;if(0===(r=e.pendingLanes)&&(zi=null),1===r?e===ET?_T++:(_T=0,ET=e):_T=0,t=t.stateNode,U_&&"function"==typeof U_.onCommitFiberRoot)try{U_.onCommitFiberRoot(P_,t,void 0,64==(64&t.current.flags))}catch(p){}if(RT(e,q_()),ji)throw ji=!1,e=Zi,Zi=null,e;return 0!=(8&mi)||W_(),null}function bT(){for(;null!==Wi;){var e=Wi.alternate;oT||null===sT||(0!=(8&Wi.flags)?en(Wi,sT)&&(oT=!0):13===Wi.tag&&Li(e,Wi)&&en(Wi,sT)&&(oT=!0));var n=Wi.flags;0!=(256&n)&&Ri(e,Wi),0==(512&n)||$i||($i=!0,Q_(97,(function(){return XT(),null}))),Wi=Wi.nextEffect}}function XT(){if(90!==eT){var e=97<eT?97:eT;return eT=90,H_(e,VT)}return!1}function gT(e,n){nT.push(n,e),$i||($i=!0,Q_(97,(function(){return XT(),null})))}function vT(e,n){tT.push(n,e),$i||($i=!0,Q_(97,(function(){return XT(),null})))}function VT(){if(null===Ji)return!1;var e=Ji;if(Ji=null,0!=(48&mi))throw Error(a(331));var n=mi;mi|=32;var t=tT;tT=[];for(var r=0;r<t.length;r+=2){var _=t[r],E=t[r+1],i=_.destroy;if(_.destroy=void 0,"function"==typeof i)try{i()}catch(s){if(null===E)throw Error(a(330));yT(E,s)}}for(t=nT,nT=[],r=0;r<t.length;r+=2){_=t[r],E=t[r+1];try{var T=_.create;_.destroy=T()}catch(s){if(null===E)throw Error(a(330));yT(E,s)}}for(T=e.current.firstEffect;null!==T;)e=T.nextEffect,T.nextEffect=null,8&T.flags&&(T.sibling=null,T.stateNode=null),T=e;return mi=n,W_(),!0}function BT(e,n,t){dE(e,n=di(0,n=Ti(t,n),1)),n=dT(),null!==(e=OT(e,1))&&(kn(e,1,n),RT(e,n))}function yT(e,n){if(3===e.tag)BT(e,e,n);else for(var t=e.return;null!==t;){if(3===t.tag){BT(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===zi||!zi.has(r))){var _=Ii(t,e=Ti(n,e),1);if(dE(t,_),_=dT(),null!==(t=OT(t,1)))kn(t,1,_),RT(t,_);else if("function"==typeof r.componentDidCatch&&(null===zi||!zi.has(r)))try{r.componentDidCatch(n,e)}catch(E){}break}}t=t.return}}function YT(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=dT(),e.pingedLanes|=e.suspendedLanes&t,wi===e&&(Xi&t)===t&&(4===Vi||3===Vi&&(62914560&Xi)===Xi&&500>q_()-ki?PT(e,0):Gi|=t),RT(e,n)}function KT(e,n){var t=e.stateNode;null!==t&&t.delete(n),0===(n=0)&&(0==(2&(n=e.mode))?n=1:0==(4&n)?n=99===k_()?1:2:(0===iT&&(iT=yi),0===(n=Gn(62914560&~iT))&&(n=4194304))),t=dT(),null!==(e=OT(e,n))&&(kn(e,n,t),RT(e,t))}function GT(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function qT(e,n,t,r){return new GT(e,n,t,r)}function kT(e){return!(!(e=e.prototype)||!e.isReactComponent)}function xT(e,n){var t=e.alternate;return null===t?((t=qT(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.nextEffect=null,t.firstEffect=null,t.lastEffect=null),t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function HT(e,n,t,r,_,E){var i=2;if(r=e,"function"==typeof e)kT(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case U:return QT(t.children,_,E,n);case v:i=8,_|=16;break;case c:i=8,_|=1;break;case p:return(e=qT(12,t,n,8|_)).elementType=p,e.type=p,e.lanes=E,e;case M:return(e=qT(13,t,n,_)).type=M,e.elementType=M,e.lanes=E,e;case m:return(e=qT(19,t,n,_)).elementType=m,e.lanes=E,e;case V:return WT(t,_,E,n);case B:return(e=qT(24,t,n,_)).elementType=B,e.lanes=E,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case L:i=10;break e;case f:i=9;break e;case F:i=11;break e;case w:i=14;break e;case b:i=16,r=null;break e;case X:i=22;break e}throw Error(a(130,null==e?e:typeof e,""))}return(n=qT(i,t,n,_)).elementType=e,n.type=r,n.lanes=E,n}function QT(e,n,t,r){return(e=qT(7,e,r,n)).lanes=t,e}function WT(e,n,t,r){return(e=qT(23,e,r,n)).elementType=V,e.lanes=t,e}function jT(e,n,t){return(e=qT(6,e,null,n)).lanes=t,e}function ZT(e,n,t){return(n=qT(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function zT(e,n,t){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=t,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=qn(0),this.expirationTimes=qn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=qn(0),this.mutableSourceEagerHydrationData=null}function $T(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:P,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}function JT(e,n,t,r){var _=n.current,E=dT(),i=IT(_);e:if(t){n:{if(Ze(t=t._reactInternals)!==t||1!==t.tag)throw Error(a(170));var T=t;do{switch(T.tag){case 3:T=T.stateNode.context;break n;case 1:if(A_(T.type)){T=T.stateNode.__reactInternalMemoizedMergedChildContext;break n}}T=T.return}while(null!==T);throw Error(a(171))}if(1===t.tag){var s=t.type;if(A_(s)){t=l_(t,s,T);break e}}t=T}else t=I_;return null===n.context?n.context=t:n.pendingContext=t,(n=oE(E,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),dE(_,n),NT(_,i,E),i}function es(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function ns(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function ts(e,n){ns(e,n),(e=e.alternate)&&ns(e,n)}function rs(e,n,t){var r=null!=t&&null!=t.hydrationOptions&&t.hydrationOptions.mutableSources||null;if(t=new zT(e,n,null!=t&&!0===t.hydrate),n=qT(3,null,null,2===n?7:1===n?3:0),t.current=n,n.stateNode=t,TE(n),e[e_]=t.current,wr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var _=(n=r[e])._getVersion;_=_(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,_]:t.mutableSourceEagerHydrationData.push(n,_)}this._internalRoot=t}function _s(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Es(e,n,t,r,_){var E=t._reactRootContainer;if(E){var a=E._internalRoot;if("function"==typeof _){var i=_;_=function(){var e=es(a);i.call(e)}}JT(n,a,e,_)}else{if(E=t._reactRootContainer=function(e,n){if(n||(n=!(!(n=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==n.nodeType||!n.hasAttribute("data-reactroot"))),!n)for(var t;t=e.lastChild;)e.removeChild(t);return new rs(e,0,n?{hydrate:!0}:void 0)}(t,r),a=E._internalRoot,"function"==typeof _){var T=_;_=function(){var e=es(a);T.call(e)}}lT((function(){JT(n,a,e,_)}))}return es(a)}function as(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!_s(n))throw Error(a(200));return $T(e,n,null,t)}Qi=function(e,n,t){var r=n.lanes;if(null!==e)if(e.memoizedProps!==n.pendingProps||O_.current)va=!0;else{if(0==(t&r)){switch(va=!1,n.tag){case 3:Ha(n),QE();break;case 5:gE(n);break;case 1:A_(n.type)&&h_(n);break;case 4:bE(n,n.stateNode.containerInfo);break;case 10:r=n.memoizedProps.value;var _=n.type._context;d_($_,_._currentValue),_._currentValue=r;break;case 13:if(null!==n.memoizedState)return 0!=(t&n.child.childLanes)?za(e,n,t):(d_(VE,1&VE.current),null!==(n=_i(e,n,t))?n.sibling:null);d_(VE,1&VE.current);break;case 19:if(r=0!=(t&n.childLanes),0!=(64&e.flags)){if(r)return ri(e,n,t);n.flags|=64}if(null!==(_=n.memoizedState)&&(_.rendering=null,_.tail=null,_.lastEffect=null),d_(VE,VE.current),r)break;return null;case 23:case 24:return n.lanes=0,Ka(e,n,t)}return _i(e,n,t)}va=0!=(16384&e.flags)}else va=!1;switch(n.lanes=0,n.tag){case 2:if(r=n.type,null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),e=n.pendingProps,_=u_(n,N_.current),EE(n,t),_=aa(null,n,r,e,_,t),n.flags|=1,"object"==typeof _&&null!==_&&"function"==typeof _.render&&void 0===_.$$typeof){if(n.tag=1,n.memoizedState=null,n.updateQueue=null,A_(r)){var E=!0;h_(n)}else E=!1;n.memoizedState=null!==_.state&&void 0!==_.state?_.state:null,TE(n);var i=r.getDerivedStateFromProps;"function"==typeof i&&uE(n,r,i,e),_.updater=AE,n.stateNode=_,_._reactInternals=n,hE(n,r,e,t),n=xa(null,n,r,!0,E,t)}else n.tag=0,Va(null,n,_,t),n=n.child;return n;case 16:_=n.elementType;e:{switch(null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),e=n.pendingProps,_=(E=_._init)(_._payload),n.type=_,E=n.tag=function(e){if("function"==typeof e)return kT(e)?1:0;if(null!=e){if((e=e.$$typeof)===F)return 11;if(e===w)return 14}return 2}(_),e=z_(_,e),E){case 0:n=qa(null,n,_,e,t);break e;case 1:n=ka(null,n,_,e,t);break e;case 11:n=Ba(null,n,_,e,t);break e;case 14:n=ya(null,n,_,z_(_.type,e),r,t);break e}throw Error(a(306,_,""))}return n;case 0:return r=n.type,_=n.pendingProps,qa(e,n,r,_=n.elementType===r?_:z_(r,_),t);case 1:return r=n.type,_=n.pendingProps,ka(e,n,r,_=n.elementType===r?_:z_(r,_),t);case 3:if(Ha(n),r=n.updateQueue,null===e||null===r)throw Error(a(282));if(r=n.pendingProps,_=null!==(_=n.memoizedState)?_.element:null,sE(e,n),NE(n,r,null,t),(r=n.memoizedState.element)===_)QE(),n=_i(e,n,t);else{if((E=(_=n.stateNode).hydrate)&&(YE=Wr(n.stateNode.containerInfo.firstChild),yE=n,E=KE=!0),E){if(null!=(e=_.mutableSourceEagerHydrationData))for(_=0;_<e.length;_+=2)(E=e[_])._workInProgressVersionPrimary=e[_+1],WE.push(E);for(t=LE(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|1024,t=t.sibling}else Va(e,n,r,t),QE();n=n.child}return n;case 5:return gE(n),null===e&&kE(n),r=n.type,_=n.pendingProps,E=null!==e?e.memoizedProps:null,i=_.children,kr(r,_)?i=null:null!==E&&kr(r,E)&&(n.flags|=16),Ga(e,n),Va(e,n,i,t),n.child;case 6:return null===e&&kE(n),null;case 13:return za(e,n,t);case 4:return bE(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=pE(n,null,r,t):Va(e,n,r,t),n.child;case 11:return r=n.type,_=n.pendingProps,Ba(e,n,r,_=n.elementType===r?_:z_(r,_),t);case 7:return Va(e,n,n.pendingProps,t),n.child;case 8:case 12:return Va(e,n,n.pendingProps.children,t),n.child;case 10:e:{r=n.type._context,_=n.pendingProps,i=n.memoizedProps,E=_.value;var T=n.type._context;if(d_($_,T._currentValue),T._currentValue=E,null!==i)if(T=i.value,0===(E=or(T,E)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(T,E):1073741823))){if(i.children===_.children&&!O_.current){n=_i(e,n,t);break e}}else for(null!==(T=n.child)&&(T.return=n);null!==T;){var s=T.dependencies;if(null!==s){i=T.child;for(var o=s.firstContext;null!==o;){if(o.context===r&&0!=(o.observedBits&E)){1===T.tag&&((o=oE(-1,t&-t)).tag=2,dE(T,o)),T.lanes|=t,null!==(o=T.alternate)&&(o.lanes|=t),_E(T.return,t),s.lanes|=t;break}o=o.next}}else i=10===T.tag&&T.type===n.type?null:T.child;if(null!==i)i.return=T;else for(i=T;null!==i;){if(i===n){i=null;break}if(null!==(T=i.sibling)){T.return=i.return,i=T;break}i=i.return}T=i}Va(e,n,_.children,t),n=n.child}return n;case 9:return _=n.type,r=(E=n.pendingProps).children,EE(n,t),r=r(_=aE(_,E.unstable_observedBits)),n.flags|=1,Va(e,n,r,t),n.child;case 14:return E=z_(_=n.type,n.pendingProps),ya(e,n,_,E=z_(_.type,E),r,t);case 15:return Ya(e,n,n.type,n.pendingProps,r,t);case 17:return r=n.type,_=n.pendingProps,_=n.elementType===r?_:z_(r,_),null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),n.tag=1,A_(r)?(e=!0,h_(n)):e=!1,EE(n,t),SE(n,r,_),hE(n,r,_,t),xa(null,n,r,!0,e,t);case 19:return ri(e,n,t);case 23:case 24:return Ka(e,n,t)}throw Error(a(156,n.tag))},rs.prototype.render=function(e){JT(e,this._internalRoot,null,null)},rs.prototype.unmount=function(){var e=this._internalRoot,n=e.containerInfo;JT(null,e,null,(function(){n[e_]=null}))},nn=function(e){13===e.tag&&(NT(e,4,dT()),ts(e,4))},tn=function(e){13===e.tag&&(NT(e,67108864,dT()),ts(e,67108864))},rn=function(e){if(13===e.tag){var n=dT(),t=IT(e);NT(e,t,n),ts(e,t)}},_n=function(e,n){return n()},Le=function(e,n,t){switch(n){case"input":if(te(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var _=E_(r);if(!_)throw Error(a(90));z(r),te(r,_)}}}break;case"textarea":se(e,t);break;case"select":null!=(n=t.value)&&ae(e,!!t.multiple,n,!1)}},be=ST,Xe=function(e,n,t,r,_){var E=mi;mi|=4;try{return H_(98,e.bind(null,n,t,r,_))}finally{0===(mi=E)&&(Hi(),W_())}},ge=function(){0==(49&mi)&&(function(){if(null!==rT){var e=rT;rT=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,RT(e,q_())}))}W_()}(),XT())},ve=function(e,n){var t=mi;mi|=2;try{return e(n)}finally{0===(mi=t)&&(Hi(),W_())}};var is={Events:[r_,__,E_,me,we,XT,{current:!1}]},Ts={findFiberByHostInstance:t_,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},ss={bundleType:Ts.bundleType,version:Ts.version,rendererPackageName:Ts.rendererPackageName,rendererConfig:Ts.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:h.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Je(e))?null:e.stateNode},findFiberByHostInstance:Ts.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var os=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!os.isDisabled&&os.supportsFiber)try{P_=os.inject(ss),U_=os}catch(ue){}}n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=is,n.createPortal=as,n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternals;if(void 0===n){if("function"==typeof e.render)throw Error(a(188));throw Error(a(268,Object.keys(e)))}return e=null===(e=Je(n))?null:e.stateNode},n.flushSync=function(e,n){var t=mi;if(0!=(48&t))return e(n);mi|=1;try{if(e)return H_(99,e.bind(null,n))}finally{mi=t,W_()}},n.hydrate=function(e,n,t){if(!_s(n))throw Error(a(200));return Es(null,e,n,!0,t)},n.render=function(e,n,t){if(!_s(n))throw Error(a(200));return Es(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!_s(e))throw Error(a(40));return!!e._reactRootContainer&&(lT((function(){Es(null,null,e,!1,(function(){e._reactRootContainer=null,e[e_]=null}))})),!0)},n.unstable_batchedUpdates=ST,n.unstable_createPortal=function(e,n){return as(e,n,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},n.unstable_renderSubtreeIntoContainer=function(e,n,t,r){if(!_s(t))throw Error(a(200));if(null==e||void 0===e._reactInternals)throw Error(a(38));return Es(e,n,t,!1,r)},n.version="17.0.2"},3935:function(e,n,t){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(n){console.error(n)}}(),e.exports=t(4448)},9590:function(e){var n="undefined"!=typeof Element,t="function"==typeof Map,r="function"==typeof Set,_="function"==typeof ArrayBuffer&&!!ArrayBuffer.isView;function E(e,a){if(e===a)return!0;if(e&&a&&"object"==typeof e&&"object"==typeof a){if(e.constructor!==a.constructor)return!1;var i,T,s,o;if(Array.isArray(e)){if((i=e.length)!=a.length)return!1;for(T=i;0!=T--;)if(!E(e[T],a[T]))return!1;return!0}if(t&&e instanceof Map&&a instanceof Map){if(e.size!==a.size)return!1;for(o=e.entries();!(T=o.next()).done;)if(!a.has(T.value[0]))return!1;for(o=e.entries();!(T=o.next()).done;)if(!E(T.value[1],a.get(T.value[0])))return!1;return!0}if(r&&e instanceof Set&&a instanceof Set){if(e.size!==a.size)return!1;for(o=e.entries();!(T=o.next()).done;)if(!a.has(T.value[0]))return!1;return!0}if(_&&ArrayBuffer.isView(e)&&ArrayBuffer.isView(a)){if((i=e.length)!=a.length)return!1;for(T=i;0!=T--;)if(e[T]!==a[T])return!1;return!0}if(e.constructor===RegExp)return e.source===a.source&&e.flags===a.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===a.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===a.toString();if((i=(s=Object.keys(e)).length)!==Object.keys(a).length)return!1;for(T=i;0!=T--;)if(!Object.prototype.hasOwnProperty.call(a,s[T]))return!1;if(n&&e instanceof Element)return!1;for(T=i;0!=T--;)if(("_owner"!==s[T]&&"__v"!==s[T]&&"__o"!==s[T]||!e.$$typeof)&&!E(e[s[T]],a[s[T]]))return!1;return!0}return e!=e&&a!=a}e.exports=function(e,n){try{return E(e,n)}catch(t){if((t.message||"").match(/stack|recursion/i))return console.warn("react-fast-compare cannot handle circular refs"),!1;throw t}}},405:function(e,n,t){"use strict";t.d(n,{B6:function(){return x},ql:function(){return J}});var r=t(7294),_=t(5697),E=t.n(_),a=t(9590),i=t.n(a),T=t(1143),s=t.n(T),o=t(6774),d=t.n(o);function I(){return I=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},I.apply(this,arguments)}function N(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,O(e,n)}function O(e,n){return O=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e},O(e,n)}function R(e,n){if(null==e)return{};var t,r,_={},E=Object.keys(e);for(r=0;r<E.length;r++)n.indexOf(t=E[r])>=0||(_[t]=e[t]);return _}var u={BASE:"base",BODY:"body",HEAD:"head",HTML:"html",LINK:"link",META:"meta",NOSCRIPT:"noscript",SCRIPT:"script",STYLE:"style",TITLE:"title",FRAGMENT:"Symbol(react.fragment)"},A={rel:["amphtml","canonical","alternate"]},D={type:["application/ld+json"]},S={charset:"",name:["robots","description"],property:["og:type","og:title","og:url","og:image","og:image:alt","og:description","twitter:url","twitter:title","twitter:description","twitter:image","twitter:image:alt","twitter:card","twitter:site"]},l=Object.keys(u).map((function(e){return u[e]})),h={accesskey:"accessKey",charset:"charSet",class:"className",contenteditable:"contentEditable",contextmenu:"contextMenu","http-equiv":"httpEquiv",itemprop:"itemProp",tabindex:"tabIndex"},C=Object.keys(h).reduce((function(e,n){return e[h[n]]=n,e}),{}),P=function(e,n){for(var t=e.length-1;t>=0;t-=1){var r=e[t];if(Object.prototype.hasOwnProperty.call(r,n))return r[n]}return null},U=function(e){var n=P(e,u.TITLE),t=P(e,"titleTemplate");if(Array.isArray(n)&&(n=n.join("")),t&&n)return t.replace(/%s/g,(function(){return n}));var r=P(e,"defaultTitle");return n||r||void 0},c=function(e){return P(e,"onChangeClientState")||function(){}},p=function(e,n){return n.filter((function(n){return void 0!==n[e]})).map((function(n){return n[e]})).reduce((function(e,n){return I({},e,n)}),{})},L=function(e,n){return n.filter((function(e){return void 0!==e[u.BASE]})).map((function(e){return e[u.BASE]})).reverse().reduce((function(n,t){if(!n.length)for(var r=Object.keys(t),_=0;_<r.length;_+=1){var E=r[_].toLowerCase();if(-1!==e.indexOf(E)&&t[E])return n.concat(t)}return n}),[])},f=function(e,n,t){var r={};return t.filter((function(n){return!!Array.isArray(n[e])||(void 0!==n[e]&&console&&"function"==typeof console.warn&&console.warn("Helmet: "+e+' should be of type "Array". Instead found type "'+typeof n[e]+'"'),!1)})).map((function(n){return n[e]})).reverse().reduce((function(e,t){var _={};t.filter((function(e){for(var t,E=Object.keys(e),a=0;a<E.length;a+=1){var i=E[a],T=i.toLowerCase();-1===n.indexOf(T)||"rel"===t&&"canonical"===e[t].toLowerCase()||"rel"===T&&"stylesheet"===e[T].toLowerCase()||(t=T),-1===n.indexOf(i)||"innerHTML"!==i&&"cssText"!==i&&"itemprop"!==i||(t=i)}if(!t||!e[t])return!1;var s=e[t].toLowerCase();return r[t]||(r[t]={}),_[t]||(_[t]={}),!r[t][s]&&(_[t][s]=!0,!0)})).reverse().forEach((function(n){return e.push(n)}));for(var E=Object.keys(_),a=0;a<E.length;a+=1){var i=E[a],T=I({},r[i],_[i]);r[i]=T}return e}),[]).reverse()},F=function(e,n){if(Array.isArray(e)&&e.length)for(var t=0;t<e.length;t+=1)if(e[t][n])return!0;return!1},M=function(e){return Array.isArray(e)?e.join(""):e},m=function(e,n){return Array.isArray(e)?e.reduce((function(e,t){return function(e,n){for(var t=Object.keys(e),r=0;r<t.length;r+=1)if(n[t[r]]&&n[t[r]].includes(e[t[r]]))return!0;return!1}(t,n)?e.priority.push(t):e.default.push(t),e}),{priority:[],default:[]}):{default:e}},w=function(e,n){var t;return I({},e,((t={})[n]=void 0,t))},b=[u.NOSCRIPT,u.SCRIPT,u.STYLE],X=function(e,n){return void 0===n&&(n=!0),!1===n?String(e):String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")},g=function(e){return Object.keys(e).reduce((function(n,t){var r=void 0!==e[t]?t+'="'+e[t]+'"':""+t;return n?n+" "+r:r}),"")},v=function(e,n){return void 0===n&&(n={}),Object.keys(e).reduce((function(n,t){return n[h[t]||t]=e[t],n}),n)},V=function(e,n){return n.map((function(n,t){var _,E=((_={key:t})["data-rh"]=!0,_);return Object.keys(n).forEach((function(e){var t=h[e]||e;"innerHTML"===t||"cssText"===t?E.dangerouslySetInnerHTML={__html:n.innerHTML||n.cssText}:E[t]=n[e]})),r.createElement(e,E)}))},B=function(e,n,t){switch(e){case u.TITLE:return{toComponent:function(){return t=n.titleAttributes,(_={key:e=n.title})["data-rh"]=!0,E=v(t,_),[r.createElement(u.TITLE,E,e)];var e,t,_,E},toString:function(){return function(e,n,t,r){var _=g(t),E=M(n);return _?"<"+e+' data-rh="true" '+_+">"+X(E,r)+"</"+e+">":"<"+e+' data-rh="true">'+X(E,r)+"</"+e+">"}(e,n.title,n.titleAttributes,t)}};case"bodyAttributes":case"htmlAttributes":return{toComponent:function(){return v(n)},toString:function(){return g(n)}};default:return{toComponent:function(){return V(e,n)},toString:function(){return function(e,n,t){return n.reduce((function(n,r){var _=Object.keys(r).filter((function(e){return!("innerHTML"===e||"cssText"===e)})).reduce((function(e,n){var _=void 0===r[n]?n:n+'="'+X(r[n],t)+'"';return e?e+" "+_:_}),""),E=r.innerHTML||r.cssText||"",a=-1===b.indexOf(e);return n+"<"+e+' data-rh="true" '+_+(a?"/>":">"+E+"</"+e+">")}),"")}(e,n,t)}}}},y=function(e){var n=e.baseTag,t=e.bodyAttributes,r=e.encode,_=e.htmlAttributes,E=e.noscriptTags,a=e.styleTags,i=e.title,T=void 0===i?"":i,s=e.titleAttributes,o=e.linkTags,d=e.metaTags,I=e.scriptTags,N={toComponent:function(){},toString:function(){return""}};if(e.prioritizeSeoTags){var O=function(e){var n=e.linkTags,t=e.scriptTags,r=e.encode,_=m(e.metaTags,S),E=m(n,A),a=m(t,D);return{priorityMethods:{toComponent:function(){return[].concat(V(u.META,_.priority),V(u.LINK,E.priority),V(u.SCRIPT,a.priority))},toString:function(){return B(u.META,_.priority,r)+" "+B(u.LINK,E.priority,r)+" "+B(u.SCRIPT,a.priority,r)}},metaTags:_.default,linkTags:E.default,scriptTags:a.default}}(e);N=O.priorityMethods,o=O.linkTags,d=O.metaTags,I=O.scriptTags}return{priority:N,base:B(u.BASE,n,r),bodyAttributes:B("bodyAttributes",t,r),htmlAttributes:B("htmlAttributes",_,r),link:B(u.LINK,o,r),meta:B(u.META,d,r),noscript:B(u.NOSCRIPT,E,r),script:B(u.SCRIPT,I,r),style:B(u.STYLE,a,r),title:B(u.TITLE,{title:T,titleAttributes:s},r)}},Y=[],K=function(e,n){var t=this;void 0===n&&(n="undefined"!=typeof document),this.instances=[],this.value={setHelmet:function(e){t.context.helmet=e},helmetInstances:{get:function(){return t.canUseDOM?Y:t.instances},add:function(e){(t.canUseDOM?Y:t.instances).push(e)},remove:function(e){var n=(t.canUseDOM?Y:t.instances).indexOf(e);(t.canUseDOM?Y:t.instances).splice(n,1)}}},this.context=e,this.canUseDOM=n,n||(e.helmet=y({baseTag:[],bodyAttributes:{},encodeSpecialCharacters:!0,htmlAttributes:{},linkTags:[],metaTags:[],noscriptTags:[],scriptTags:[],styleTags:[],title:"",titleAttributes:{}}))},G=r.createContext({}),q=E().shape({setHelmet:E().func,helmetInstances:E().shape({get:E().func,add:E().func,remove:E().func})}),k="undefined"!=typeof document,x=function(e){function n(t){var r;return(r=e.call(this,t)||this).helmetData=new K(r.props.context,n.canUseDOM),r}return N(n,e),n.prototype.render=function(){return r.createElement(G.Provider,{value:this.helmetData.value},this.props.children)},n}(r.Component);x.canUseDOM=k,x.propTypes={context:E().shape({helmet:E().shape()}),children:E().node.isRequired},x.defaultProps={context:{}},x.displayName="HelmetProvider";var H=function(e,n){var t,r=document.head||document.querySelector(u.HEAD),_=r.querySelectorAll(e+"[data-rh]"),E=[].slice.call(_),a=[];return n&&n.length&&n.forEach((function(n){var r=document.createElement(e);for(var _ in n)Object.prototype.hasOwnProperty.call(n,_)&&("innerHTML"===_?r.innerHTML=n.innerHTML:"cssText"===_?r.styleSheet?r.styleSheet.cssText=n.cssText:r.appendChild(document.createTextNode(n.cssText)):r.setAttribute(_,void 0===n[_]?"":n[_]));r.setAttribute("data-rh","true"),E.some((function(e,n){return t=n,r.isEqualNode(e)}))?E.splice(t,1):a.push(r)})),E.forEach((function(e){return e.parentNode.removeChild(e)})),a.forEach((function(e){return r.appendChild(e)})),{oldTags:E,newTags:a}},Q=function(e,n){var t=document.getElementsByTagName(e)[0];if(t){for(var r=t.getAttribute("data-rh"),_=r?r.split(","):[],E=[].concat(_),a=Object.keys(n),i=0;i<a.length;i+=1){var T=a[i],s=n[T]||"";t.getAttribute(T)!==s&&t.setAttribute(T,s),-1===_.indexOf(T)&&_.push(T);var o=E.indexOf(T);-1!==o&&E.splice(o,1)}for(var d=E.length-1;d>=0;d-=1)t.removeAttribute(E[d]);_.length===E.length?t.removeAttribute("data-rh"):t.getAttribute("data-rh")!==a.join(",")&&t.setAttribute("data-rh",a.join(","))}},W=function(e,n){var t=e.baseTag,r=e.htmlAttributes,_=e.linkTags,E=e.metaTags,a=e.noscriptTags,i=e.onChangeClientState,T=e.scriptTags,s=e.styleTags,o=e.title,d=e.titleAttributes;Q(u.BODY,e.bodyAttributes),Q(u.HTML,r),function(e,n){void 0!==e&&document.title!==e&&(document.title=M(e)),Q(u.TITLE,n)}(o,d);var I={baseTag:H(u.BASE,t),linkTags:H(u.LINK,_),metaTags:H(u.META,E),noscriptTags:H(u.NOSCRIPT,a),scriptTags:H(u.SCRIPT,T),styleTags:H(u.STYLE,s)},N={},O={};Object.keys(I).forEach((function(e){var n=I[e],t=n.newTags,r=n.oldTags;t.length&&(N[e]=t),r.length&&(O[e]=I[e].oldTags)})),n&&n(),i(e,N,O)},j=null,Z=function(e){function n(){for(var n,t=arguments.length,r=new Array(t),_=0;_<t;_++)r[_]=arguments[_];return(n=e.call.apply(e,[this].concat(r))||this).rendered=!1,n}N(n,e);var t=n.prototype;return t.shouldComponentUpdate=function(e){return!d()(e,this.props)},t.componentDidUpdate=function(){this.emitChange()},t.componentWillUnmount=function(){this.props.context.helmetInstances.remove(this),this.emitChange()},t.emitChange=function(){var e,n,t=this.props.context,r=t.setHelmet,_=null,E=(e=t.helmetInstances.get().map((function(e){var n=I({},e.props);return delete n.context,n})),{baseTag:L(["href"],e),bodyAttributes:p("bodyAttributes",e),defer:P(e,"defer"),encode:P(e,"encodeSpecialCharacters"),htmlAttributes:p("htmlAttributes",e),linkTags:f(u.LINK,["rel","href"],e),metaTags:f(u.META,["name","charset","http-equiv","property","itemprop"],e),noscriptTags:f(u.NOSCRIPT,["innerHTML"],e),onChangeClientState:c(e),scriptTags:f(u.SCRIPT,["src","innerHTML"],e),styleTags:f(u.STYLE,["cssText"],e),title:U(e),titleAttributes:p("titleAttributes",e),prioritizeSeoTags:F(e,"prioritizeSeoTags")});x.canUseDOM?(n=E,j&&cancelAnimationFrame(j),n.defer?j=requestAnimationFrame((function(){W(n,(function(){j=null}))})):(W(n),j=null)):y&&(_=y(E)),r(_)},t.init=function(){this.rendered||(this.rendered=!0,this.props.context.helmetInstances.add(this),this.emitChange())},t.render=function(){return this.init(),null},n}(r.Component);Z.propTypes={context:q.isRequired},Z.displayName="HelmetDispatcher";var z=["children"],$=["children"],J=function(e){function n(){return e.apply(this,arguments)||this}N(n,e);var t=n.prototype;return t.shouldComponentUpdate=function(e){return!i()(w(this.props,"helmetData"),w(e,"helmetData"))},t.mapNestedChildrenToProps=function(e,n){if(!n)return null;switch(e.type){case u.SCRIPT:case u.NOSCRIPT:return{innerHTML:n};case u.STYLE:return{cssText:n};default:throw new Error("<"+e.type+" /> elements are self-closing and can not contain children. Refer to our API for more information.")}},t.flattenArrayTypeChildren=function(e){var n,t=e.child,r=e.arrayTypeChildren;return I({},r,((n={})[t.type]=[].concat(r[t.type]||[],[I({},e.newChildProps,this.mapNestedChildrenToProps(t,e.nestedChildren))]),n))},t.mapObjectTypeChildren=function(e){var n,t,r=e.child,_=e.newProps,E=e.newChildProps,a=e.nestedChildren;switch(r.type){case u.TITLE:return I({},_,((n={})[r.type]=a,n.titleAttributes=I({},E),n));case u.BODY:return I({},_,{bodyAttributes:I({},E)});case u.HTML:return I({},_,{htmlAttributes:I({},E)});default:return I({},_,((t={})[r.type]=I({},E),t))}},t.mapArrayTypeChildrenToProps=function(e,n){var t=I({},n);return Object.keys(e).forEach((function(n){var r;t=I({},t,((r={})[n]=e[n],r))})),t},t.warnOnInvalidChildren=function(e,n){return s()(l.some((function(n){return e.type===n})),"function"==typeof e.type?"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.":"Only elements types "+l.join(", ")+" are allowed. Helmet does not support rendering <"+e.type+"> elements. Refer to our API for more information."),s()(!n||"string"==typeof n||Array.isArray(n)&&!n.some((function(e){return"string"!=typeof e})),"Helmet expects a string as a child of <"+e.type+">. Did you forget to wrap your children in braces? ( <"+e.type+">{``}</"+e.type+"> ) Refer to our API for more information."),!0},t.mapChildrenToProps=function(e,n){var t=this,_={};return r.Children.forEach(e,(function(e){if(e&&e.props){var r=e.props,E=r.children,a=R(r,z),i=Object.keys(a).reduce((function(e,n){return e[C[n]||n]=a[n],e}),{}),T=e.type;switch("symbol"==typeof T?T=T.toString():t.warnOnInvalidChildren(e,E),T){case u.FRAGMENT:n=t.mapChildrenToProps(E,n);break;case u.LINK:case u.META:case u.NOSCRIPT:case u.SCRIPT:case u.STYLE:_=t.flattenArrayTypeChildren({child:e,arrayTypeChildren:_,newChildProps:i,nestedChildren:E});break;default:n=t.mapObjectTypeChildren({child:e,newProps:n,newChildProps:i,nestedChildren:E})}}})),this.mapArrayTypeChildrenToProps(_,n)},t.render=function(){var e=this.props,n=e.children,t=R(e,$),_=I({},t),E=t.helmetData;return n&&(_=this.mapChildrenToProps(n,_)),!E||E instanceof K||(E=new K(E.context,E.instances)),E?r.createElement(Z,I({},_,{context:E.value,helmetData:void 0})):r.createElement(G.Consumer,null,(function(e){return r.createElement(Z,I({},_,{context:e}))}))},n}(r.Component);J.propTypes={base:E().object,bodyAttributes:E().object,children:E().oneOfType([E().arrayOf(E().node),E().node]),defaultTitle:E().string,defer:E().bool,encodeSpecialCharacters:E().bool,htmlAttributes:E().object,link:E().arrayOf(E().object),meta:E().arrayOf(E().object),noscript:E().arrayOf(E().object),onChangeClientState:E().func,script:E().arrayOf(E().object),style:E().arrayOf(E().object),title:E().string,titleAttributes:E().object,titleTemplate:E().string,prioritizeSeoTags:E().bool,helmetData:E().object},J.defaultProps={defer:!0,encodeSpecialCharacters:!0,prioritizeSeoTags:!1},J.displayName="Helmet"},9921:function(e,n){"use strict";var t="function"==typeof Symbol&&Symbol.for,r=t?Symbol.for("react.element"):60103,_=t?Symbol.for("react.portal"):60106,E=t?Symbol.for("react.fragment"):60107,a=t?Symbol.for("react.strict_mode"):60108,i=t?Symbol.for("react.profiler"):60114,T=t?Symbol.for("react.provider"):60109,s=t?Symbol.for("react.context"):60110,o=t?Symbol.for("react.async_mode"):60111,d=t?Symbol.for("react.concurrent_mode"):60111,I=t?Symbol.for("react.forward_ref"):60112,N=t?Symbol.for("react.suspense"):60113,O=t?Symbol.for("react.suspense_list"):60120,R=t?Symbol.for("react.memo"):60115,u=t?Symbol.for("react.lazy"):60116,A=t?Symbol.for("react.block"):60121,D=t?Symbol.for("react.fundamental"):60117,S=t?Symbol.for("react.responder"):60118,l=t?Symbol.for("react.scope"):60119;function h(e){if("object"==typeof e&&null!==e){var n=e.$$typeof;switch(n){case r:switch(e=e.type){case o:case d:case E:case i:case a:case N:return e;default:switch(e=e&&e.$$typeof){case s:case I:case u:case R:case T:return e;default:return n}}case _:return n}}}function C(e){return h(e)===d}n.AsyncMode=o,n.ConcurrentMode=d,n.ContextConsumer=s,n.ContextProvider=T,n.Element=r,n.ForwardRef=I,n.Fragment=E,n.Lazy=u,n.Memo=R,n.Portal=_,n.Profiler=i,n.StrictMode=a,n.Suspense=N,n.isAsyncMode=function(e){return C(e)||h(e)===o},n.isConcurrentMode=C,n.isContextConsumer=function(e){return h(e)===s},n.isContextProvider=function(e){return h(e)===T},n.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},n.isForwardRef=function(e){return h(e)===I},n.isFragment=function(e){return h(e)===E},n.isLazy=function(e){return h(e)===u},n.isMemo=function(e){return h(e)===R},n.isPortal=function(e){return h(e)===_},n.isProfiler=function(e){return h(e)===i},n.isStrictMode=function(e){return h(e)===a},n.isSuspense=function(e){return h(e)===N},n.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===E||e===d||e===i||e===a||e===N||e===O||"object"==typeof e&&null!==e&&(e.$$typeof===u||e.$$typeof===R||e.$$typeof===T||e.$$typeof===s||e.$$typeof===I||e.$$typeof===D||e.$$typeof===S||e.$$typeof===l||e.$$typeof===A)},n.typeOf=h},9864:function(e,n,t){"use strict";e.exports=t(9921)},8356:function(e,n,t){"use strict";function r(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n}function _(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function E(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(){return a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},a.apply(this,arguments)}var i=t(7294),T=t(5697),s=[],o=[];function d(e){var n=e(),t={loading:!0,loaded:null,error:null};return t.promise=n.then((function(e){return t.loading=!1,t.loaded=e,e})).catch((function(e){throw t.loading=!1,t.error=e,e})),t}function I(e){var n={loading:!1,loaded:{},error:null},t=[];try{Object.keys(e).forEach((function(r){var _=d(e[r]);_.loading?n.loading=!0:(n.loaded[r]=_.loaded,n.error=_.error),t.push(_.promise),_.promise.then((function(e){n.loaded[r]=e})).catch((function(e){n.error=e}))}))}catch(r){n.error=r}return n.promise=Promise.all(t).then((function(e){return n.loading=!1,e})).catch((function(e){throw n.loading=!1,e})),n}function N(e,n){return i.createElement((t=e)&&t.__esModule?t.default:t,n);var t}function O(e,n){var d,I;if(!n.loading)throw new Error("react-loadable requires a `loading` component");var O=a({loader:null,loading:null,delay:200,timeout:null,render:N,webpack:null,modules:null},n),R=null;function u(){return R||(R=e(O.loader)),R.promise}return s.push(u),"function"==typeof O.webpack&&o.push((function(){if((0,O.webpack)().every((function(e){return void 0!==e&&void 0!==t.m[e]})))return u()})),I=d=function(n){function t(t){var r;return E(_(_(r=n.call(this,t)||this)),"retry",(function(){r.setState({error:null,loading:!0,timedOut:!1}),R=e(O.loader),r._loadModule()})),u(),r.state={error:R.error,pastDelay:!1,timedOut:!1,loading:R.loading,loaded:R.loaded},r}r(t,n),t.preload=function(){return u()};var a=t.prototype;return a.UNSAFE_componentWillMount=function(){this._loadModule()},a.componentDidMount=function(){this._mounted=!0},a._loadModule=function(){var e=this;if(this.context.loadable&&Array.isArray(O.modules)&&O.modules.forEach((function(n){e.context.loadable.report(n)})),R.loading){var n=function(n){e._mounted&&e.setState(n)};"number"==typeof O.delay&&(0===O.delay?this.setState({pastDelay:!0}):this._delay=setTimeout((function(){n({pastDelay:!0})}),O.delay)),"number"==typeof O.timeout&&(this._timeout=setTimeout((function(){n({timedOut:!0})}),O.timeout));var t=function(){n({error:R.error,loaded:R.loaded,loading:R.loading}),e._clearTimeouts()};R.promise.then((function(){return t(),null})).catch((function(e){return t(),null}))}},a.componentWillUnmount=function(){this._mounted=!1,this._clearTimeouts()},a._clearTimeouts=function(){clearTimeout(this._delay),clearTimeout(this._timeout)},a.render=function(){return this.state.loading||this.state.error?i.createElement(O.loading,{isLoading:this.state.loading,pastDelay:this.state.pastDelay,timedOut:this.state.timedOut,error:this.state.error,retry:this.retry}):this.state.loaded?O.render(this.state.loaded,this.props):null},t}(i.Component),E(d,"contextTypes",{loadable:T.shape({report:T.func.isRequired})}),I}function R(e){return O(d,e)}R.Map=function(e){if("function"!=typeof e.render)throw new Error("LoadableMap requires a `render(loaded, props)` function");return O(I,e)};var u=function(e){function n(){return e.apply(this,arguments)||this}r(n,e);var t=n.prototype;return t.getChildContext=function(){return{loadable:{report:this.props.report}}},t.render=function(){return i.Children.only(this.props.children)},n}(i.Component);function A(e){for(var n=[];e.length;){var t=e.pop();n.push(t())}return Promise.all(n).then((function(){if(e.length)return A(e)}))}E(u,"propTypes",{report:T.func.isRequired}),E(u,"childContextTypes",{loadable:T.shape({report:T.func.isRequired}).isRequired}),R.Capture=u,R.preloadAll=function(){return new Promise((function(e,n){A(s).then(e,n)}))},R.preloadReady=function(){return new Promise((function(e,n){A(o).then(e,e)}))},e.exports=R},8790:function(e,n,t){"use strict";t.d(n,{H:function(){return i},f:function(){return a}});var r=t(6775),_=t(7462),E=t(7294);function a(e,n,t){return void 0===t&&(t=[]),e.some((function(e){var _=e.path?(0,r.LX)(n,e):t.length?t[t.length-1].match:r.F0.computeRootMatch(n);return _&&(t.push({route:e,match:_}),e.routes&&a(e.routes,n,t)),_})),t}function i(e,n,t){return void 0===n&&(n={}),void 0===t&&(t={}),e?E.createElement(r.rs,t,e.map((function(e,t){return E.createElement(r.AW,{key:e.key||t,path:e.path,exact:e.exact,strict:e.strict,render:function(t){return e.render?e.render((0,_.Z)({},t,{},n,{route:e})):E.createElement(e.component,(0,_.Z)({},t,n,{route:e}))}})}))):null}},3727:function(e,n,t){"use strict";t.d(n,{OL:function(){return S},VK:function(){return o},rU:function(){return u}});var r=t(6775),_=t(4578),E=t(7294),a=t(9318),i=t(7462),T=t(3366),s=t(2177),o=function(e){function n(){for(var n,t=arguments.length,r=new Array(t),_=0;_<t;_++)r[_]=arguments[_];return(n=e.call.apply(e,[this].concat(r))||this).history=(0,a.lX)(n.props),n}return(0,_.Z)(n,e),n.prototype.render=function(){return E.createElement(r.F0,{history:this.history,children:this.props.children})},n}(E.Component);E.Component;var d=function(e,n){return"function"==typeof e?e(n):e},I=function(e,n){return"string"==typeof e?(0,a.ob)(e,null,null,n):e},N=function(e){return e},O=E.forwardRef;void 0===O&&(O=N);var R=O((function(e,n){var t=e.innerRef,r=e.navigate,_=e.onClick,a=(0,T.Z)(e,["innerRef","navigate","onClick"]),s=a.target,o=(0,i.Z)({},a,{onClick:function(e){try{_&&_(e)}catch(n){throw e.preventDefault(),n}e.defaultPrevented||0!==e.button||s&&"_self"!==s||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return o.ref=N!==O&&n||t,E.createElement("a",o)}));var u=O((function(e,n){var t=e.component,_=void 0===t?R:t,o=e.replace,u=e.to,A=e.innerRef,D=(0,T.Z)(e,["component","replace","to","innerRef"]);return E.createElement(r.s6.Consumer,null,(function(e){e||(0,s.Z)(!1);var t=e.history,r=I(d(u,e.location),e.location),T=r?t.createHref(r):"",R=(0,i.Z)({},D,{href:T,navigate:function(){var n=d(u,e.location),r=(0,a.Ep)(e.location)===(0,a.Ep)(I(n));(o||r?t.replace:t.push)(n)}});return N!==O?R.ref=n||A:R.innerRef=A,E.createElement(_,R)}))})),A=function(e){return e},D=E.forwardRef;void 0===D&&(D=A);var S=D((function(e,n){var t=e["aria-current"],_=void 0===t?"page":t,a=e.activeClassName,o=void 0===a?"active":a,N=e.activeStyle,O=e.className,R=e.exact,S=e.isActive,l=e.location,h=e.sensitive,C=e.strict,P=e.style,U=e.to,c=e.innerRef,p=(0,T.Z)(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return E.createElement(r.s6.Consumer,null,(function(e){e||(0,s.Z)(!1);var t=l||e.location,a=I(d(U,t),t),T=a.pathname,L=T&&T.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),f=L?(0,r.LX)(t.pathname,{path:L,exact:R,sensitive:h,strict:C}):null,F=!!(S?S(f,t):f),M="function"==typeof O?O(F):O,m="function"==typeof P?P(F):P;F&&(M=function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return n.filter((function(e){return e})).join(" ")}(M,o),m=(0,i.Z)({},m,N));var w=(0,i.Z)({"aria-current":F&&_||null,className:M,style:m,to:a},p);return A!==D?w.ref=n||c:w.innerRef=c,E.createElement(u,w)}))}))},6775:function(e,n,t){"use strict";t.d(n,{AW:function(){return c},F0:function(){return h},rs:function(){return m},s6:function(){return l},LX:function(){return U},k6:function(){return b},TH:function(){return X}});var r=t(4578),_=t(7294),E=t(9318),a=t(5697),i=t.n(a),T=1073741823,s="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==t.g?t.g:{};function o(e){var n=[];return{on:function(e){n.push(e)},off:function(e){n=n.filter((function(n){return n!==e}))},get:function(){return e},set:function(t,r){e=t,n.forEach((function(n){return n(e,r)}))}}}var d=_.createContext||function(e,n){var t,E,a="__create-react-context-"+function(){var e="__global_unique_id__";return s[e]=(s[e]||0)+1}()+"__",d=function(e){function t(){var n;return(n=e.apply(this,arguments)||this).emitter=o(n.props.value),n}(0,r.Z)(t,e);var _=t.prototype;return _.getChildContext=function(){var e;return(e={})[a]=this.emitter,e},_.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var t,r=this.props.value,_=e.value;((E=r)===(a=_)?0!==E||1/E==1/a:E!=E&&a!=a)?t=0:(t="function"==typeof n?n(r,_):T,0!==(t|=0)&&this.emitter.set(e.value,t))}var E,a},_.render=function(){return this.props.children},t}(_.Component);d.childContextTypes=((t={})[a]=i().object.isRequired,t);var I=function(n){function t(){var e;return(e=n.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(n,t){0!=((0|e.observedBits)&t)&&e.setState({value:e.getValue()})},e}(0,r.Z)(t,n);var _=t.prototype;return _.componentWillReceiveProps=function(e){var n=e.observedBits;this.observedBits=null==n?T:n},_.componentDidMount=function(){this.context[a]&&this.context[a].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?T:e},_.componentWillUnmount=function(){this.context[a]&&this.context[a].off(this.onUpdate)},_.getValue=function(){return this.context[a]?this.context[a].get():e},_.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},t}(_.Component);return I.contextTypes=((E={})[a]=i().object,E),{Provider:d,Consumer:I}},I=d,N=t(2177),O=t(7462),R=t(4779),u=t.n(R),A=(t(9864),t(3366)),D=(t(8679),function(e){var n=I();return n.displayName=e,n}),S=D("Router-History"),l=D("Router"),h=function(e){function n(n){var t;return(t=e.call(this,n)||this).state={location:n.history.location},t._isMounted=!1,t._pendingLocation=null,n.staticContext||(t.unlisten=n.history.listen((function(e){t._pendingLocation=e}))),t}(0,r.Z)(n,e),n.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var t=n.prototype;return t.componentDidMount=function(){var e=this;this._isMounted=!0,this.unlisten&&this.unlisten(),this.props.staticContext||(this.unlisten=this.props.history.listen((function(n){e._isMounted&&e.setState({location:n})}))),this._pendingLocation&&this.setState({location:this._pendingLocation})},t.componentWillUnmount=function(){this.unlisten&&(this.unlisten(),this._isMounted=!1,this._pendingLocation=null)},t.render=function(){return _.createElement(l.Provider,{value:{history:this.props.history,location:this.state.location,match:n.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},_.createElement(S.Provider,{children:this.props.children||null,value:this.props.history}))},n}(_.Component);_.Component;_.Component;var C={},P=0;function U(e,n){void 0===n&&(n={}),("string"==typeof n||Array.isArray(n))&&(n={path:n});var t=n,r=t.path,_=t.exact,E=void 0!==_&&_,a=t.strict,i=void 0!==a&&a,T=t.sensitive,s=void 0!==T&&T;return[].concat(r).reduce((function(n,t){if(!t&&""!==t)return null;if(n)return n;var r=function(e,n){var t=""+n.end+n.strict+n.sensitive,r=C[t]||(C[t]={});if(r[e])return r[e];var _=[],E={regexp:u()(e,_,n),keys:_};return P<1e4&&(r[e]=E,P++),E}(t,{end:E,strict:i,sensitive:s}),_=r.regexp,a=r.keys,T=_.exec(e);if(!T)return null;var o=T[0],d=T.slice(1),I=e===o;return E&&!I?null:{path:t,url:"/"===t&&""===o?"/":o,isExact:I,params:a.reduce((function(e,n,t){return e[n.name]=d[t],e}),{})}}),null)}var c=function(e){function n(){return e.apply(this,arguments)||this}return(0,r.Z)(n,e),n.prototype.render=function(){var e=this;return _.createElement(l.Consumer,null,(function(n){n||(0,N.Z)(!1);var t=e.props.location||n.location,r=e.props.computedMatch?e.props.computedMatch:e.props.path?U(t.pathname,e.props):n.match,E=(0,O.Z)({},n,{location:t,match:r}),a=e.props,i=a.children,T=a.component,s=a.render;return Array.isArray(i)&&function(e){return 0===_.Children.count(e)}(i)&&(i=null),_.createElement(l.Provider,{value:E},E.match?i?"function"==typeof i?i(E):i:T?_.createElement(T,E):s?s(E):null:"function"==typeof i?i(E):null)}))},n}(_.Component);function p(e){return"/"===e.charAt(0)?e:"/"+e}function L(e,n){if(!e)return n;var t=p(e);return 0!==n.pathname.indexOf(t)?n:(0,O.Z)({},n,{pathname:n.pathname.substr(t.length)})}function f(e){return"string"==typeof e?e:(0,E.Ep)(e)}function F(e){return function(){(0,N.Z)(!1)}}function M(){}_.Component;var m=function(e){function n(){return e.apply(this,arguments)||this}return(0,r.Z)(n,e),n.prototype.render=function(){var e=this;return _.createElement(l.Consumer,null,(function(n){n||(0,N.Z)(!1);var t,r,E=e.props.location||n.location;return _.Children.forEach(e.props.children,(function(e){if(null==r&&_.isValidElement(e)){t=e;var a=e.props.path||e.props.from;r=a?U(E.pathname,(0,O.Z)({},e.props,{path:a})):n.match}})),r?_.cloneElement(t,{location:E,computedMatch:r}):null}))},n}(_.Component);var w=_.useContext;function b(){return w(S)}function X(){return w(l).location}},2408:function(e,n,t){"use strict";var r=t(7418),_=60103,E=60106;n.Fragment=60107,n.StrictMode=60108,n.Profiler=60114;var a=60109,i=60110,T=60112;n.Suspense=60113;var s=60115,o=60116;if("function"==typeof Symbol&&Symbol.for){var d=Symbol.for;_=d("react.element"),E=d("react.portal"),n.Fragment=d("react.fragment"),n.StrictMode=d("react.strict_mode"),n.Profiler=d("react.profiler"),a=d("react.provider"),i=d("react.context"),T=d("react.forward_ref"),n.Suspense=d("react.suspense"),s=d("react.memo"),o=d("react.lazy")}var I="function"==typeof Symbol&&Symbol.iterator;function N(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var O={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},R={};function u(e,n,t){this.props=e,this.context=n,this.refs=R,this.updater=t||O}function A(){}function D(e,n,t){this.props=e,this.context=n,this.refs=R,this.updater=t||O}u.prototype.isReactComponent={},u.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(N(85));this.updater.enqueueSetState(this,e,n,"setState")},u.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},A.prototype=u.prototype;var S=D.prototype=new A;S.constructor=D,r(S,u.prototype),S.isPureReactComponent=!0;var l={current:null},h=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function P(e,n,t){var r,E={},a=null,i=null;if(null!=n)for(r in void 0!==n.ref&&(i=n.ref),void 0!==n.key&&(a=""+n.key),n)h.call(n,r)&&!C.hasOwnProperty(r)&&(E[r]=n[r]);var T=arguments.length-2;if(1===T)E.children=t;else if(1<T){for(var s=Array(T),o=0;o<T;o++)s[o]=arguments[o+2];E.children=s}if(e&&e.defaultProps)for(r in T=e.defaultProps)void 0===E[r]&&(E[r]=T[r]);return{$$typeof:_,type:e,key:a,ref:i,props:E,_owner:l.current}}function U(e){return"object"==typeof e&&null!==e&&e.$$typeof===_}var c=/\/+/g;function p(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function L(e,n,t,r,a){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var T=!1;if(null===e)T=!0;else switch(i){case"string":case"number":T=!0;break;case"object":switch(e.$$typeof){case _:case E:T=!0}}if(T)return a=a(T=e),e=""===r?"."+p(T,0):r,Array.isArray(a)?(t="",null!=e&&(t=e.replace(c,"$&/")+"/"),L(a,n,t,"",(function(e){return e}))):null!=a&&(U(a)&&(a=function(e,n){return{$$typeof:_,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(a,t+(!a.key||T&&T.key===a.key?"":(""+a.key).replace(c,"$&/")+"/")+e)),n.push(a)),1;if(T=0,r=""===r?".":r+":",Array.isArray(e))for(var s=0;s<e.length;s++){var o=r+p(i=e[s],s);T+=L(i,n,t,o,a)}else if(o=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=I&&e[I]||e["@@iterator"])?e:null}(e),"function"==typeof o)for(e=o.call(e),s=0;!(i=e.next()).done;)T+=L(i=i.value,n,t,o=r+p(i,s++),a);else if("object"===i)throw n=""+e,Error(N(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n));return T}function f(e,n,t){if(null==e)return e;var r=[],_=0;return L(e,r,"","",(function(e){return n.call(t,e,_++)})),r}function F(e){if(-1===e._status){var n=e._result;n=n(),e._status=0,e._result=n,n.then((function(n){0===e._status&&(n=n.default,e._status=1,e._result=n)}),(function(n){0===e._status&&(e._status=2,e._result=n)}))}if(1===e._status)return e._result;throw e._result}var M={current:null};function m(){var e=M.current;if(null===e)throw Error(N(321));return e}var w={ReactCurrentDispatcher:M,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:l,IsSomeRendererActing:{current:!1},assign:r};n.Children={map:f,forEach:function(e,n,t){f(e,(function(){n.apply(this,arguments)}),t)},count:function(e){var n=0;return f(e,(function(){n++})),n},toArray:function(e){return f(e,(function(e){return e}))||[]},only:function(e){if(!U(e))throw Error(N(143));return e}},n.Component=u,n.PureComponent=D,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=w,n.cloneElement=function(e,n,t){if(null==e)throw Error(N(267,e));var E=r({},e.props),a=e.key,i=e.ref,T=e._owner;if(null!=n){if(void 0!==n.ref&&(i=n.ref,T=l.current),void 0!==n.key&&(a=""+n.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(o in n)h.call(n,o)&&!C.hasOwnProperty(o)&&(E[o]=void 0===n[o]&&void 0!==s?s[o]:n[o])}var o=arguments.length-2;if(1===o)E.children=t;else if(1<o){s=Array(o);for(var d=0;d<o;d++)s[d]=arguments[d+2];E.children=s}return{$$typeof:_,type:e.type,key:a,ref:i,props:E,_owner:T}},n.createContext=function(e,n){return void 0===n&&(n=null),(e={$$typeof:i,_calculateChangedBits:n,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:a,_context:e},e.Consumer=e},n.createElement=P,n.createFactory=function(e){var n=P.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:T,render:e}},n.isValidElement=U,n.lazy=function(e){return{$$typeof:o,_payload:{_status:-1,_result:e},_init:F}},n.memo=function(e,n){return{$$typeof:s,type:e,compare:void 0===n?null:n}},n.useCallback=function(e,n){return m().useCallback(e,n)},n.useContext=function(e,n){return m().useContext(e,n)},n.useDebugValue=function(){},n.useEffect=function(e,n){return m().useEffect(e,n)},n.useImperativeHandle=function(e,n,t){return m().useImperativeHandle(e,n,t)},n.useLayoutEffect=function(e,n){return m().useLayoutEffect(e,n)},n.useMemo=function(e,n){return m().useMemo(e,n)},n.useReducer=function(e,n,t){return m().useReducer(e,n,t)},n.useRef=function(e){return m().useRef(e)},n.useState=function(e){return m().useState(e)},n.version="17.0.2"},7294:function(e,n,t){"use strict";e.exports=t(2408)},53:function(e,n){"use strict";var t,r,_,E;if("object"==typeof performance&&"function"==typeof performance.now){var a=performance;n.unstable_now=function(){return a.now()}}else{var i=Date,T=i.now();n.unstable_now=function(){return i.now()-T}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var s=null,o=null,d=function(){if(null!==s)try{var e=n.unstable_now();s(!0,e),s=null}catch(t){throw setTimeout(d,0),t}};t=function(e){null!==s?setTimeout(t,0,e):(s=e,setTimeout(d,0))},r=function(e,n){o=setTimeout(e,n)},_=function(){clearTimeout(o)},n.unstable_shouldYield=function(){return!1},E=n.unstable_forceFrameRate=function(){}}else{var I=window.setTimeout,N=window.clearTimeout;if("undefined"!=typeof console){var O=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof O&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var R=!1,u=null,A=-1,D=5,S=0;n.unstable_shouldYield=function(){return n.unstable_now()>=S},E=function(){},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):D=0<e?Math.floor(1e3/e):5};var l=new MessageChannel,h=l.port2;l.port1.onmessage=function(){if(null!==u){var e=n.unstable_now();S=e+D;try{u(!0,e)?h.postMessage(null):(R=!1,u=null)}catch(t){throw h.postMessage(null),t}}else R=!1},t=function(e){u=e,R||(R=!0,h.postMessage(null))},r=function(e,t){A=I((function(){e(n.unstable_now())}),t)},_=function(){N(A),A=-1}}function C(e,n){var t=e.length;e.push(n);e:for(;;){var r=t-1>>>1,_=e[r];if(!(void 0!==_&&0<c(_,n)))break e;e[r]=n,e[t]=_,t=r}}function P(e){return void 0===(e=e[0])?null:e}function U(e){var n=e[0];if(void 0!==n){var t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,_=e.length;r<_;){var E=2*(r+1)-1,a=e[E],i=E+1,T=e[i];if(void 0!==a&&0>c(a,t))void 0!==T&&0>c(T,a)?(e[r]=T,e[i]=t,r=i):(e[r]=a,e[E]=t,r=E);else{if(!(void 0!==T&&0>c(T,t)))break e;e[r]=T,e[i]=t,r=i}}}return n}return null}function c(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}var p=[],L=[],f=1,F=null,M=3,m=!1,w=!1,b=!1;function X(e){for(var n=P(L);null!==n;){if(null===n.callback)U(L);else{if(!(n.startTime<=e))break;U(L),n.sortIndex=n.expirationTime,C(p,n)}n=P(L)}}function g(e){if(b=!1,X(e),!w)if(null!==P(p))w=!0,t(v);else{var n=P(L);null!==n&&r(g,n.startTime-e)}}function v(e,t){w=!1,b&&(b=!1,_()),m=!0;var E=M;try{for(X(t),F=P(p);null!==F&&(!(F.expirationTime>t)||e&&!n.unstable_shouldYield());){var a=F.callback;if("function"==typeof a){F.callback=null,M=F.priorityLevel;var i=a(F.expirationTime<=t);t=n.unstable_now(),"function"==typeof i?F.callback=i:F===P(p)&&U(p),X(t)}else U(p);F=P(p)}if(null!==F)var T=!0;else{var s=P(L);null!==s&&r(g,s.startTime-t),T=!1}return T}finally{F=null,M=E,m=!1}}var V=E;n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){w||m||(w=!0,t(v))},n.unstable_getCurrentPriorityLevel=function(){return M},n.unstable_getFirstCallbackNode=function(){return P(p)},n.unstable_next=function(e){switch(M){case 1:case 2:case 3:var n=3;break;default:n=M}var t=M;M=n;try{return e()}finally{M=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=V,n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=M;M=e;try{return n()}finally{M=t}},n.unstable_scheduleCallback=function(e,E,a){var i=n.unstable_now();switch("object"==typeof a&&null!==a?a="number"==typeof(a=a.delay)&&0<a?i+a:i:a=i,e){case 1:var T=-1;break;case 2:T=250;break;case 5:T=1073741823;break;case 4:T=1e4;break;default:T=5e3}return e={id:f++,callback:E,priorityLevel:e,startTime:a,expirationTime:T=a+T,sortIndex:-1},a>i?(e.sortIndex=a,C(L,e),null===P(p)&&e===P(L)&&(b?_():b=!0,r(g,a-i))):(e.sortIndex=T,C(p,e),w||m||(w=!0,t(v))),e},n.unstable_wrapCallback=function(e){var n=M;return function(){var t=M;M=n;try{return e.apply(this,arguments)}finally{M=t}}}},3840:function(e,n,t){"use strict";e.exports=t(53)},6774:function(e){e.exports=function(e,n,t,r){var _=t?t.call(r,e,n):void 0;if(void 0!==_)return!!_;if(e===n)return!0;if("object"!=typeof e||!e||"object"!=typeof n||!n)return!1;var E=Object.keys(e),a=Object.keys(n);if(E.length!==a.length)return!1;for(var i=Object.prototype.hasOwnProperty.bind(n),T=0;T<E.length;T++){var s=E[T];if(!i(s))return!1;var o=e[s],d=n[s];if(!1===(_=t?t.call(r,o,d,s):void 0)||void 0===_&&o!==d)return!1}return!0}},2177:function(e,n,t){"use strict";t.d(n,{Z:function(){return _}});var r="Invariant failed";function _(e,n){if(!e)throw new Error(r)}},6809:function(e,n,t){"use strict";t.r(n),n.default={title:"InfoSum Developer Portal",url:"https://infosum.com",baseUrl:"/",onBrokenLinks:"throw",onBrokenMarkdownLinks:"warn",favicon:"img/favicon.ico",organizationName:"infosum",projectName:"infosum-docs",presets:[["classic",{docs:{sidebarPath:"/home/runner/work/infosum-docs/infosum-docs/sidebars.js",editUrl:"https://github.com/infosum/infosum-docs/tree/main"},blog:{showReadingTime:!0,editUrl:"https://github.com/infosum/infosum-docs/tree/main/blog/"},theme:{customCss:"/home/runner/work/infosum-docs/infosum-docs/src/css/custom.css"},sitemap:{changefreq:"weekly",priority:.5}}],["redocusaurus",{specs:[{spec:"static/swagger.json",route:"/api/"}]}]],plugins:[["@docusaurus/plugin-pwa",{offlineModeActivationStrategies:["appInstalled","standalone","queryString"],pwaHead:[{tagName:"link",rel:"icon",href:"/img/docusaurus.png"},{tagName:"link",rel:"manifest",href:"/manifest.json"},{tagName:"meta",name:"theme-color",content:"rgb(37, 194, 160)"}]}]],themeConfig:{navbar:{title:"InfoSum Developer Portal",logo:{alt:"InfoSum",src:"https://assets-global.website-files.com/607ef7a9757a0319beb2dae2/609bb4724f5dee5ea5de2f0d_InfoSum_Logo-LIGHT.svg"},items:[{type:"doc",docId:"intro",position:"left",label:"Docs"},{to:"/api",label:"API",position:"left"},{href:"https://github.com/infosum",label:"GitHub",position:"right"}],hideOnScroll:!1},footer:{style:"dark",links:[{title:"Docs",items:[{label:"Tutorial",to:"/docs/intro"},{label:"Knowledge Base",to:"https://support.infosum.com/"}]},{title:"Community",items:[{label:"Stack Overflow",href:"https://stackoverflow.com/questions/tagged/docusaurus"},{label:"Discord",href:"https://discordapp.com/invite/docusaurus"},{label:"Twitter",href:"https://twitter.com/infosum"}]},{title:"More",items:[{label:"Developer Blog",to:"/blog"},{label:"GitHub",href:"https://github.com/infosum"}]}],copyright:"Copyright \xa9 2022 InfoSum Built with Docusaurus."},prism:{theme:{plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]},darkTheme:{plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]},additionalLanguages:[],magicComments:[{className:"theme-code-block-highlighted-line",line:"highlight-next-line",block:{start:"highlight-start",end:"highlight-end"}}]},colorMode:{defaultMode:"light",disableSwitch:!1,respectPrefersColorScheme:!1},docs:{versionPersistence:"localStorage",sidebar:{hideable:!1,autoCollapseCategories:!1}},metadata:[],tableOfContents:{minHeadingLevel:2,maxHeadingLevel:3}},baseUrlIssueBanner:!0,i18n:{defaultLocale:"en",locales:["en"],localeConfigs:{}},onDuplicateRoutes:"warn",staticDirectories:["static"],customFields:{},themes:[],scripts:[],stylesheets:[],clientModules:[],tagline:"",titleDelimiter:"|",noIndex:!1}},5861:function(e,n,t){"use strict";function r(e,n,t,r,_,E,a){try{var i=e[E](a),T=i.value}catch(s){return void t(s)}i.done?n(T):Promise.resolve(T).then(r,_)}function _(e){return function(){var n=this,t=arguments;return new Promise((function(_,E){var a=e.apply(n,t);function i(e){r(a,_,E,i,T,"next",e)}function T(e){r(a,_,E,i,T,"throw",e)}i(void 0)}))}}t.d(n,{Z:function(){return _}})},7462:function(e,n,t){"use strict";function r(){return r=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},r.apply(this,arguments)}t.d(n,{Z:function(){return r}})},4578:function(e,n,t){"use strict";t.d(n,{Z:function(){return _}});var r=t(9611);function _(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,(0,r.Z)(e,n)}},3366:function(e,n,t){"use strict";function r(e,n){if(null==e)return{};var t,r,_={},E=Object.keys(e);for(r=0;r<E.length;r++)t=E[r],n.indexOf(t)>=0||(_[t]=e[t]);return _}t.d(n,{Z:function(){return r}})},4165:function(e,n,t){"use strict";t.d(n,{Z:function(){return _}});var r=t(1002);function _(){_=function(){return e};var e={},n=Object.prototype,t=n.hasOwnProperty,E="function"==typeof Symbol?Symbol:{},a=E.iterator||"@@iterator",i=E.asyncIterator||"@@asyncIterator",T=E.toStringTag||"@@toStringTag";function s(e,n,t){return Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}),e[n]}try{s({},"")}catch(f){s=function(e,n,t){return e[n]=t}}function o(e,n,t,r){var _=n&&n.prototype instanceof N?n:N,E=Object.create(_.prototype),a=new c(r||[]);return E._invoke=function(e,n,t){var r="suspendedStart";return function(_,E){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===_)throw E;return L()}for(t.method=_,t.arg=E;;){var a=t.delegate;if(a){var i=C(a,t);if(i){if(i===I)continue;return i}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===r)throw r="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r="executing";var T=d(e,n,t);if("normal"===T.type){if(r=t.done?"completed":"suspendedYield",T.arg===I)continue;return{value:T.arg,done:t.done}}"throw"===T.type&&(r="completed",t.method="throw",t.arg=T.arg)}}}(e,t,a),E}function d(e,n,t){try{return{type:"normal",arg:e.call(n,t)}}catch(f){return{type:"throw",arg:f}}}e.wrap=o;var I={};function N(){}function O(){}function R(){}var u={};s(u,a,(function(){return this}));var A=Object.getPrototypeOf,D=A&&A(A(p([])));D&&D!==n&&t.call(D,a)&&(u=D);var S=R.prototype=N.prototype=Object.create(u);function l(e){["next","throw","return"].forEach((function(n){s(e,n,(function(e){return this._invoke(n,e)}))}))}function h(e,n){function _(E,a,i,T){var s=d(e[E],e,a);if("throw"!==s.type){var o=s.arg,I=o.value;return I&&"object"==(0,r.Z)(I)&&t.call(I,"__await")?n.resolve(I.__await).then((function(e){_("next",e,i,T)}),(function(e){_("throw",e,i,T)})):n.resolve(I).then((function(e){o.value=e,i(o)}),(function(e){return _("throw",e,i,T)}))}T(s.arg)}var E;this._invoke=function(e,t){function r(){return new n((function(n,r){_(e,t,n,r)}))}return E=E?E.then(r,r):r()}}function C(e,n){var t=e.iterator[n.method];if(void 0===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=void 0,C(e,n),"throw"===n.method))return I;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return I}var r=d(t,e.iterator,n.arg);if("throw"===r.type)return n.method="throw",n.arg=r.arg,n.delegate=null,I;var _=r.arg;return _?_.done?(n[e.resultName]=_.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=void 0),n.delegate=null,I):_:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,I)}function P(e){var n={tryLoc:e[0]};1 in e&&(n.catchLoc=e[1]),2 in e&&(n.finallyLoc=e[2],n.afterLoc=e[3]),this.tryEntries.push(n)}function U(e){var n=e.completion||{};n.type="normal",delete n.arg,e.completion=n}function c(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(P,this),this.reset(!0)}function p(e){if(e){var n=e[a];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,_=function n(){for(;++r<e.length;)if(t.call(e,r))return n.value=e[r],n.done=!1,n;return n.value=void 0,n.done=!0,n};return _.next=_}}return{next:L}}function L(){return{value:void 0,done:!0}}return O.prototype=R,s(S,"constructor",R),s(R,"constructor",O),O.displayName=s(R,T,"GeneratorFunction"),e.isGeneratorFunction=function(e){var n="function"==typeof e&&e.constructor;return!!n&&(n===O||"GeneratorFunction"===(n.displayName||n.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,R):(e.__proto__=R,s(e,T,"GeneratorFunction")),e.prototype=Object.create(S),e},e.awrap=function(e){return{__await:e}},l(h.prototype),s(h.prototype,i,(function(){return this})),e.AsyncIterator=h,e.async=function(n,t,r,_,E){void 0===E&&(E=Promise);var a=new h(o(n,t,r,_),E);return e.isGeneratorFunction(t)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},l(S),s(S,T,"Generator"),s(S,a,(function(){return this})),s(S,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var n=[];for(var t in e)n.push(t);return n.reverse(),function t(){for(;n.length;){var r=n.pop();if(r in e)return t.value=r,t.done=!1,t}return t.done=!0,t}},e.values=p,c.prototype={constructor:c,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(U),!e)for(var n in this)"t"===n.charAt(0)&&t.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function r(t,r){return a.type="throw",a.arg=e,n.next=t,r&&(n.method="next",n.arg=void 0),!!r}for(var _=this.tryEntries.length-1;_>=0;--_){var E=this.tryEntries[_],a=E.completion;if("root"===E.tryLoc)return r("end");if(E.tryLoc<=this.prev){var i=t.call(E,"catchLoc"),T=t.call(E,"finallyLoc");if(i&&T){if(this.prev<E.catchLoc)return r(E.catchLoc,!0);if(this.prev<E.finallyLoc)return r(E.finallyLoc)}else if(i){if(this.prev<E.catchLoc)return r(E.catchLoc,!0)}else{if(!T)throw new Error("try statement without catch or finally");if(this.prev<E.finallyLoc)return r(E.finallyLoc)}}}},abrupt:function(e,n){for(var r=this.tryEntries.length-1;r>=0;--r){var _=this.tryEntries[r];if(_.tryLoc<=this.prev&&t.call(_,"finallyLoc")&&this.prev<_.finallyLoc){var E=_;break}}E&&("break"===e||"continue"===e)&&E.tryLoc<=n&&n<=E.finallyLoc&&(E=null);var a=E?E.completion:{};return a.type=e,a.arg=n,E?(this.method="next",this.next=E.finallyLoc,I):this.complete(a)},complete:function(e,n){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&n&&(this.next=n),I},finish:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.finallyLoc===e)return this.complete(t.completion,t.afterLoc),U(t),I}},catch:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.tryLoc===e){var r=t.completion;if("throw"===r.type){var _=r.arg;U(t)}return _}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,t){return this.delegate={iterator:p(e),resultName:n,nextLoc:t},"next"===this.method&&(this.arg=void 0),I}},e}},9611:function(e,n,t){"use strict";function r(e,n){return r=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,n){return e.__proto__=n,e},r(e,n)}t.d(n,{Z:function(){return r}})},1002:function(e,n,t){"use strict";function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}t.d(n,{Z:function(){return r}})},4542:function(e,n,t){"use strict";function r(e){return r=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},r(e)}t.d(n,{Z:function(){return i}});var _=t(9611);function E(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function a(e,n,t){return a=E()?Reflect.construct.bind():function(e,n,t){var r=[null];r.push.apply(r,n);var E=new(Function.bind.apply(e,r));return t&&(0,_.Z)(E,t.prototype),E},a.apply(null,arguments)}function i(e){var n="function"==typeof Map?new Map:void 0;return i=function(e){if(null===e||(t=e,-1===Function.toString.call(t).indexOf("[native code]")))return e;var t;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==n){if(n.has(e))return n.get(e);n.set(e,E)}function E(){return a(e,arguments,r(this).constructor)}return E.prototype=Object.create(e.prototype,{constructor:{value:E,enumerable:!1,writable:!0,configurable:!0}}),(0,_.Z)(E,e)},i(e)}},7099:function(e,n,t){"use strict";t.d(n,{Z:function(){return a}});var r=t(1002),_=t(9611);function E(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),n&&(0,_.Z)(e,n)}function a(){a=function(e,n){return new t(e,void 0,n)};var e=RegExp.prototype,n=new WeakMap;function t(e,r,E){var a=new RegExp(e,r);return n.set(a,E||n.get(e)),(0,_.Z)(a,t.prototype)}function i(e,t){var r=n.get(t);return Object.keys(r).reduce((function(n,t){return n[t]=e[r[t]],n}),Object.create(null))}return E(t,RegExp),t.prototype.exec=function(n){var t=e.exec.call(this,n);return t&&(t.groups=i(t,this)),t},t.prototype[Symbol.replace]=function(t,_){if("string"==typeof _){var E=n.get(this);return e[Symbol.replace].call(this,t,_.replace(/\$<([^>]+)>/g,(function(e,n){return"$"+E[n]})))}if("function"==typeof _){var a=this;return e[Symbol.replace].call(this,t,(function(){var e=arguments;return"object"!=(0,r.Z)(e[e.length-1])&&(e=[].slice.call(e)).push(i(e,a)),_.apply(this,e)}))}return e[Symbol.replace].call(this,t,_)},a.apply(this,arguments)}},7529:function(e){"use strict";e.exports={}},6887:function(e){"use strict";e.exports=JSON.parse('{"/api/-b08":{"__comp":"f0ad3fbb","__context":{"plugin":"26dbebdc"},"specProps":"2c0aace0","layoutProps":"e9674ec5"},"/blog-285":{"__comp":"a6aa9e1f","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","items":[{"content":"7661071f"}],"metadata":"b2b675dd"},"/blog/archive-156":{"__comp":"9e4087bc","__context":{"plugin":"b53cb62d"},"archive":"b2f554cd"},"/blog/tags-319":{"__comp":"01a85c17","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","tags":"a7023ddc"},"/blog/tags/developer-613":{"__comp":"6875c492","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","items":[{"content":"7661071f"}],"tag":"215540ae","listMetadata":"3b7a3d14"},"/blog/tags/documentation-970":{"__comp":"6875c492","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","items":[{"content":"7661071f"}],"tag":"38f00f86","listMetadata":"992a3bb7"},"/blog/tags/infosum-514":{"__comp":"6875c492","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","items":[{"content":"7661071f"}],"tag":"9f12a79a","listMetadata":"3bd45752"},"/blog/tags/welcome-2eb":{"__comp":"6875c492","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","items":[{"content":"7661071f"}],"tag":"f6ba3702","listMetadata":"a24beb83"},"/blog/welcome-8ce":{"__comp":"ccc49370","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","content":"d9f32620"},"/markdown-page-68a":{"__comp":"1f391b9e","__context":{"plugin":"ba5a679b"},"content":"393be207"},"/docs-cac":{"__comp":"1be78505","__context":{"plugin":"cd14c842"},"versionMetadata":"935f2afb"},"/docs/intro-aed":{"__comp":"17896441","content":"0e384e19"},"/-bd9":{"__comp":"1df93b7f","__context":{"plugin":"ba5a679b"},"config":"5e9f5e1a"}}')}},function(e){e.O(0,[532],(function(){return n=9383,e(e.s=n);var n}));e.O()}]);